{
  "contractName": "MockUniswapV2Pair",
  "sourceName": "contracts/test/MockUniswapV2Pair.sol",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0In",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1In",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount0Out",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount1Out",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Swap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "reserve0",
          "type": "uint112"
        },
        {
          "indexed": false,
          "internalType": "uint112",
          "name": "reserve1",
          "type": "uint112"
        }
      ],
      "name": "Sync",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINIMUM_LIQUIDITY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount0",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserves",
      "outputs": [
        {
          "internalType": "uint112",
          "name": "reserve0",
          "type": "uint112"
        },
        {
          "internalType": "uint112",
          "name": "reserve1",
          "type": "uint112"
        },
        {
          "internalType": "uint32",
          "name": "blockTimestampLast",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "kLast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price0CumulativeLast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price1CumulativeLast",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint112",
          "name": "reserve0",
          "type": "uint112"
        },
        {
          "internalType": "uint112",
          "name": "reserve1",
          "type": "uint112"
        }
      ],
      "name": "setReserves",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "skim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount0Out",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount1Out",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sync",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061068a806100206000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a71461027f578063d505accf146103b3578063dd62ed3e146103ca578063fff6cae9146101de57600080fd5b8063ba9a7a561461029a578063bc25cf771461039c578063c45a0155146103ad57600080fd5b80637ecebe00116100d35780637ecebe00146102e357806389afcb441461034d57806395d89b4114610378578063a9059cbb1461025957600080fd5b806370a08231146102e35780637464fc3d1461029a57806375ea5f2e146102f757600080fd5b806330adf81f11610166578063485cc95511610140578063485cc955146102d15780635909c0d51461029a5780635a3d54931461029a5780636a627842146102e357600080fd5b806330adf81f1461029a578063313ce567146102c25780633644e5151461029a57600080fd5b8063095ea7b3116101a2578063095ea7b3146102595780630dfe16811461027f57806318160ddd1461029a57806323b872dd146102ab57600080fd5b8063022c0d9f146101c957806306fdde03146101e05780630902f1ac1461021e575b600080fd5b6101de6101d736600461056b565b5050505050565b005b60408051808201909152601081526f436172746573692d457468657265756d60801b60208201525b60405161021591906105ff565b60405180910390f35b600054604080516001600160701b038084168252600160701b8404166020820152600160e01b90920463ffffffff1690820152606001610215565b61026f610267366004610517565b600192915050565b6040519015158152602001610215565b60005b6040516001600160a01b039091168152602001610215565b60005b604051908152602001610215565b61026f6102b9366004610468565b60019392505050565b60405160128152602001610215565b6101de6102df366004610435565b5050565b61029d6102f1366004610413565b50600090565b6101de610305366004610541565b6000805463ffffffff4216600160e01b026001600160e01b036001600160701b03948516600160701b026001600160e01b031990931694909516939093171792909216179055565b61036361035b366004610413565b600080915091565b60408051928352602083019190915201610215565b604080518082019091526008815267086a8a6925a8aa8960c31b6020820152610208565b6101de6103aa366004610413565b50565b30610282565b6101de6103c13660046104a4565b50505050505050565b61029d6103d8366004610435565b600092915050565b80356001600160a01b03811681146103f757600080fd5b919050565b80356001600160701b03811681146103f757600080fd5b60006020828403121561042557600080fd5b61042e826103e0565b9392505050565b6000806040838503121561044857600080fd5b610451836103e0565b915061045f602084016103e0565b90509250929050565b60008060006060848603121561047d57600080fd5b610486846103e0565b9250610494602085016103e0565b9150604084013590509250925092565b600080600080600080600060e0888a0312156104bf57600080fd5b6104c8886103e0565b96506104d6602089016103e0565b95506040880135945060608801359350608088013560ff811681146104fa57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561052a57600080fd5b610533836103e0565b946020939093013593505050565b6000806040838503121561055457600080fd5b61055d836103fc565b915061045f602084016103fc565b60008060008060006080868803121561058357600080fd5b853594506020860135935061059a604087016103e0565b9250606086013567ffffffffffffffff808211156105b757600080fd5b818801915088601f8301126105cb57600080fd5b8135818111156105da57600080fd5b8960208285010111156105ec57600080fd5b9699959850939650602001949392505050565b600060208083528351808285015260005b8181101561062c57858101830151858201604001528201610610565b8181111561063e576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212209cff814a3d12c58c341b72e25c1e019c51febba8903f55c5727c207ba82400f764736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a71461027f578063d505accf146103b3578063dd62ed3e146103ca578063fff6cae9146101de57600080fd5b8063ba9a7a561461029a578063bc25cf771461039c578063c45a0155146103ad57600080fd5b80637ecebe00116100d35780637ecebe00146102e357806389afcb441461034d57806395d89b4114610378578063a9059cbb1461025957600080fd5b806370a08231146102e35780637464fc3d1461029a57806375ea5f2e146102f757600080fd5b806330adf81f11610166578063485cc95511610140578063485cc955146102d15780635909c0d51461029a5780635a3d54931461029a5780636a627842146102e357600080fd5b806330adf81f1461029a578063313ce567146102c25780633644e5151461029a57600080fd5b8063095ea7b3116101a2578063095ea7b3146102595780630dfe16811461027f57806318160ddd1461029a57806323b872dd146102ab57600080fd5b8063022c0d9f146101c957806306fdde03146101e05780630902f1ac1461021e575b600080fd5b6101de6101d736600461056b565b5050505050565b005b60408051808201909152601081526f436172746573692d457468657265756d60801b60208201525b60405161021591906105ff565b60405180910390f35b600054604080516001600160701b038084168252600160701b8404166020820152600160e01b90920463ffffffff1690820152606001610215565b61026f610267366004610517565b600192915050565b6040519015158152602001610215565b60005b6040516001600160a01b039091168152602001610215565b60005b604051908152602001610215565b61026f6102b9366004610468565b60019392505050565b60405160128152602001610215565b6101de6102df366004610435565b5050565b61029d6102f1366004610413565b50600090565b6101de610305366004610541565b6000805463ffffffff4216600160e01b026001600160e01b036001600160701b03948516600160701b026001600160e01b031990931694909516939093171792909216179055565b61036361035b366004610413565b600080915091565b60408051928352602083019190915201610215565b604080518082019091526008815267086a8a6925a8aa8960c31b6020820152610208565b6101de6103aa366004610413565b50565b30610282565b6101de6103c13660046104a4565b50505050505050565b61029d6103d8366004610435565b600092915050565b80356001600160a01b03811681146103f757600080fd5b919050565b80356001600160701b03811681146103f757600080fd5b60006020828403121561042557600080fd5b61042e826103e0565b9392505050565b6000806040838503121561044857600080fd5b610451836103e0565b915061045f602084016103e0565b90509250929050565b60008060006060848603121561047d57600080fd5b610486846103e0565b9250610494602085016103e0565b9150604084013590509250925092565b600080600080600080600060e0888a0312156104bf57600080fd5b6104c8886103e0565b96506104d6602089016103e0565b95506040880135945060608801359350608088013560ff811681146104fa57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561052a57600080fd5b610533836103e0565b946020939093013593505050565b6000806040838503121561055457600080fd5b61055d836103fc565b915061045f602084016103fc565b60008060008060006080868803121561058357600080fd5b853594506020860135935061059a604087016103e0565b9250606086013567ffffffffffffffff808211156105b757600080fd5b818801915088601f8301126105cb57600080fd5b8135818111156105da57600080fd5b8960208285010111156105ec57600080fd5b9699959850939650602001949392505050565b600060208083528351808285015260005b8181101561062c57858101830151858201604001528201610610565b8181111561063e576000604083870101525b50601f01601f191692909201604001939250505056fea26469706673582212209cff814a3d12c58c341b72e25c1e019c51febba8903f55c5727c207ba82400f764736f6c63430008060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_4559": {
          "entryPoint": null,
          "id": 4559,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x68A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x75EA5F2E EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x485CC955 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x21E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x56B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x436172746573692D457468657265756D PUSH1 0x80 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP5 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x29D PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 OR OR SWAP3 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x363 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x86A8A6925A8AA89 PUSH1 0xC3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x208 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x413 JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH2 0x282 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x29D PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42E DUP3 PUSH2 0x3E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x451 DUP4 PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x45F PUSH1 0x20 DUP5 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x486 DUP5 PUSH2 0x3E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x494 PUSH1 0x20 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C8 DUP9 PUSH2 0x3E0 JUMP JUMPDEST SWAP7 POP PUSH2 0x4D6 PUSH1 0x20 DUP10 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x533 DUP4 PUSH2 0x3E0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55D DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x45F PUSH1 0x20 DUP5 ADD PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x59A PUSH1 0x40 DUP8 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x610 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SELFDESTRUCT DUP2 0x4A RETURNDATASIZE SLT 0xC5 DUP13 CALLVALUE SHL PUSH19 0xE25C1E019C51FEBBA8903F55C5727C207BA824 STOP 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
      "sourceMap": "861:3541:27:-:0;;;989:16;;;;;;;;;;861:3541;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@DOMAIN_SEPARATOR_4669": {
          "entryPoint": null,
          "id": 4669,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@MINIMUM_LIQUIDITY_4718": {
          "entryPoint": null,
          "id": 4718,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@PERMIT_TYPEHASH_4678": {
          "entryPoint": null,
          "id": 4678,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@allowance_4619": {
          "entryPoint": null,
          "id": 4619,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@approve_4632": {
          "entryPoint": null,
          "id": 4632,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@balanceOf_4606": {
          "entryPoint": null,
          "id": 4606,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@burn_4843": {
          "entryPoint": null,
          "id": 4843,
          "parameterSlots": 1,
          "returnSlots": 2
        },
        "@decimals_4586": {
          "entryPoint": null,
          "id": 4586,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@factory_4730": {
          "entryPoint": null,
          "id": 4730,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@getReserves_4794": {
          "entryPoint": null,
          "id": 4794,
          "parameterSlots": 0,
          "returnSlots": 3
        },
        "@initialize_4877": {
          "entryPoint": null,
          "id": 4877,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@kLast_4821": {
          "entryPoint": null,
          "id": 4821,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@mint_4832": {
          "entryPoint": null,
          "id": 4832,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@name_4568": {
          "entryPoint": null,
          "id": 4568,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@nonces_4689": {
          "entryPoint": null,
          "id": 4689,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@permit_4709": {
          "entryPoint": null,
          "id": 4709,
          "parameterSlots": 7,
          "returnSlots": 0
        },
        "@price0CumulativeLast_4803": {
          "entryPoint": null,
          "id": 4803,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@price1CumulativeLast_4812": {
          "entryPoint": null,
          "id": 4812,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@setReserves_4778": {
          "entryPoint": null,
          "id": 4778,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@skim_4863": {
          "entryPoint": null,
          "id": 4863,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@swap_4856": {
          "entryPoint": null,
          "id": 4856,
          "parameterSlots": 5,
          "returnSlots": 0
        },
        "@symbol_4577": {
          "entryPoint": null,
          "id": 4577,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@sync_4868": {
          "entryPoint": null,
          "id": 4868,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@token0_4742": {
          "entryPoint": null,
          "id": 4742,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@token1_4754": {
          "entryPoint": null,
          "id": 4754,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@totalSupply_4595": {
          "entryPoint": null,
          "id": 4595,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@transferFrom_4660": {
          "entryPoint": null,
          "id": 4660,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "@transfer_4645": {
          "entryPoint": null,
          "id": 4645,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_address": {
          "entryPoint": 992,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 1043,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_address": {
          "entryPoint": 1077,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_addresst_addresst_uint256": {
          "entryPoint": 1128,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
          "entryPoint": 1188,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 7
        },
        "abi_decode_tuple_t_addresst_uint256": {
          "entryPoint": 1303,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_uint112t_uint112": {
          "entryPoint": 1345,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_calldata_ptr": {
          "entryPoint": 1387,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 5
        },
        "abi_decode_uint112": {
          "entryPoint": 1020,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1535,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint112_t_uint112_t_uint32__to_t_uint112_t_uint112_t_uint32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:5410:28",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:28",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "63:124:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "73:29:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "95:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "82:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "82:20:28"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "73:5:28"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "165:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "174:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "177:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "167:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "167:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "167:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "124:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "135:5:28"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "150:3:28",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "155:1:28",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "146:3:28"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "146:11:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "142:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "142:19:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "131:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "131:31:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "121:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "121:42:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "114:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "114:50:28"
                      },
                      "nodeType": "YulIf",
                      "src": "111:2:28"
                    }
                  ]
                },
                "name": "abi_decode_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "42:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "53:5:28",
                    "type": ""
                  }
                ],
                "src": "14:173:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "241:135:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "251:29:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "273:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "260:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "260:20:28"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "251:5:28"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "354:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "363:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "366:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "356:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "356:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "356:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "302:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "313:5:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:30:28",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "309:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "309:42:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "299:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "299:53:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "292:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "292:61:28"
                      },
                      "nodeType": "YulIf",
                      "src": "289:2:28"
                    }
                  ]
                },
                "name": "abi_decode_uint112",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "220:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "231:5:28",
                    "type": ""
                  }
                ],
                "src": "192:184:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "451:116:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "497:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "506:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "509:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "499:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "499:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "499:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "472:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "481:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "468:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "468:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "493:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "461:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "522:39:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "551:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "532:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "532:29:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "522:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "417:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "428:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "440:6:28",
                    "type": ""
                  }
                ],
                "src": "381:186:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "659:173:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "705:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "714:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "717:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "707:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "707:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "707:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "680:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "689:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "676:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "676:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "701:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "669:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "730:39:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "759:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "740:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "740:29:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "730:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "778:48:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "811:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "822:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "807:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "807:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "788:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "788:38:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "778:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "617:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "628:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "640:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "648:6:28",
                    "type": ""
                  }
                ],
                "src": "572:260:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "941:224:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "987:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "996:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "999:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "989:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "989:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "989:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "962:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "971:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "958:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "958:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "983:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "954:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "951:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1012:39:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1041:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1022:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:29:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1012:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1060:48:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1093:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1104:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1089:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1089:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1070:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:38:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1060:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1117:42:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1144:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1155:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1140:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1140:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1127:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1127:32:28"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1117:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "891:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "902:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "914:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "922:6:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "930:6:28",
                    "type": ""
                  }
                ],
                "src": "837:328:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1340:523:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1387:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1396:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1399:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1389:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1389:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1389:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1361:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1370:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1357:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1357:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1382:3:28",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1353:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:33:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1350:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1412:39:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1441:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1422:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1422:29:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1412:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1460:48:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1493:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1504:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1489:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1489:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1470:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1470:38:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1460:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1517:42:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1544:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1555:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1540:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1540:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1527:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1527:32:28"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1517:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1568:42:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1595:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1606:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1591:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1591:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1578:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1578:32:28"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1568:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1619:46:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1649:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1660:3:28",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1645:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1645:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1632:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1632:33:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1623:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1713:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1722:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1725:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1715:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1715:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1715:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1687:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1698:5:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1705:4:28",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1694:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1694:16:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1684:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1684:27:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1677:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1677:35:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1674:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1738:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1748:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "1738:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1762:43:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1789:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1800:3:28",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1785:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1785:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1772:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1772:33:28"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "1762:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1814:43:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1841:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1852:3:28",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1837:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1837:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1824:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1824:33:28"
                      },
                      "variableNames": [
                        {
                          "name": "value6",
                          "nodeType": "YulIdentifier",
                          "src": "1814:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1258:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1269:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1281:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1289:6:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1297:6:28",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1305:6:28",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "1313:6:28",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "1321:6:28",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "1329:6:28",
                    "type": ""
                  }
                ],
                "src": "1170:693:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1955:167:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2001:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2010:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2013:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2003:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2003:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2003:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1976:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1985:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1972:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1972:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1997:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1968:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1968:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1965:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2026:39:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2055:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2036:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2036:29:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2026:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2074:42:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2101:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2112:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2097:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2097:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2084:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2084:32:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2074:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1913:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1924:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1936:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1944:6:28",
                    "type": ""
                  }
                ],
                "src": "1868:254:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2214:173:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2260:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2269:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2272:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2262:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2262:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2262:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2235:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2244:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2231:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2231:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2256:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2227:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2227:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2224:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2285:39:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2314:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint112",
                          "nodeType": "YulIdentifier",
                          "src": "2295:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2295:29:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2285:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2333:48:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2366:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2377:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2362:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2362:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint112",
                          "nodeType": "YulIdentifier",
                          "src": "2343:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2343:38:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2333:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint112t_uint112",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2172:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2183:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2195:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2203:6:28",
                    "type": ""
                  }
                ],
                "src": "2127:260:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2532:662:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2579:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2588:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2591:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2581:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2581:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2581:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2553:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2562:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2549:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2549:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2574:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2545:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2545:33:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2542:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2604:33:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2627:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2614:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2614:23:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2604:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2646:42:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2673:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2684:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2669:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2669:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2656:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:32:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2646:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2697:48:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2730:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2741:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2726:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2726:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2707:18:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2707:38:28"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2697:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2754:46:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2785:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2796:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2781:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2781:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2768:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2768:32:28"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2758:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2809:28:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2819:18:28",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2813:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2864:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2873:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2876:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2866:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2866:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2866:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2852:6:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2860:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2849:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2849:14:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2846:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2889:32:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2903:9:28"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2914:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2899:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2899:22:28"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "2893:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2969:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2978:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2981:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2971:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2971:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2971:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2948:2:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2952:4:28",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2944:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2944:13:28"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2959:7:28"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2940:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2940:27:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2933:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2933:35:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2930:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2994:30:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3021:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3008:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3008:16:28"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "2998:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3051:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3060:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3063:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3053:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3053:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3053:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3039:6:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3047:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3036:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3036:14:28"
                      },
                      "nodeType": "YulIf",
                      "src": "3033:2:28"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3117:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3126:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3129:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3119:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3119:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3119:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "3090:2:28"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3094:6:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3086:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3086:15:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3103:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3082:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3082:24:28"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3108:7:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3079:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3079:37:28"
                      },
                      "nodeType": "YulIf",
                      "src": "3076:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3142:21:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "3156:2:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3160:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3152:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3152:11:28"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3142:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3172:16:28",
                      "value": {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3182:6:28"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3172:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_calldata_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2466:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2477:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2489:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2497:6:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "2505:6:28",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "2513:6:28",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "2521:6:28",
                    "type": ""
                  }
                ],
                "src": "2392:802:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3300:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3310:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3322:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3333:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3318:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3318:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3310:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3352:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3367:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3383:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3388:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3379:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3379:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3392:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3375:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3375:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3363:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3363:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3345:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3345:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3345:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3269:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3280:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3291:4:28",
                    "type": ""
                  }
                ],
                "src": "3199:203:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3502:92:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3512:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3524:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3535:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3520:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3520:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3512:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3554:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3579:6:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3572:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3572:14:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3565:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3565:22:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3547:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3547:41:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3547:41:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3471:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3482:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3493:4:28",
                    "type": ""
                  }
                ],
                "src": "3407:187:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3700:76:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3710:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3722:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3733:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3718:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3718:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3710:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3752:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3763:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3745:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3745:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3745:25:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3669:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3680:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3691:4:28",
                    "type": ""
                  }
                ],
                "src": "3599:177:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3902:476:28",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3912:12:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3922:2:28",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3916:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3940:9:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3951:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3933:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3933:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3933:21:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3963:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3983:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3977:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3977:13:28"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "3967:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4010:9:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4021:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4006:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4006:18:28"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4026:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3999:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3999:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3999:34:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4042:10:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4051:1:28",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "4046:1:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4111:90:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "4140:9:28"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "4151:1:28"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4136:3:28"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4136:17:28"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4155:2:28",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4132:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4132:26:28"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "4174:6:28"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "4182:1:28"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "4170:3:28"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4170:14:28"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "4186:2:28"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4166:3:28"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4166:23:28"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4160:5:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4160:30:28"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4125:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4125:66:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4125:66:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4072:1:28"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4075:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4069:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4069:13:28"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "4083:19:28",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "4085:15:28",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "4094:1:28"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4097:2:28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "4090:3:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4090:10:28"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "4085:1:28"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "4065:3:28",
                        "statements": []
                      },
                      "src": "4061:140:28"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4235:66:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "4264:9:28"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "4275:6:28"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "4260:3:28"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4260:22:28"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4284:2:28",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "4256:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4256:31:28"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4289:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4249:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4249:42:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4249:42:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4216:1:28"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4219:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4213:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4213:13:28"
                      },
                      "nodeType": "YulIf",
                      "src": "4210:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4310:62:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4326:9:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4345:6:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4353:2:28",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4341:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4341:15:28"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4362:2:28",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4358:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4358:7:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4337:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4337:29:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4322:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4322:45:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4369:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:54:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4310:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3871:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3882:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3893:4:28",
                    "type": ""
                  }
                ],
                "src": "3781:597:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4538:246:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4548:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4560:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4571:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4556:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4556:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4548:4:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4583:40:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4593:30:28",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4587:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4639:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4654:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4662:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4650:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4650:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4632:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4632:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4632:34:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4686:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4697:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4682:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4682:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4706:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4714:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4702:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4702:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4675:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4675:43:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4675:43:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4738:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4749:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4734:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4734:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "4758:6:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4766:10:28",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4754:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4754:23:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4727:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4727:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4727:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint112_t_uint112_t_uint32__to_t_uint112_t_uint112_t_uint32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4491:9:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4502:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4510:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4518:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4529:4:28",
                    "type": ""
                  }
                ],
                "src": "4383:401:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4890:76:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4900:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4912:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4923:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4908:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4908:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4900:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4942:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4953:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4935:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4935:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4935:25:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4859:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4870:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4881:4:28",
                    "type": ""
                  }
                ],
                "src": "4789:177:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5100:119:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5110:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5122:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5133:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5118:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5118:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5110:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5152:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5163:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5145:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5145:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5145:25:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5190:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5201:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5186:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5186:18:28"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5206:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5179:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5179:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5179:34:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5061:9:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5072:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5080:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5091:4:28",
                    "type": ""
                  }
                ],
                "src": "4971:248:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5321:87:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5331:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5343:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5354:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5339:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5339:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5331:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5373:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5388:6:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5396:4:28",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5384:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5384:17:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5366:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5366:36:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5366:36:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5290:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5301:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5312:4:28",
                    "type": ""
                  }
                ],
                "src": "5224:184:28"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_uint112(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint112t_uint112(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint112(headStart)\n        value1 := abi_decode_uint112(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_uint112_t_uint112_t_uint32__to_t_uint112_t_uint112_t_uint32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
          "id": 28,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBA9A7A56 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD21220A7 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xFFF6CAE9 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBA9A7A56 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xBC25CF77 EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7ECEBE00 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x89AFCB44 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x378 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x7464FC3D EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x75EA5F2E EQ PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x485CC955 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x5909C0D5 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x5A3D5493 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x6A627842 EQ PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x22C0D9F EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x21E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DE PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x56B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH16 0x436172746573692D457468657265756D PUSH1 0x80 SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP1 DUP5 AND DUP3 MSTORE PUSH1 0x1 PUSH1 0x70 SHL DUP5 DIV AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP3 DIV PUSH4 0xFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x517 JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x26F PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x468 JUMP JUMPDEST PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x215 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x29D PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x413 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x305 CALLDATASIZE PUSH1 0x4 PUSH2 0x541 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0xFFFFFFFF TIMESTAMP AND PUSH1 0x1 PUSH1 0xE0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB SWAP5 DUP6 AND PUSH1 0x1 PUSH1 0x70 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 OR OR SWAP3 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x363 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x413 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x215 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x8 DUP2 MSTORE PUSH8 0x86A8A6925A8AA89 PUSH1 0xC3 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x208 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x3AA CALLDATASIZE PUSH1 0x4 PUSH2 0x413 JUMP JUMPDEST POP JUMP JUMPDEST ADDRESS PUSH2 0x282 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x3C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A4 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x29D PUSH2 0x3D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x3F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x42E DUP3 PUSH2 0x3E0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x448 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x451 DUP4 PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH2 0x45F PUSH1 0x20 DUP5 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x47D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x486 DUP5 PUSH2 0x3E0 JUMP JUMPDEST SWAP3 POP PUSH2 0x494 PUSH1 0x20 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4C8 DUP9 PUSH2 0x3E0 JUMP JUMPDEST SWAP7 POP PUSH2 0x4D6 PUSH1 0x20 DUP10 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x533 DUP4 PUSH2 0x3E0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55D DUP4 PUSH2 0x3FC JUMP JUMPDEST SWAP2 POP PUSH2 0x45F PUSH1 0x20 DUP5 ADD PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH2 0x59A PUSH1 0x40 DUP8 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP9 ADD SWAP2 POP DUP9 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x5DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP PUSH1 0x20 ADD SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x62C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x610 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 SELFDESTRUCT DUP2 0x4A RETURNDATASIZE SLT 0xC5 DUP13 CALLVALUE SHL PUSH19 0xE25C1E019C51FEBBA8903F55C5727C207BA824 STOP 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
      "sourceMap": "861:3541:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4097:145;;;;;;:::i;:::-;;;;;;;;;1011:105;1084:25;;;;;;;;;;;;-1:-1:-1;;;1084:25:27;;;;1011:105;;;;;;;:::i;:::-;;;;;;;;3261:265;3361:16;3479:9;3261:265;;;-1:-1:-1;;;;;3479:9:27;;;4632:34:28;;-1:-1:-1;;;3490:9:27;;;4697:2:28;4682:18;;4675:43;-1:-1:-1;;;3501:17:27;;;;;4734:18:28;;;4727:51;4571:2;4556:18;3261:265:27;4538:246:28;1678:151:27;;;;;;:::i;:::-;1818:4;1678:151;;;;;;;;3572:14:28;;3565:22;3547:41;;3535:2;3520:18;1678:151:27;3502:92:28;2871:93:27;2921:7;2871:93;;;-1:-1:-1;;;;;3363:32:28;;;3345:51;;3333:2;3318:18;2871:93:27;3300:102:28;1318:89:27;2921:7;1318:89;;;3745:25:28;;;3733:2;3718:18;1318:89:27;3700:76:28;1975:159:27;;;;;;:::i;:::-;2123:4;1975:159;;;;;;1227:85;;;1303:2;5366:36:28;;5354:2;5339:18;1227:85:27;5321:87:28;4342:58:27;;;;;;:::i;:::-;;;;3829:139;;;;;;:::i;:::-;-1:-1:-1;3920:17:27;;3829:139;3069:186;;;;;;:::i;:::-;3145:9;:20;;3205:43;3232:15;3205:43;-1:-1:-1;;;3205:43:27;-1:-1:-1;;;;;;;;;;3175:20:27;;;-1:-1:-1;;;3175:20:27;-1:-1:-1;;;;;;3175:20:27;;;3145;;;;3175;;;;;3205:43;;;;;;;3069:186;3974:117;;;;;;:::i;:::-;4051:15;4068;3974:117;;;;;;;;5145:25:28;;;5201:2;5186:18;;5179:34;;;;5118:18;3974:117:27;5100:119:28;1122:99:27;1197:17;;;;;;;;;;;;-1:-1:-1;;;1197:17:27;;;;1122:99;;4248:46;;;;;;:::i;:::-;;;2768:97;2853:4;2768:97;;2446:215;;;;;;:::i;:::-;;;;;;;;;1519:153;;;;;;:::i;:::-;1634:7;1519:153;;;;;14:173:28;82:20;;-1:-1:-1;;;;;131:31:28;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:184::-;260:20;;-1:-1:-1;;;;;309:42:28;;299:53;;289:2;;366:1;363;356:12;381:186;440:6;493:2;481:9;472:7;468:23;464:32;461:2;;;509:1;506;499:12;461:2;532:29;551:9;532:29;:::i;:::-;522:39;451:116;-1:-1:-1;;;451:116:28:o;572:260::-;640:6;648;701:2;689:9;680:7;676:23;672:32;669:2;;;717:1;714;707:12;669:2;740:29;759:9;740:29;:::i;:::-;730:39;;788:38;822:2;811:9;807:18;788:38;:::i;:::-;778:48;;659:173;;;;;:::o;837:328::-;914:6;922;930;983:2;971:9;962:7;958:23;954:32;951:2;;;999:1;996;989:12;951:2;1022:29;1041:9;1022:29;:::i;:::-;1012:39;;1070:38;1104:2;1093:9;1089:18;1070:38;:::i;:::-;1060:48;;1155:2;1144:9;1140:18;1127:32;1117:42;;941:224;;;;;:::o;1170:693::-;1281:6;1289;1297;1305;1313;1321;1329;1382:3;1370:9;1361:7;1357:23;1353:33;1350:2;;;1399:1;1396;1389:12;1350:2;1422:29;1441:9;1422:29;:::i;:::-;1412:39;;1470:38;1504:2;1493:9;1489:18;1470:38;:::i;:::-;1460:48;;1555:2;1544:9;1540:18;1527:32;1517:42;;1606:2;1595:9;1591:18;1578:32;1568:42;;1660:3;1649:9;1645:19;1632:33;1705:4;1698:5;1694:16;1687:5;1684:27;1674:2;;1725:1;1722;1715:12;1674:2;1340:523;;;;-1:-1:-1;1340:523:28;;;;1748:5;1800:3;1785:19;;1772:33;;-1:-1:-1;1852:3:28;1837:19;;;1824:33;;1340:523;-1:-1:-1;;1340:523:28:o;1868:254::-;1936:6;1944;1997:2;1985:9;1976:7;1972:23;1968:32;1965:2;;;2013:1;2010;2003:12;1965:2;2036:29;2055:9;2036:29;:::i;:::-;2026:39;2112:2;2097:18;;;;2084:32;;-1:-1:-1;;;1955:167:28:o;2127:260::-;2195:6;2203;2256:2;2244:9;2235:7;2231:23;2227:32;2224:2;;;2272:1;2269;2262:12;2224:2;2295:29;2314:9;2295:29;:::i;:::-;2285:39;;2343:38;2377:2;2366:9;2362:18;2343:38;:::i;2392:802::-;2489:6;2497;2505;2513;2521;2574:3;2562:9;2553:7;2549:23;2545:33;2542:2;;;2591:1;2588;2581:12;2542:2;2627:9;2614:23;2604:33;;2684:2;2673:9;2669:18;2656:32;2646:42;;2707:38;2741:2;2730:9;2726:18;2707:38;:::i;:::-;2697:48;;2796:2;2785:9;2781:18;2768:32;2819:18;2860:2;2852:6;2849:14;2846:2;;;2876:1;2873;2866:12;2846:2;2914:6;2903:9;2899:22;2889:32;;2959:7;2952:4;2948:2;2944:13;2940:27;2930:2;;2981:1;2978;2971:12;2930:2;3021;3008:16;3047:2;3039:6;3036:14;3033:2;;;3063:1;3060;3053:12;3033:2;3108:7;3103:2;3094:6;3090:2;3086:15;3082:24;3079:37;3076:2;;;3129:1;3126;3119:12;3076:2;2532:662;;;;-1:-1:-1;2532:662:28;;-1:-1:-1;3160:2:28;3152:11;;3182:6;2532:662;-1:-1:-1;;;2532:662:28:o;3781:597::-;3893:4;3922:2;3951;3940:9;3933:21;3983:6;3977:13;4026:6;4021:2;4010:9;4006:18;3999:34;4051:1;4061:140;4075:6;4072:1;4069:13;4061:140;;;4170:14;;;4166:23;;4160:30;4136:17;;;4155:2;4132:26;4125:66;4090:10;;4061:140;;;4219:6;4216:1;4213:13;4210:2;;;4289:1;4284:2;4275:6;4264:9;4260:22;4256:31;4249:42;4210:2;-1:-1:-1;4362:2:28;4341:15;-1:-1:-1;;4337:29:28;4322:45;;;;4369:2;4318:54;;3902:476;-1:-1:-1;;;3902:476:28:o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "334800",
        "executionCost": "374",
        "totalCost": "335174"
      },
      "external": {
        "DOMAIN_SEPARATOR()": "271",
        "MINIMUM_LIQUIDITY()": "226",
        "PERMIT_TYPEHASH()": "227",
        "allowance(address,address)": "infinite",
        "approve(address,uint256)": "433",
        "balanceOf(address)": "401",
        "burn(address)": "452",
        "decimals()": "245",
        "factory()": "301",
        "getReserves()": "2471",
        "initialize(address,address)": "infinite",
        "kLast()": "249",
        "mint(address)": "466",
        "name()": "infinite",
        "nonces(address)": "400",
        "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
        "price0CumulativeLast()": "248",
        "price1CumulativeLast()": "270",
        "setReserves(uint112,uint112)": "infinite",
        "skim(address)": "359",
        "swap(uint256,uint256,address,bytes)": "583",
        "symbol()": "infinite",
        "sync()": "230",
        "token0()": "270",
        "token1()": "246",
        "totalSupply()": "271",
        "transfer(address,uint256)": "498",
        "transferFrom(address,address,uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "DOMAIN_SEPARATOR()": "3644e515",
      "MINIMUM_LIQUIDITY()": "ba9a7a56",
      "PERMIT_TYPEHASH()": "30adf81f",
      "allowance(address,address)": "dd62ed3e",
      "approve(address,uint256)": "095ea7b3",
      "balanceOf(address)": "70a08231",
      "burn(address)": "89afcb44",
      "decimals()": "313ce567",
      "factory()": "c45a0155",
      "getReserves()": "0902f1ac",
      "initialize(address,address)": "485cc955",
      "kLast()": "7464fc3d",
      "mint(address)": "6a627842",
      "name()": "06fdde03",
      "nonces(address)": "7ecebe00",
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
      "price0CumulativeLast()": "5909c0d5",
      "price1CumulativeLast()": "5a3d5493",
      "setReserves(uint112,uint112)": "75ea5f2e",
      "skim(address)": "bc25cf77",
      "swap(uint256,uint256,address,bytes)": "022c0d9f",
      "symbol()": "95d89b41",
      "sync()": "fff6cae9",
      "token0()": "0dfe1681",
      "token1()": "d21220a7",
      "totalSupply()": "18160ddd",
      "transfer(address,uint256)": "a9059cbb",
      "transferFrom(address,address,uint256)": "23b872dd"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"setReserves\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/MockUniswapV2Pair.sol\":\"MockUniswapV2Pair\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin guidelines: functions revert instead\\n * of returning `false` on failure. This behavior is nonetheless conventional\\n * and does not conflict with the expectations of ERC20 applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping (address => uint256) private _balances;\\n\\n    mapping (address => mapping (address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The defaut value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor (string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        _approve(sender, _msgSender(), currentAllowance - amount);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\\n     *\\n     * This is internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        _balances[sender] = senderBalance - amount;\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        _balances[account] = accountBalance - amount;\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\\n}\\n\",\"keccak256\":\"0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\"},\"contracts/test/MockUniswapV2Pair.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\nimport \\\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract MockUniswapV2Pair is IUniswapV2Pair {\\n    uint112 _reserve0;\\n    uint112 _reserve1;\\n    uint32 _reserveTimestamp;\\n\\n    constructor() {}\\n\\n    function name() external pure override returns (string memory) {\\n        return \\\"Cartesi-Ethereum\\\";\\n    }\\n\\n    function symbol() external pure override returns (string memory) {\\n        return \\\"CTSI-ETH\\\";\\n    }\\n\\n    function decimals() external pure override returns (uint8) {\\n        return 18;\\n    }\\n\\n    function totalSupply() external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function balanceOf(address owner) external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function allowance(address owner, address spender)\\n        external\\n        pure\\n        override\\n        returns (uint256)\\n    {\\n        return 0;\\n    }\\n\\n    function approve(address spender, uint256 value)\\n        external\\n        pure\\n        override\\n        returns (bool)\\n    {\\n        return true;\\n    }\\n\\n    function transfer(address to, uint256 value)\\n        external\\n        override\\n        returns (bool)\\n    {\\n        return true;\\n    }\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external pure override returns (bool) {\\n        return true;\\n    }\\n\\n    function DOMAIN_SEPARATOR() external pure override returns (bytes32) {\\n        return 0x0;\\n    }\\n\\n    function PERMIT_TYPEHASH() external pure override returns (bytes32) {\\n        return 0x0;\\n    }\\n\\n    function nonces(address owner) external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        return;\\n    }\\n\\n    function MINIMUM_LIQUIDITY() external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function factory() external view override returns (address) {\\n        return address(this);\\n    }\\n\\n    function token0() external pure override returns (address) {\\n        return address(0);\\n    }\\n\\n    function token1() external pure override returns (address) {\\n        return address(0);\\n    }\\n\\n    function setReserves(uint112 reserve0, uint112 reserve1) external {\\n        _reserve0 = reserve0;\\n        _reserve1 = reserve1;\\n        _reserveTimestamp = uint32(block.timestamp);\\n    }\\n\\n    function getReserves()\\n        external\\n        view\\n        override\\n        returns (\\n            uint112 reserve0,\\n            uint112 reserve1,\\n            uint32 blockTimestampLast\\n        )\\n    {\\n        return (_reserve0, _reserve1, _reserveTimestamp);\\n    }\\n\\n    function price0CumulativeLast() external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function price1CumulativeLast() external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function kLast() external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    function mint(address _to)\\n        external\\n        pure\\n        override\\n        returns (uint256 liquidity)\\n    {\\n        return 0;\\n    }\\n\\n    function burn(address to)\\n        external\\n        override\\n        returns (uint256 amount0, uint256 amount1)\\n    {}\\n\\n    function swap(\\n        uint256 amount0Out,\\n        uint256 amount1Out,\\n        address to,\\n        bytes calldata data\\n    ) external override {}\\n\\n    function skim(address to) external override {}\\n\\n    function sync() external override {}\\n\\n    function initialize(address, address) external override {}\\n}\\n\",\"keccak256\":\"0x125d1d0f1b993930e141dcadf9b9255df76cbd4ef4d222fefdf64ff333ff7488\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 4551,
        "contract": "contracts/test/MockUniswapV2Pair.sol:MockUniswapV2Pair",
        "label": "_reserve0",
        "offset": 0,
        "slot": "0",
        "type": "t_uint112"
      },
      {
        "astId": 4553,
        "contract": "contracts/test/MockUniswapV2Pair.sol:MockUniswapV2Pair",
        "label": "_reserve1",
        "offset": 14,
        "slot": "0",
        "type": "t_uint112"
      },
      {
        "astId": 4555,
        "contract": "contracts/test/MockUniswapV2Pair.sol:MockUniswapV2Pair",
        "label": "_reserveTimestamp",
        "offset": 28,
        "slot": "0",
        "type": "t_uint32"
      }
    ],
    "types": {
      "t_uint112": {
        "encoding": "inplace",
        "label": "uint112",
        "numberOfBytes": "14"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}