{
  "contractName": "StakingPoolImpl",
  "sourceName": "contracts/StakingPoolImpl.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ctsi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_staking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pos",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_timeToStake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timeToRelease",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_workerManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "queued",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "notStaked",
          "type": "uint256"
        }
      ],
      "name": "BlockProduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maturationDate",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "StakingPoolRenamed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maturationDate",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "FIXED_POINT_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canCycleStakeMaturation",
      "outputs": [
        {
          "internalType": "bool",
          "name": "available",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_currentQueuedTotal",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_currentMaturingTotal",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canCycleWithdrawRelease",
      "outputs": [
        {
          "internalType": "bool",
          "name": "available",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_totalToUnstakeValue",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_totalUnstaking",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "cancelHire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ctsi",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentMaturingTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentQueuedTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentStakeEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentUnstakeEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cycleStakeMaturation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cycleWithdrawRelease",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "contract Fee",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getMaturingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getMaturingTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getReleasingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getReleasingTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddress",
          "type": "address"
        }
      ],
      "name": "getStakedBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedBalance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "hire",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pos",
      "outputs": [
        {
          "internalType": "contract IPoS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "produceBlock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "retire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardMaturing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardNotStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardQueued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfhire",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakingVoucherValueAtEpoch",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToRelease",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToStake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalStakedShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalToUnstakeShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUnstakedShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalUnstaking",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalWithdrawable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stakedPoolShares",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amountQueued",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountStaked",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "queueEpoch",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakingPoolImpl.StakingVoucher",
          "name": "stakingVoucher",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "poolShares",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "queueEpoch",
              "type": "uint256"
            }
          ],
          "internalType": "struct StakingPoolImpl.UnstakingVoucher",
          "name": "unstakingVoucher",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workerManager",
      "outputs": [
        {
          "internalType": "contract IWorkerManagerAuthManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106102b25760003560e01c8063715018a611610175578063a694fc3a116100dc578063cf39203711610095578063eca7fe171161006f578063eca7fe17146108ed578063effb839614610921578063f2fde38b14610937578063fc57d44c1461095757600080fd5b8063cf3920371461089a578063d9d6bd86146108ba578063ddca3f43146108cd57600080fd5b8063a694fc3a146107da578063b64b3bed146107fa578063bc598eef1461081a578063be2cfdff14610830578063c47f002714610846578063c56551b61461086657600080fd5b80638da5cb5b1161012e5780638da5cb5b146107015780638e9f04b51461072657806394381556146107465780639a0515451461077a5780639e6371ba1461079a578063a5a6cd0b146107ba57600080fd5b8063715018a61461066157806373a4f33b146106765780637c0de72b1461068c5780637e15d8c7146106a2578063817b1cd2146106d65780638456cb59146106ec57600080fd5b80633f15457f1161021957806356cbf7b9116101d257806356cbf7b9146105b05780635c975abb146105c557806364ffc3f4146105ef57806367ba9b91146106235780636a5030c2146106435780636ff46a6c1461065957600080fd5b80633f15457f146104dd5780633f4ba83a14610511578063419be624146105265780634779525b14610546578063485cc9551461055c5780634cf088d91461057c57600080fd5b8063134d92c81161026b578063134d92c81461041e57806327d49695146104505780632e17de78146104665780632e1a7d4d146104885780633a02a42d146104a85780633b8beb8a146104c857600080fd5b80630103c92b146102be578063030650481461036c5780630600a865146103905780630698607d146103a65780630b41aafd146103bc5780630d36533c146103d257600080fd5b366102b957005b600080fd5b3480156102ca57600080fd5b5061032f6102d93660046132bd565b600760209081526000918252604091829020805483516060810185526001830154815260028301548185015260038301548186015284518086019095526004830154855260059092015492840192909252909183565b6040805193845282516020808601919091528084015185830152920151606084015280516080840152015160a082015260c0015b60405180910390f35b34801561037857600080fd5b5061038260065481565b604051908152602001610363565b34801561039c57600080fd5b50610382600f5481565b3480156103b257600080fd5b50610382600e5481565b3480156103c857600080fd5b5061038260045481565b3480156103de57600080fd5b506104067f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610363565b34801561042a57600080fd5b5061043361096c565b604080519315158452602084019290925290820152606001610363565b34801561045c57600080fd5b50610382600d5481565b34801561047257600080fd5b5061048661048136600461341c565b610adb565b005b34801561049457600080fd5b506104866104a336600461341c565b610e18565b3480156104b457600080fd5b506103826104c33660046132bd565b61105a565b3480156104d457600080fd5b506104336111e0565b3480156104e957600080fd5b506104067f000000000000000000000000000000000000000000000000000000000000000081565b34801561051d57600080fd5b506104866112a8565b34801561053257600080fd5b506103826105413660046132bd565b6112e3565b34801561055257600080fd5b5061038260105481565b34801561056857600080fd5b506104866105773660046132f7565b611409565b34801561058857600080fd5b506104067f000000000000000000000000000000000000000000000000000000000000000081565b3480156105bc57600080fd5b506104866115be565b3480156105d157600080fd5b5060005462010000900460ff165b6040519015158152602001610363565b3480156105fb57600080fd5b506104067f000000000000000000000000000000000000000000000000000000000000000081565b34801561062f57600080fd5b5061038261063e3660046132bd565b6118de565b34801561064f57600080fd5b5061038260025481565b610486611b59565b34801561066d57600080fd5b50610486611d2e565b34801561068257600080fd5b5061038260055481565b34801561069857600080fd5b5061038260035481565b3480156106ae57600080fd5b506103827f000000000000000000000000000000000000000000000000000000000000000081565b3480156106e257600080fd5b50610382600b5481565b3480156106f857600080fd5b50610486611db2565b34801561070d57600080fd5b50600054630100000090046001600160a01b0316610406565b34801561073257600080fd5b506103826107413660046132bd565b611deb565b34801561075257600080fd5b506103827f000000000000000000000000000000000000000000000000000000000000000081565b34801561078657600080fd5b506103826107953660046132bd565b611e60565b3480156107a657600080fd5b506104866107b53660046132bd565b612020565b3480156107c657600080fd5b506105df6107d536600461341c565b61209f565b3480156107e657600080fd5b506104866107f536600461341c565b61246a565b34801561080657600080fd5b506104866108153660046132bd565b6125d8565b34801561082657600080fd5b50610382600a5481565b34801561083c57600080fd5b50610382600c5481565b34801561085257600080fd5b5061048661086136600461336b565b612626565b34801561087257600080fd5b506104067f000000000000000000000000000000000000000000000000000000000000000081565b3480156108a657600080fd5b506103826108b536600461341c565b6127ce565b6104866108c83660046132bd565b6127ef565b3480156108d957600080fd5b50600154610406906001600160a01b031681565b3480156108f957600080fd5b506103827f000000000000000000000000000000000000000000000000000000000000000081565b34801561092d57600080fd5b5061038260095481565b34801561094357600080fd5b506104866109523660046132bd565b6128e3565b34801561096357600080fd5b506104866129e5565b600080600061097c600d54612a9d565b604051638e9f04b560e01b81523060048201529092506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e9f04b59060240160206040518083038186803b1580156109e157600080fd5b505afa1580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a199190613352565b118015610abc57506040516367ba9b9160e01b815230600482015242907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906367ba9b919060240160206040518083038186803b158015610a8257600080fd5b505afa158015610a96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aba9190613352565b115b15610ace5750600e5460009391925090565b50600e5460019391925090565b33600090815260076020526040902060048101541580610b0057506006546005820154145b610b5b5760405162461bcd60e51b815260206004820152602160248201527f596f752068617665207769746864726177206265696e672070726f63657373656044820152601960fa1b60648201526084015b60405180910390fd5b610b6433612b05565b6000610b6f83612bc6565b905060008111610bcc5760405162461bcd60e51b815260206004820152602260248201527f746865726520617265206e6f2073686172657320746f20626520756e7374616b604482015261195960f21b6064820152608401610b52565b80826004016000016000828254610be3919061350d565b9091555050600482015482541015610c4b5760405162461bcd60e51b815260206004820152602560248201527f556e7374616b6520616d6f756e74206973206f766572207374616b65642062616044820152646c616e636560d81b6064820152608401610b52565b80600d6000828254610c5d919061350d565b90915550506006546005830155604051638e9f04b560e01b815230600482015260009081907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e9f04b59060240160206040518083038186803b158015610cce57600080fd5b505afa158015610ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d069190613352565b1115610daa576040516367ba9b9160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906367ba9b919060240160206040518083038186803b158015610d6b57600080fd5b505afa158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da39190613352565b9050610dad565b50425b337ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28085610dfa7f00000000000000000000000000000000000000000000000000000000000000008561350d565b6040805192835260208301919091520160405180910390a250505050565b336000908152600760205260409020600481015415801590610e4b57506006546005820154610e4890600261350d565b11155b610e975760405162461bcd60e51b815260206004820181905260248201527f596f7520646f6e27742068617665207265616c65617365642062616c616e63656044820152606401610b52565b610ea033612b05565b6000610eab83612c18565b90508082600401600001541015610f185760405162461bcd60e51b815260206004820152602b60248201527f4e6f7420656e6f7567682062616c616e636520666f722074686973207769746860448201526a191c985dc8185b5bdd5b9d60aa1b6064820152608401610b52565b80826004016000016000828254610f2f9190613566565b9091555050815481908390600090610f48908490613566565b9250508190555082600f6000828254610f619190613566565b925050819055508060106000828254610f7a9190613566565b909155505060405163a9059cbb60e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610fe757600080fd5b505af1158015610ffb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101f9190613330565b5060405183815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a2505050565b6001600160a01b03811660009081526007602052604081208161107f60018301612c54565b60065460058401549192506000918291111561109d57600484015491505b600c54156110ca5783546110b2908390613566565b6110bc908461350d565b92506110c783612a9d565b90505b604051639a05154560e01b815230600482015242907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639a0515459060240160206040518083038186803b15801561112b57600080fd5b505afa15801561113f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111639190613352565b10156111d7576000600554600161117a919061350d565b6003860154909150819061118f90600161350d565b14156111ab5760028501546111a4908361350d565b91506111d5565b600385015481906111bd90600261350d565b14156111d55760018501546111d2908361350d565b91505b505b95945050505050565b604051639a05154560e01b81523060048201526000908190819042906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a0515459060240160206040518083038186803b15801561124857600080fd5b505afa15801561125c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112809190613352565b1115611297575050600954600a5460009391925090565b5050600954600a5460019391925090565b600054630100000090046001600160a01b031633146112d95760405162461bcd60e51b8152600401610b52906134d8565b6112e1612d19565b565b6001600160a01b038181166000908152600760205260408082206005549151639a05154560e01b81523060048201529293909284929142917f000000000000000000000000000000000000000000000000000000000000000090911690639a0515459060240160206040518083038186803b15801561136157600080fd5b505afa158015611375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113999190613352565b10156113ad57806113a98161357d565b9150505b600383015481906113bf90600161350d565b11156113d75760028301546113d4908361350d565b91505b600383015481906113e990600261350d565b11156114015760018301546113fe908361350d565b91505b509392505050565b600054610100900460ff1680611422575060005460ff16155b61143e5760405162461bcd60e51b8152600401610b529061348a565b600054610100900460ff16158015611460576000805461ffff19166101011790555b61146982612db4565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b1580156114f457600080fd5b505af1158015611508573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061152c9190613330565b61158c5760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f20617070726f7665204354534920666f72207374616b6960448201526a1b99c818dbdb9d1c9858dd60aa1b6064820152608401610b52565b600180546001600160a01b0319166001600160a01b03851617905580156115b9576000805461ff00191690555b505050565b604051638e9f04b560e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e9f04b59060240160206040518083038186803b15801561162057600080fd5b505afa158015611634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116589190613352565b905060008111801561170057506040516367ba9b9160e01b815230600482015242907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906367ba9b919060240160206040518083038186803b1580156116c657600080fd5b505afa1580156116da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fe9190613352565b115b156117085750565b600d541580156117185750600e54155b156117205750565b80156117a157604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561178857600080fd5b505af115801561179c573d6000803e3d6000fd5b505050505b600d5460009015611858576003546117ba600d54612a9d565b6117c49190613566565b90508015611858576040516305c2fbcf60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e17de7890602401600060405180830381600087803b15801561182e57600080fd5b505af1158015611842573d6000803e3d6000fd5b5050505080600b546118549190613566565b600b555b600d54600c600082825461186c9190613566565b9091555050600d546010805460009061188690849061350d565b90915550506000600d55600354600e546118a0919061350d565b600f60008282546118b1919061350d565b909155505060006003819055600e82905560068054600192906118d590849061350d565b90915550505050565b6001600160a01b03811660009081526007602052604081206005015460065461190882600161350d565b14156119ac576040516367ba9b9160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906367ba9b919060240160206040518083038186803b15801561196d57600080fd5b505afa158015611981573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119a59190613352565b9392505050565b604051638e9f04b560e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638e9f04b59060240160206040518083038186803b158015611a0e57600080fd5b505afa158015611a22573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a469190613352565b118015611a54575060065481145b15611b1c576040516367ba9b9160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906367ba9b919060240160206040518083038186803b158015611ada57600080fd5b505afa158015611aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b129190613352565b6119a5919061350d565b600654811415611b50576119a57f00000000000000000000000000000000000000000000000000000000000000004261350d565b50600092915050565b604051636ceb5ec360e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d9d6bd869034906024016000604051808303818588803b158015611bbb57600080fd5b505af1158015611bcf573d6000803e3d6000fd5b5050604051632bef459560e01b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000169350632bef459592506044019050600060405180830381600087803b158015611c5e57600080fd5b505af1158015611c72573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b789b7e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015611cd157600080fd5b505af1158015611ce5573d6000803e3d6000fd5b5050600080546040516001600160a01b0363010000009092049190911693503480156108fc02935091818181858888f19350505050158015611d2b573d6000803e3d6000fd5b50565b600054630100000090046001600160a01b03163314611d5f5760405162461bcd60e51b8152600401610b52906134d8565b6000805460405163010000009091046001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546301000000600160b81b0319169055565b600054630100000090046001600160a01b03163314611de35760405162461bcd60e51b8152600401610b52906134d8565b6112e1612e75565b6001600160a01b03811660009081526007602052604081206006546005820154600490920191148015611e1f5750600c5415155b15611e2f5780546119a590612a9d565b600654600180830154611e419161350d565b11158015611e50575060105415155b15611b505780546119a590612efa565b6005546001600160a01b038216600090815260076020526040812060030154909190611e8d90600161350d565b1415611f3057604051639a05154560e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639a0515459060240160206040518083038186803b158015611ef257600080fd5b505afa158015611f06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f2a9190613352565b92915050565b6005546001600160a01b038316600090815260076020526040902060030154141561201857604051639a05154560e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690639a0515459060240160206040518083038186803b158015611fd657600080fd5b505afa158015611fea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061200e9190613352565b611f2a919061350d565b506000919050565b604051634f31b8dd60e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639e6371ba906024015b600060405180830381600087803b15801561208457600080fd5b505af1158015612098573d6000803e3d6000fd5b5050505050565b604051639a05154560e01b8152306004820152600090819042906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a0515459060240160206040518083038186803b15801561210557600080fd5b505afa158015612119573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061213d9190613352565b118015915061214e5761214e612f31565b6040516385425f4f60e01b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906385425f4f9060240160206040518083038186803b1580156121b157600080fd5b505afa1580156121c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121e991906132da565b6001600160a01b0316638aec85426040518163ffffffff1660e01b815260040160206040518083038186803b15801561222157600080fd5b505afa158015612235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122599190613352565b60405163a5a6cd0b60e01b8152600481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a5a6cd0b90602401602060405180830381600087803b1580156122be57600080fd5b505af11580156122d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f69190613330565b50600154604051632c7f22b560e21b815260048101869052602481018390526000916001600160a01b03169063b1fc8ad49060440160206040518083038186803b15801561234357600080fd5b505afa158015612357573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061237b9190613352565b90506123a061239a6000546001600160a01b0363010000009091041690565b82612fa3565b60006123ac8284613566565b905060006123c6600254836123c1919061350d565b613114565b905080600360008282546123da919061350d565b909155505060025481906123ee908461350d565b6123f89190613566565b600281905560035460408051878152602081018790529081019290925260608201527febde3bbd8b975e8ef263501eafb2f271cb2d5583cf2f353e16bbd49b3577c88c9060800160405180910390a184156124555761245561318b565b61245d6115be565b5060019695505050505050565b60005462010000900460ff16156124b65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610b52565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561252457600080fd5b505af1158015612538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061255c9190613330565b6125ce5760405162461bcd60e51b815260206004820152603860248201527f416c6c6f77616e6365206f66204354534920746f6b656e73206e6f7420656e6f60448201527f75676820746f206d6174636820616d6f756e742073656e7400000000000000006064820152608401610b52565b611d2b3382612fa3565b60405163b64b3bed60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063b64b3bed9060240161206a565b600054630100000090046001600160a01b031633146126575760405162461bcd60e51b8152600401610b52906134d8565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be39060240160206040518083038186803b1580156126d957600080fd5b505afa1580156126ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061271191906132da565b60405163c47f002760e01b81529091506001600160a01b0382169063c47f002790612740908590600401613435565b602060405180830381600087803b15801561275a57600080fd5b505af115801561276e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127929190613352565b507f6aaa0865532d48a9a0f63cc91df7ff2ab538c896665c864ae02d0a1e7f81cf65826040516127c29190613435565b60405180910390a15050565b600881815481106127de57600080fd5b600091825260209091200154905081565b604051636ceb5ec360e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d9d6bd869034906024016000604051808303818588803b15801561285357600080fd5b505af1158015612867573d6000803e3d6000fd5b5050604051632bef459560e01b81526001600160a01b0385811660048301527f0000000000000000000000000000000000000000000000000000000000000000811660248301527f0000000000000000000000000000000000000000000000000000000000000000169350632bef45959250604401905061206a565b600054630100000090046001600160a01b031633146129145760405162461bcd60e51b8152600401610b52906134d8565b6001600160a01b0381166129795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610b52565b600080546040516001600160a01b0380851693630100000090930416917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166301000000026301000000600160b81b0319909216919091179055565b604051639a05154560e01b815230600482015260009042906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639a0515459060240160206040518083038186803b158015612a4957600080fd5b505afa158015612a5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a819190613352565b1115905080612a8d5750565b612a95612f31565b611d2b61318b565b6000600c5460001415612ab257506000919050565b6000600254600354600454612ac7919061350d565b612ad1919061350d565b9050600081600b54612ae3919061350d565b600c54909150612af38286613547565b612afd9190613525565b949350505050565b6001600160a01b038116600090815260076020526040902060038101546001820154158015612b3657506002820154155b80612b42575060055481145b15612b4c57505050565b612b5882600101612c54565b826000016000828254612b6b919061350d565b9091555050600554612b7e82600161350d565b1415612ba0576001820180546002840155600090556005546003830155505050565b600554612bae82600261350d565b116115b9576000600283018190556001830155505050565b600080600354600254600454612bdc919061350d565b612be6919061350d565b9050600081600b54612bf8919061350d565b905080612c09575060009392505050565b80600c5485612af39190613547565b600080600f54600e54612c2b919061350d565b905080612c3b5750600092915050565b8060105484612c4a9190613547565b6119a59190613525565b600060055482600201546002612c6a919061350d565b11612ca3576008826002015481548110612c8657612c866135ae565b90600052602060002001548260000154612ca09190613547565b90505b60008260020154118015612cc857506005546002830154612cc590600161350d565b11155b15612d1457600860018360020154612ce09190613566565b81548110612cf057612cf06135ae565b90600052602060002001548260010154612d0a9190613547565b611f2a908261350d565b919050565b60005462010000900460ff16612d685760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b52565b6000805462ff0000191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054610100900460ff1680612dcd575060005460ff16155b612de95760405162461bcd60e51b8152600401610b529061348a565b600054610100900460ff16158015612e0b576000805461ffff19166101011790555b600080546301000000600160b81b03191663010000006001600160a01b0385169081029190911782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015612e71576000805461ff00191690555b5050565b60005462010000900460ff1615612ec15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610b52565b6000805462ff00001916620100001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612d973390565b600060105460001415612f0f57506000919050565b6000600f54600e54612f21919061350d565b601054909150612c4a8285613547565b6001600554106112e1576000612f4561324b565b9050612f508161328c565b600c55600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301819055600a54600b54612f98919061350d565b600b55506000600a55565b612fac82612b05565b6001600160a01b038216600090815260076020526040902060010154612fd390829061350d565b6001600160a01b0383166000908152600760205260409020600181019190915560055460039091015560095461300a90829061350d565b600955604051639a05154560e01b81523060048201526001600160a01b03838116917f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b69184917f0000000000000000000000000000000000000000000000000000000000000000917f00000000000000000000000000000000000000000000000000000000000000001690639a0515459060240160206040518083038186803b1580156130b657600080fd5b505afa1580156130ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130ee9190613352565b6130f8919061350d565b6040805192835260208301919091520160405180910390a25050565b60008082600354600454600b5461312b919061350d565b613135919061350d565b61313f919061350d565b90506000600c5482600d546131549190613547565b61315e9190613525565b90506000600354826131709190613566565b90508085111561318257949350505050565b50929392505050565b60025460095461319b919061350d565b600a8190551561322457600a5460405163534a7e1d60e11b815260048101919091527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a694fc3a90602401600060405180830381600087803b15801561320b57600080fd5b505af115801561321f573d6000803e3d6000fd5b505050505b60028054600455600090819055600981905560058054916132448361357d565b9190505550565b60006005546001141561327d57507f000000000000000000000000000000000000000000000000000000000000000090565b6132876001612bc6565b905090565b600080600454600a5461329f9190613566565b905060006132ad8483613547565b905080600c54612afd919061350d565b6000602082840312156132cf57600080fd5b81356119a5816135da565b6000602082840312156132ec57600080fd5b81516119a5816135da565b6000806040838503121561330a57600080fd5b8235613315816135da565b91506020830135613325816135da565b809150509250929050565b60006020828403121561334257600080fd5b815180151581146119a557600080fd5b60006020828403121561336457600080fd5b5051919050565b60006020828403121561337d57600080fd5b813567ffffffffffffffff8082111561339557600080fd5b818401915084601f8301126133a957600080fd5b8135818111156133bb576133bb6135c4565b604051601f8201601f19908116603f011681019083821181831017156133e3576133e36135c4565b816040528281528760208487010111156133fc57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561342e57600080fd5b5035919050565b600060208083528351808285015260005b8181101561346257858101830151858201604001528201613446565b81811115613474576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561352057613520613598565b500190565b60008261354257634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561356157613561613598565b500290565b60008282101561357857613578613598565b500390565b600060001982141561359157613591613598565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114611d2b57600080fdfea26469706673582212208c4a8afc7cbc8a55fc2ceb377c0cde3718cb743ba539d9ce5e029ec8f30d0d7664736f6c63430008060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canCycleStakeMaturation()": {
        "returns": {
          "available": "true if cycleStakeMaturation can bee called                   false if it can not         _currentQueuedTotal how much is waiting to be staked"
        }
      },
      "canCycleWithdrawRelease()": {
        "returns": {
          "available": "true if cycleWithdrawRelease can bee called                   false if it can not         _totalToUnstakeValue how much is waiting to be unstaked"
        }
      },
      "cancelHire(address)": {
        "params": {
          "workerAddress": "address of the worker node"
        }
      },
      "getMaturingBalance(address)": {
        "returns": {
          "_0": "amount that will get staked after finalization"
        }
      },
      "getMaturingTimestamp(address)": {
        "returns": {
          "_0": "timestamp of when cycleStakeMaturation() is callable"
        }
      },
      "getReleasingBalance(address)": {
        "returns": {
          "_0": "amount that will get withdrawn after finalization"
        }
      },
      "getReleasingTimestamp(address)": {
        "returns": {
          "_0": "timestamp of when withdraw() is callable"
        }
      },
      "getStakedBalance(address)": {
        "params": {
          "_userAddress": "user to retrieve staked balance from"
        },
        "returns": {
          "stakedBalance": "is the finalized staked of _userAddress"
        }
      },
      "hire(address)": {
        "params": {
          "workerAddress": "address of the worker"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "produceBlock(uint256)": {
        "returns": {
          "_0": "true when everything went fine"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retire(address)": {
        "details": "this also removes all authorizations in place",
        "params": {
          "workerAddress": "address of the worker to be retired"
        }
      },
      "stake(uint256)": {
        "params": {
          "_amount": "The amount of tokens that are gonna be additionally deposited."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unstake(uint256)": {
        "params": {
          "_amount": "The amount of tokens that are gonna be unstaked."
        }
      },
      "withdraw(uint256)": {
        "params": {
          "_amount": "The amount of tokens that are gonna be transferred."
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_2568": {
          "entryPoint": null,
          "id": 2568,
          "parameterSlots": 7,
          "returnSlots": 0
        },
        "@_4153": {
          "entryPoint": null,
          "id": 4153,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@_902": {
          "entryPoint": null,
          "id": 902,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_msgSender_1588": {
          "entryPoint": null,
          "id": 1588,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_pause_950": {
          "entryPoint": 860,
          "id": 950,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@initialize_4173": {
          "entryPoint": 591,
          "id": 4173,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@paused_911": {
          "entryPoint": null,
          "id": 911,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "abi_decode_address_fromMemory": {
          "entryPoint": 1032,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_addresst_address_fromMemory": {
          "entryPoint": 1061,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 7
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:2242:28",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:28",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:117:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "84:22:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "99:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "93:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:13:28"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "84:5:28"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "169:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "178:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "181:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "171:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "171:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "171:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "128:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "139:5:28"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "154:3:28",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "159:1:28",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:3:28"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "150:11:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "163:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:19:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "135:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "135:31:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "125:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "125:42:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "118:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:50:28"
                      },
                      "nodeType": "YulIf",
                      "src": "115:2:28"
                    }
                  ]
                },
                "name": "abi_decode_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "53:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "64:5:28",
                    "type": ""
                  }
                ],
                "src": "14:177:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "379:491:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "426:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "435:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "438:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "428:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "428:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "428:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "400:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "409:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "396:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "396:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "421:3:28",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "392:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:33:28"
                      },
                      "nodeType": "YulIf",
                      "src": "389:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "451:50:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "491:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "461:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "461:40:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "451:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "510:59:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "554:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "565:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "550:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "550:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "520:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "520:49:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "510:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "578:59:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "622:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "633:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "618:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "618:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "588:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "588:49:28"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "578:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "646:35:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "666:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "677:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "662:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "662:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "656:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "656:25:28"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "646:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "690:36:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "710:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "721:3:28",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "706:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "706:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "700:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "700:26:28"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "690:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "735:60:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "779:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "790:3:28",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "775:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "775:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "745:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "745:50:28"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "735:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "804:60:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "848:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "859:3:28",
                                "type": "",
                                "value": "192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "844:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "844:19:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "814:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "814:50:28"
                      },
                      "variableNames": [
                        {
                          "name": "value6",
                          "nodeType": "YulIdentifier",
                          "src": "804:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_addresst_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "297:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "308:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "320:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "328:6:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "336:6:28",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "344:6:28",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "352:6:28",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "360:6:28",
                    "type": ""
                  },
                  {
                    "name": "value6",
                    "nodeType": "YulTypedName",
                    "src": "368:6:28",
                    "type": ""
                  }
                ],
                "src": "196:674:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "976:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "986:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "998:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1009:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "994:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "994:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "986:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1028:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1043:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1059:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1064:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1055:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1055:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1068:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1051:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1051:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1039:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1039:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1021:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1021:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1021:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "945:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "956:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "967:4:28",
                    "type": ""
                  }
                ],
                "src": "875:203:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1257:223:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1274:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1285:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1267:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1267:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1267:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1308:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1319:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1304:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1304:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1324:2:28",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1297:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1297:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1347:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1358:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1343:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1343:18:28"
                          },
                          {
                            "hexValue": "706172616d657465722063616e206e6f74206265207a65726f20616464726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1363:34:28",
                            "type": "",
                            "value": "parameter can not be zero addres"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1336:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1336:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1418:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1429:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1414:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1414:18:28"
                          },
                          {
                            "hexValue": "73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1434:3:28",
                            "type": "",
                            "value": "s"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1407:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1407:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1407:31:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1447:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1459:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1470:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1455:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1455:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1447:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1234:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1248:4:28",
                    "type": ""
                  }
                ],
                "src": "1083:397:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1659:166:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1676:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1687:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1669:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1669:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1669:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1710:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1721:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1706:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1706:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1726:2:28",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1699:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1699:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1699:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1749:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1760:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1745:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1745:18:28"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1765:18:28",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1738:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1738:46:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1738:46:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1793:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1805:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1816:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1801:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1801:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1793:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1636:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1650:4:28",
                    "type": ""
                  }
                ],
                "src": "1485:340:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2004:236:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2021:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2032:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2014:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2014:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2014:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2055:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2066:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2051:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2051:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2071:2:28",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2044:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2044:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2044:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2094:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2105:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2090:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2090:18:28"
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2110:34:28",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2083:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2083:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2083:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2165:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2176:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2161:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2161:18:28"
                          },
                          {
                            "hexValue": "647920696e697469616c697a6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2181:16:28",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2154:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2154:44:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2154:44:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2207:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2230:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2215:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2215:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2207:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1981:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1995:4:28",
                    "type": ""
                  }
                ],
                "src": "1830:410:28"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := abi_decode_address_fromMemory(add(headStart, 160))\n        value6 := abi_decode_address_fromMemory(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"parameter can not be zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n}",
          "id": 28,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH2 0x180 PUSH1 0x40 MSTORE PUSH3 0xF4240 PUSH2 0x160 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3C88 CODESIZE SUB DUP1 PUSH3 0x3C88 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x3D SWAP2 PUSH3 0x425 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE DUP2 DUP2 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3C68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3C68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x143 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3C68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP4 DUP2 SHL DUP3 AND PUSH1 0xC0 MSTORE DUP3 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH3 0x171 PUSH1 0x0 PUSH3 0x24F JUMP JUMPDEST PUSH3 0x17B PUSH3 0x35C JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH3 0x1CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3C68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH3 0x220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x3C68 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x98 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP6 DUP7 SHL DUP2 AND PUSH1 0xE0 MSTORE SWAP4 SWAP1 SWAP5 SHL SWAP1 SWAP3 AND PUSH2 0x100 MSTORE POP PUSH2 0x120 MSTORE PUSH2 0x140 MSTORE PUSH3 0x4A8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x269 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH3 0x2CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0x2F1 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH4 0x1000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH3 0x358 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH3 0x36F PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH3 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x98 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH3 0x3EB CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x420 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x44C DUP9 PUSH3 0x408 JUMP JUMPDEST SWAP7 POP PUSH3 0x45C PUSH1 0x20 DUP10 ADD PUSH3 0x408 JUMP JUMPDEST SWAP6 POP PUSH3 0x46C PUSH1 0x40 DUP10 ADD PUSH3 0x408 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD MLOAD SWAP4 POP PUSH1 0x80 DUP9 ADD MLOAD SWAP3 POP PUSH3 0x48A PUSH1 0xA0 DUP10 ADD PUSH3 0x408 JUMP JUMPDEST SWAP2 POP PUSH3 0x49A PUSH1 0xC0 DUP10 ADD PUSH3 0x408 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x3625 PUSH3 0x643 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x6B4 ADD MSTORE PUSH2 0x325B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x8FF ADD MSTORE DUP2 DUP2 PUSH2 0xDD5 ADD MSTORE DUP2 DUP2 PUSH2 0x1A6E ADD MSTORE PUSH2 0x1B2B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x758 ADD MSTORE DUP2 DUP2 PUSH2 0x1F6A ADD MSTORE PUSH2 0x3052 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x58E ADD MSTORE DUP2 DUP2 PUSH2 0x99F ADD MSTORE DUP2 DUP2 PUSH2 0xA38 ADD MSTORE DUP2 DUP2 PUSH2 0xC84 ADD MSTORE DUP2 DUP2 PUSH2 0xD21 ADD MSTORE DUP2 DUP2 PUSH2 0x10E1 ADD MSTORE DUP2 DUP2 PUSH2 0x1206 ADD MSTORE DUP2 DUP2 PUSH2 0x131D ADD MSTORE DUP2 DUP2 PUSH2 0x1480 ADD MSTORE DUP2 DUP2 PUSH2 0x15D6 ADD MSTORE DUP2 DUP2 PUSH2 0x167C ADD MSTORE DUP2 DUP2 PUSH2 0x173C ADD MSTORE DUP2 DUP2 PUSH2 0x17E2 ADD MSTORE DUP2 DUP2 PUSH2 0x1923 ADD MSTORE DUP2 DUP2 PUSH2 0x19C4 ADD MSTORE DUP2 DUP2 PUSH2 0x1A90 ADD MSTORE DUP2 DUP2 PUSH2 0x1EA8 ADD MSTORE DUP2 DUP2 PUSH2 0x1F8C ADD MSTORE DUP2 DUP2 PUSH2 0x20C3 ADD MSTORE DUP2 DUP2 PUSH2 0x2A07 ADD MSTORE DUP2 DUP2 PUSH2 0x3074 ADD MSTORE PUSH2 0x31BF ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x601 ADD MSTORE DUP2 DUP2 PUSH2 0xF9B ADD MSTORE DUP2 DUP2 PUSH2 0x14B0 ADD MSTORE PUSH2 0x24D8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3E4 ADD MSTORE DUP2 DUP2 PUSH2 0x1B6E ADD MSTORE DUP2 DUP2 PUSH2 0x1C16 ADD MSTORE DUP2 DUP2 PUSH2 0x1C78 ADD MSTORE DUP2 DUP2 PUSH2 0x203F ADD MSTORE DUP2 DUP2 PUSH2 0x25F7 ADD MSTORE DUP2 DUP2 PUSH2 0x280E ADD MSTORE PUSH2 0x28B0 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x878 ADD MSTORE DUP2 DUP2 PUSH2 0x1BEE ADD MSTORE DUP2 DUP2 PUSH2 0x2167 ADD MSTORE DUP2 DUP2 PUSH2 0x2272 ADD MSTORE PUSH2 0x2888 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x4EF ADD MSTORE PUSH2 0x268F ADD MSTORE PUSH2 0x3625 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xCF392037 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xECA7FE17 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xECA7FE17 EQ PUSH2 0x8ED JUMPI DUP1 PUSH4 0xEFFB8396 EQ PUSH2 0x921 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x937 JUMPI DUP1 PUSH4 0xFC57D44C EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF392037 EQ PUSH2 0x89A JUMPI DUP1 PUSH4 0xD9D6BD86 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0xB64B3BED EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xBC598EEF EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0xBE2CFDFF EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0x8E9F04B5 EQ PUSH2 0x726 JUMPI DUP1 PUSH4 0x94381556 EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0x9A051545 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x9E6371BA EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xA5A6CD0B EQ PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0x73A4F33B EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x7C0DE72B EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x7E15D8C7 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F15457F GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x56CBF7B9 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x56CBF7B9 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x64FFC3F4 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0x67BA9B91 EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x6A5030C2 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x6FF46A6C EQ PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F15457F EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x419BE624 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x4779525B EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x4CF088D9 EQ PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x134D92C8 GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x134D92C8 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x27D49695 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x3B8BEB8A EQ PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x3065048 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x600A865 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x698607D EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xB41AAFD EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xD36533C EQ PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2B9 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD DUP2 DUP7 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 0x4 DUP4 ADD SLOAD DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE DUP3 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP5 ADD MLOAD DUP6 DUP4 ADD MSTORE SWAP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 MLOAD PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x4C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0x11E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x12A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x577 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F7 JUMP JUMPDEST PUSH2 0x1409 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x15BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x63E CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x18DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x486 PUSH2 0x1B59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x1D2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x1DB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x741 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x7B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x2020 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DF PUSH2 0x7D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0x209F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x7F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0x246A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x815 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x25D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x861 CALLDATASIZE PUSH1 0x4 PUSH2 0x336B JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x8B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0x27CE JUMP JUMPDEST PUSH2 0x486 PUSH2 0x8C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x27EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x406 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x952 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x28E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x97C PUSH1 0xD SLOAD PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xABC JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE TIMESTAMP SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xACE JUMPI POP PUSH1 0xE SLOAD PUSH1 0x0 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD ISZERO DUP1 PUSH2 0xB00 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 DUP3 ADD SLOAD EQ JUMPDEST PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665207769746864726177206265696E672070726F6365737365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB64 CALLER PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F DUP4 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746865726520617265206E6F2073686172657320746F20626520756E7374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD DUP3 SLOAD LT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B6520616D6F756E74206973206F766572207374616B6564206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6C616E6365 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAD JUMP JUMPDEST POP TIMESTAMP JUMPDEST CALLER PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 DUP6 PUSH2 0xDFA PUSH32 0x0 DUP6 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE4B JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0xE48 SWAP1 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E27742068617665207265616C65617365642062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xEA0 CALLER PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP4 PUSH2 0x2C18 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520666F7220746869732077697468 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x191C985DC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF48 SWAP1 DUP5 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x107F PUSH1 0x1 DUP4 ADD PUSH2 0x2C54 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 DUP5 ADD SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 GT ISZERO PUSH2 0x109D JUMPI PUSH1 0x4 DUP5 ADD SLOAD SWAP2 POP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x10CA JUMPI DUP4 SLOAD PUSH2 0x10B2 SWAP1 DUP4 SWAP1 PUSH2 0x3566 JUMP JUMPDEST PUSH2 0x10BC SWAP1 DUP5 PUSH2 0x350D JUMP JUMPDEST SWAP3 POP PUSH2 0x10C7 DUP4 PUSH2 0x2A9D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE TIMESTAMP SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1163 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST LT ISZERO PUSH2 0x11D7 JUMPI PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x118F SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x11AB JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x11A4 SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SLOAD DUP2 SWAP1 PUSH2 0x11BD SWAP1 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x11D2 SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT ISZERO PUSH2 0x1297 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x0 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST POP POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x12E1 PUSH2 0x2D19 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 SLOAD SWAP2 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 SWAP2 TIMESTAMP SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1399 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST LT ISZERO PUSH2 0x13AD JUMPI DUP1 PUSH2 0x13A9 DUP2 PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP2 SWAP1 PUSH2 0x13BF SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST GT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x13D4 SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP2 SWAP1 PUSH2 0x13E9 SWAP1 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST GT ISZERO PUSH2 0x1401 JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x13FE SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1422 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x348A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1469 DUP3 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x158C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F20617070726F7665204354534920666F72207374616B69 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1B99C818DBDB9D1C9858DD PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1658 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1700 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE TIMESTAMP SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x1708 JUMPI POP JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO DUP1 ISZERO PUSH2 0x1718 JUMPI POP PUSH1 0xE SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1720 JUMPI POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x1858 JUMPI PUSH1 0x3 SLOAD PUSH2 0x17BA PUSH1 0xD SLOAD PUSH2 0x2A9D JUMP JUMPDEST PUSH2 0x17C4 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1858 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C2FBCF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E17DE78 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0xB SLOAD PUSH2 0x1854 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x186C SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1886 SWAP1 DUP5 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0xD SSTORE PUSH1 0x3 SLOAD PUSH1 0xE SLOAD PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18B1 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0xE DUP3 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x18D5 SWAP1 DUP5 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0x1908 DUP3 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x19AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A46 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1A54 JUMPI POP PUSH1 0x6 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B12 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 EQ ISZERO PUSH2 0x1B50 JUMPI PUSH2 0x19A5 PUSH32 0x0 TIMESTAMP PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B789B7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0x1000000 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 AND SWAP4 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP4 POP SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1000000 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x12E1 PUSH2 0x2E75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 EQ DUP1 ISZERO PUSH2 0x1E1F JUMPI POP PUSH1 0xC SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1E2F JUMPI DUP1 SLOAD PUSH2 0x19A5 SWAP1 PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH2 0x1E41 SWAP2 PUSH2 0x350D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1E50 JUMPI POP PUSH1 0x10 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1B50 JUMPI DUP1 SLOAD PUSH2 0x19A5 SWAP1 PUSH2 0x2EFA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1E8D SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x1F30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F2A SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD EQ ISZERO PUSH2 0x2018 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200E SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x1F2A SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4F31B8DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x9E6371BA SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2098 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x213D SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT DUP1 ISZERO SWAP2 POP PUSH2 0x214E JUMPI PUSH2 0x214E PUSH2 0x2F31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x85425F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x85425F4F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8AEC8542 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2259 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA5A6CD0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA5A6CD0B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F6 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C7F22B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1FC8AD4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237B SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP1 POP PUSH2 0x23A0 PUSH2 0x239A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0x1000000 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x2FA3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AC DUP3 DUP5 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23C6 PUSH1 0x2 SLOAD DUP4 PUSH2 0x23C1 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x3114 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23DA SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD DUP2 SWAP1 PUSH2 0x23EE SWAP1 DUP5 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x23F8 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xEBDE3BBD8B975E8EF263501EAFB2F271CB2D5583CF2F353E16BBD49B3577C88C SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP5 ISZERO PUSH2 0x2455 JUMPI PUSH2 0x2455 PUSH2 0x318B JUMP JUMPDEST PUSH2 0x245D PUSH2 0x15BE JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x24B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2538 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255C SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E6365206F66204354534920746F6B656E73206E6F7420656E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75676820746F206D6174636820616D6F756E742073656E740000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x1D2B CALLER DUP3 PUSH2 0x2FA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB64B3BED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xB64B3BED SWAP1 PUSH1 0x24 ADD PUSH2 0x206A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x91D1777781884D03A6757A803996E38DE2A42967FB37EEACA72729271025A9E2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2711 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC47F0027 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC47F0027 SWAP1 PUSH2 0x2740 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x275A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x276E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2792 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST POP PUSH32 0x6AAA0865532D48A9A0F63CC91DF7FF2AB538C896665C864AE02D0A1E7F81CF65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x27C2 SWAP2 SWAP1 PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH2 0x206A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0x1000000 SWAP1 SWAP4 DIV AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A81 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT ISZERO SWAP1 POP DUP1 PUSH2 0x2A8D JUMPI POP JUMP JUMPDEST PUSH2 0x2A95 PUSH2 0x2F31 JUMP JUMPDEST PUSH2 0x1D2B PUSH2 0x318B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2AB2 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2AC7 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x2AD1 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xB SLOAD PUSH2 0x2AE3 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH2 0x2AF3 DUP3 DUP7 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x2AFD SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x2B36 JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD ISZERO JUMPDEST DUP1 PUSH2 0x2B42 JUMPI POP PUSH1 0x5 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0x2B4C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2B58 DUP3 PUSH1 0x1 ADD PUSH2 0x2C54 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B6B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH2 0x2B7E DUP3 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x2BA0 JUMPI PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 DUP4 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2BAE DUP3 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST GT PUSH2 0x15B9 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 DUP4 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2BDC SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x2BE6 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xB SLOAD PUSH2 0x2BF8 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2C09 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC SLOAD DUP6 PUSH2 0x2AF3 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH2 0x2C2B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2C3B JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 SLOAD DUP5 PUSH2 0x2C4A SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH1 0x2 PUSH2 0x2C6A SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST GT PUSH2 0x2CA3 JUMPI PUSH1 0x8 DUP3 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2C86 JUMPI PUSH2 0x2C86 PUSH2 0x35AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2CA0 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD GT DUP1 ISZERO PUSH2 0x2CC8 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x2CC5 SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x8 PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x2CE0 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2CF0 JUMPI PUSH2 0x2CF0 PUSH2 0x35AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2D0A SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x1F2A SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2DCD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2DE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x348A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2E0B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH4 0x1000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x2E71 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2D97 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2F0F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH2 0x2F21 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP PUSH2 0x2C4A DUP3 DUP6 PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x12E1 JUMPI PUSH1 0x0 PUSH2 0x2F45 PUSH2 0x324B JUMP JUMPDEST SWAP1 POP PUSH2 0x2F50 DUP2 PUSH2 0x328C JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x2F98 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xB SSTORE POP PUSH1 0x0 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x2FAC DUP3 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2FD3 SWAP1 DUP3 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0x9 SLOAD PUSH2 0x300A SWAP1 DUP3 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP2 DUP5 SWAP2 PUSH32 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30EE SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x30F8 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0xB SLOAD PUSH2 0x312B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x3135 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x313F SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC SLOAD DUP3 PUSH1 0xD SLOAD PUSH2 0x3154 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x315E SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x3170 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x3182 JUMPI SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x9 SLOAD PUSH2 0x319B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE ISZERO PUSH2 0x3224 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x534A7E1D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA694FC3A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x320B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x4 SSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP2 PUSH2 0x3244 DUP4 PUSH2 0x357D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x327D JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3287 PUSH1 0x1 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD PUSH1 0xA SLOAD PUSH2 0x329F SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32AD DUP5 DUP4 PUSH2 0x3547 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x2AFD SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19A5 DUP2 PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19A5 DUP2 PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x330A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3315 DUP2 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3325 DUP2 PUSH2 0x35DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x337D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x33BB JUMPI PUSH2 0x33BB PUSH2 0x35C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x33E3 JUMPI PUSH2 0x33E3 PUSH2 0x35C4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x33FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x342E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3462 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3446 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3474 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3520 JUMPI PUSH2 0x3520 PUSH2 0x3598 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3542 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3561 JUMPI PUSH2 0x3561 PUSH2 0x3598 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3578 JUMPI PUSH2 0x3578 PUSH2 0x3598 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3591 JUMPI PUSH2 0x3591 PUSH2 0x3598 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D2B JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0x4A DUP11 0xFC PUSH29 0xBC8A55FC2CEB377C0CDE3718CB743BA539D9CE5E029EC8F30D0D766473 PUSH16 0x6C63430008060033706172616D657465 PUSH19 0x2063616E206E6F74206265207A65726F206164 PUSH5 0x7265730000 ",
      "sourceMap": "960:21509:22:-:0;;;1925:4;1877:52;;2837:564;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;935:5:10;925:15;;-1:-1:-1;;925:15:10;;;3068:4:22;3074:14;3090:4;-1:-1:-1;;;;;1750:18:24;;1742:64;;;;-1:-1:-1;;;1742:64:24;;1285:2:28;1742:64:24;;;1267:21:28;1324:2;1304:18;;;1297:30;-1:-1:-1;;;;;;;;;;;1343:18:28;;;1336:62;-1:-1:-1;;;1414:18:28;;;1407:31;1455:19;;1742:64:24;;;;;;;;;-1:-1:-1;;;;;1837:28:24;;1816:108;;;;-1:-1:-1;;;1816:108:24;;1285:2:28;1816:108:24;;;1267:21:28;1324:2;1304:18;;;1297:30;-1:-1:-1;;;;;;;;;;;1343:18:28;;;1336:62;-1:-1:-1;;;1414:18:28;;;1407:31;1455:19;;1816:108:24;1257:223:28;1816:108:24;-1:-1:-1;;;;;1942:18:24;;1934:64;;;;-1:-1:-1;;;1934:64:24;;1285:2:28;1934:64:24;;;1267:21:28;1324:2;1304:18;;;1297:30;-1:-1:-1;;;;;;;;;;;1343:18:28;;;1336:62;-1:-1:-1;;;1414:18:28;;;1407:31;1455:19;;1934:64:24;1257:223:28;1934:64:24;-1:-1:-1;;;;;;2009:15:24;;;;;;;;2034:57;;;;;;;2101:16;;;;;;2193:22;2212:1;2193:10;:22::i;:::-;2225:8;:6;:8::i;:::-;-1:-1:-1;;;;;;;;3114:19:22;::::1;3106:65;;;::::0;-1:-1:-1;;;3106:65:22;;1285:2:28;3106:65:22::1;::::0;::::1;1267:21:28::0;1324:2;1304:18;;;1297:30;-1:-1:-1;;;;;;;;;;;1343:18:28;;;1336:62;-1:-1:-1;;;1414:18:28;;;1407:31;1455:19;;3106:65:22::1;1257:223:28::0;3106:65:22::1;-1:-1:-1::0;;;;;3189:22:22;::::1;3181:68;;;::::0;-1:-1:-1;;;3181:68:22;;1285:2:28;3181:68:22::1;::::0;::::1;1267:21:28::0;1324:2;1304:18;;;1297:30;-1:-1:-1;;;;;;;;;;;1343:18:28;;;1336:62;-1:-1:-1;;;1414:18:28;;;1407:31;1455:19;;3181:68:22::1;1257:223:28::0;3181:68:22::1;-1:-1:-1::0;;;;;;;;3260:20:22::1;::::0;;;;;::::1;::::0;3290:28;;;;;;;::::1;::::0;-1:-1:-1;3328:26:22::1;::::0;3364:30:::1;::::0;960:21509;;2246:159:24;1456:13:9;;;;;;;;:30;;-1:-1:-1;1474:12:9;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:9;;2032:2:28;1448:89:9;;;2014:21:28;2071:2;2051:18;;;2044:30;2110:34;2090:18;;;2083:62;-1:-1:-1;;;2161:18:28;;;2154:44;2215:19;;1448:89:9;2004:236:28;1448:89:9;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:9;;;;;1594:98;2318:6:24::1;:20:::0;;-1:-1:-1;;;;;;2318:20:24::1;::::0;-1:-1:-1;;;;;2318:20:24;::::1;::::0;;::::1;::::0;;;::::1;::::0;;2353:45:::1;::::0;2318:20;;:6;2353:45:::1;::::0;2318:6;;2353:45:::1;1718:14:9::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:9;;;1714:66;1438:348;2246:159:24;:::o;1807:115:10:-;1356:8;1089:4;1112:7;;;;;;;1042:84;1356:8;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:10;;1687:2:28;1347:38:10;;;1669:21:28;1726:2;1706:18;;;1699:30;-1:-1:-1;;;1745:18:28;;;1738:46;1801:18;;1347:38:10;1659:166:28;1347:38:10;1866:7:::1;:14:::0;;-1:-1:-1;;1866:14:10::1;::::0;::::1;::::0;;1895:20:::1;1902:12;665:10:14::0;;586:96;1902:12:10::1;1895:20;::::0;-1:-1:-1;;;;;1039:32:28;;;1021:51;;1009:2;994:18;1895:20:10::1;;;;;;;1807:115::o:0;14:177:28:-;93:13;;-1:-1:-1;;;;;135:31:28;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:674::-;320:6;328;336;344;352;360;368;421:3;409:9;400:7;396:23;392:33;389:2;;;438:1;435;428:12;389:2;461:40;491:9;461:40;:::i;:::-;451:50;;520:49;565:2;554:9;550:18;520:49;:::i;:::-;510:59;;588:49;633:2;622:9;618:18;588:49;:::i;:::-;578:59;;677:2;666:9;662:18;656:25;646:35;;721:3;710:9;706:19;700:26;690:36;;745:50;790:3;779:9;775:19;745:50;:::i;:::-;735:60;;814:50;859:3;848:9;844:19;814:50;:::i;:::-;804:60;;379:491;;;;;;;;;;:::o;2004:236::-;960:21509:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@FIXED_POINT_DECIMALS_2486": {
          "entryPoint": null,
          "id": 2486,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_4177": {
          "entryPoint": null,
          "id": 4177,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_calcTotalShares_3375": {
          "entryPoint": 12940,
          "id": 3375,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_calcUnstakingRewards_3334": {
          "entryPoint": 12564,
          "id": 3334,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_calcValueAtEpoch_3351": {
          "entryPoint": 12875,
          "id": 3351,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_getStakedSharesInValue_3819": {
          "entryPoint": 10909,
          "id": 3819,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_getStakedValueInShares_3784": {
          "entryPoint": 11206,
          "id": 3784,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_getUnstakedSharesInValue_3846": {
          "entryPoint": 12026,
          "id": 3846,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_getUnstakedValueInShares_3873": {
          "entryPoint": 11288,
          "id": 3873,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_getUserMaturatedShares_3925": {
          "entryPoint": 11348,
          "id": 3925,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@_msgSender_1588": {
          "entryPoint": null,
          "id": 1588,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_pause_950": {
          "entryPoint": 11893,
          "id": 950,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_stakeUpdates_3749": {
          "entryPoint": 12195,
          "id": 3749,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_unpause_966": {
          "entryPoint": 11545,
          "id": 966,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_updateUserBalances_3695": {
          "entryPoint": 11013,
          "id": 3695,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@canCycleStakeMaturation_3957": {
          "entryPoint": 4576,
          "id": 3957,
          "parameterSlots": 0,
          "returnSlots": 3
        },
        "@canCycleWithdrawRelease_4005": {
          "entryPoint": 2412,
          "id": 4005,
          "parameterSlots": 0,
          "returnSlots": 3
        },
        "@cancelHire_4318": {
          "entryPoint": 9688,
          "id": 4318,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@computeFinishedStake_3412": {
          "entryPoint": 12081,
          "id": 3412,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@ctsi_2437": {
          "entryPoint": null,
          "id": 2437,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@currentMaturingTotal_2493": {
          "entryPoint": null,
          "id": 2493,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@currentQueuedTotal_2491": {
          "entryPoint": null,
          "id": 2491,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@currentStakeEpoch_2451": {
          "entryPoint": null,
          "id": 2451,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@currentUnstakeEpoch_2453": {
          "entryPoint": null,
          "id": 2453,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@cycleStakeMaturation_3477": {
          "entryPoint": 10725,
          "id": 3477,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@cycleWithdrawRelease_3592": {
          "entryPoint": 5566,
          "id": 3592,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@ens_4071": {
          "entryPoint": null,
          "id": 4071,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@fee_2443": {
          "entryPoint": null,
          "id": 2443,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@getMaturingBalance_2904": {
          "entryPoint": 4835,
          "id": 2904,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getMaturingTimestamp_2765": {
          "entryPoint": 7776,
          "id": 2765,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getReleasingBalance_2954": {
          "entryPoint": 7659,
          "id": 2954,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getReleasingTimestamp_2835": {
          "entryPoint": 6366,
          "id": 2835,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@getStakedBalance_2717": {
          "entryPoint": 4186,
          "id": 2717,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@hire_4304": {
          "entryPoint": 10223,
          "id": 4304,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@initialize_2606": {
          "entryPoint": 5129,
          "id": 2606,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@initialize_4173": {
          "entryPoint": 11700,
          "id": 4173,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@owner_4404": {
          "entryPoint": null,
          "id": 4404,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pause_4218": {
          "entryPoint": 7602,
          "id": 4218,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@paused_911": {
          "entryPoint": null,
          "id": 911,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pos_4074": {
          "entryPoint": null,
          "id": 4074,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@produceBlock_3087": {
          "entryPoint": 8351,
          "id": 3087,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@renounceOwnership_4395": {
          "entryPoint": 7470,
          "id": 4395,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@retire_4332": {
          "entryPoint": 8224,
          "id": 4332,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@rewardMaturing_2449": {
          "entryPoint": null,
          "id": 2449,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@rewardNotStaked_2447": {
          "entryPoint": null,
          "id": 2447,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@rewardQueued_2445": {
          "entryPoint": null,
          "id": 2445,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@selfhire_4277": {
          "entryPoint": 7001,
          "id": 4277,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@setName_4207": {
          "entryPoint": 9766,
          "id": 4207,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@stake_2984": {
          "entryPoint": 9322,
          "id": 2984,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@stakingVoucherValueAtEpoch_2489": {
          "entryPoint": 10190,
          "id": 2489,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@staking_2440": {
          "entryPoint": null,
          "id": 2440,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@startNewStakeCycle_3448": {
          "entryPoint": 12683,
          "id": 3448,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@timeToRelease_2457": {
          "entryPoint": null,
          "id": 2457,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@timeToStake_2455": {
          "entryPoint": null,
          "id": 2455,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@totalStakedShares_2497": {
          "entryPoint": null,
          "id": 2497,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@totalStaked_2495": {
          "entryPoint": null,
          "id": 2495,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@totalToUnstakeShares_2499": {
          "entryPoint": null,
          "id": 2499,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@totalUnstakedShares_2505": {
          "entryPoint": null,
          "id": 2505,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@totalUnstaking_2501": {
          "entryPoint": null,
          "id": 2501,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@totalWithdrawable_2503": {
          "entryPoint": null,
          "id": 2503,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@transferOwnership_4373": {
          "entryPoint": 10467,
          "id": 4373,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@unpause_4229": {
          "entryPoint": 4776,
          "id": 4229,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@unstake_3204": {
          "entryPoint": 2779,
          "id": 3204,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@userBalance_2483": {
          "entryPoint": null,
          "id": 2483,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@withdraw_3293": {
          "entryPoint": 3608,
          "id": 3293,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@workerManager_4077": {
          "entryPoint": null,
          "id": 4077,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 12989,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 13018,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_payable": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_address": {
          "entryPoint": 13047,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 13104,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": 13138,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_string_memory_ptr": {
          "entryPoint": 13163,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 13340,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_Fee_$1855__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IERC20_$1552__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IStaking_$170__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IWorkerManagerAuthManager_$207__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 13365,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_2e4d884dd6197cceffffb9fbe6085f605c5ff6ec10715e91a4849e8b7abd0777__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_450f738067a1ad3f6478903d685921312d50b047ef5c4b8a1aa84be0c851d47a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_764a1728fc8ee85c4a7477425a4275a839740a54c0c8c289e61a889ab8416159__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 13450,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8499f20eca8380b97999c470ccd199f385e4591ff018ec599a6484c2901bdf29__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_85f8749106e26f6847170840e2f63a941314d796ebf69fbe059191388c245711__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9803d9855d8cdef74eca924e6b8538b9c89e1b159f440a240dfca4ff0def653a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 13528,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_b19c74ecf8c740f2fb5571b26a34141796e293467ab8a6af8f31490790af114c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_struct$_StakingVoucher_$2464_memory_ptr_t_struct$_UnstakingVoucher_$2469_memory_ptr__to_t_uint256_t_struct$_StakingVoucher_$2464_memory_ptr_t_struct$_UnstakingVoucher_$2469_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 5,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 13581,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 13605,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 13639,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 13670,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "increment_t_uint256": {
          "entryPoint": 13693,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 13720,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x32": {
          "entryPoint": 13742,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 13764,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_address": {
          "entryPoint": 13786,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:14826:28",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:28",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:177:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "94:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "155:36:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "168:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "159:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "225:5:28"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "200:24:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "200:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "200:31:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "240:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "250:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "240:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:28",
                    "type": ""
                  }
                ],
                "src": "14:247:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "347:170:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "393:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "402:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "405:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "395:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "395:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "395:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "368:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "377:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "364:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "364:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "389:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "357:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "418:29:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "437:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "431:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "431:16:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "422:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "481:5:28"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "456:24:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "456:31:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "496:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "506:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "496:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "313:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "324:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "336:6:28",
                    "type": ""
                  }
                ],
                "src": "266:251:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "600:177:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "646:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "655:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "658:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "648:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "648:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "648:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "621:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "630:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "617:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "617:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "642:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "613:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "613:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "610:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "671:36:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "697:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "684:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:23:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "675:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "741:5:28"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "716:24:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "716:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "716:31:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "756:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "756:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_payable",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "566:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "577:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "589:6:28",
                    "type": ""
                  }
                ],
                "src": "522:255:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "869:301:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "915:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "924:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "927:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "917:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "917:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "917:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "890:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "899:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "886:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "886:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "911:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "879:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "940:36:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "953:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:23:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "944:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1010:5:28"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "985:24:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "985:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "985:31:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1025:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1035:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1025:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1049:47:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1081:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1092:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1077:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1077:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1064:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:32:28"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "1053:7:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1130:7:28"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1105:24:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1105:33:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1105:33:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1147:17:28",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1157:7:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1147:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "827:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "838:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "850:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "858:6:28",
                    "type": ""
                  }
                ],
                "src": "782:388:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1253:199:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1299:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1308:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1311:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1301:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1301:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1301:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1274:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1283:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1270:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1270:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1295:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1266:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1266:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1263:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1324:29:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1343:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1337:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1337:16:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1328:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1406:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1415:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1418:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1408:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1408:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1408:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1375:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1396:5:28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1389:6:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1389:13:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1382:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1382:21:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1372:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1372:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1365:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:40:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1362:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1431:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1441:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1431:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1219:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1230:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1242:6:28",
                    "type": ""
                  }
                ],
                "src": "1175:277:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1538:103:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1584:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1593:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1596:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1586:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1586:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1586:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1559:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1568:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1555:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1555:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1580:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1551:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1548:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1609:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1625:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1619:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1619:16:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1609:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1504:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1515:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1527:6:28",
                    "type": ""
                  }
                ],
                "src": "1457:184:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1726:842:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1772:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1781:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1784:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1774:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1774:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1774:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1747:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1756:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1743:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1743:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1768:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1739:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1739:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1736:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1797:37:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1824:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1811:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1811:23:28"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1801:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1843:28:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1853:18:28",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1847:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1898:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1907:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1910:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1900:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1900:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1900:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1886:6:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1894:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1883:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1883:14:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1880:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1923:32:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1937:9:28"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1948:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1933:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1933:22:28"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "1927:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2003:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2012:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2015:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2005:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2005:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2005:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1982:2:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1986:4:28",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1978:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1978:13:28"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1993:7:28"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1974:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1974:27:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1967:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:35:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1964:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2028:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2051:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2038:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2038:16:28"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "2032:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2077:22:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2079:16:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2079:18:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2079:18:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2069:2:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2073:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2066:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:10:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2063:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2108:17:28",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2122:2:28",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:7:28"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "2112:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2134:23:28",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2154:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2148:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2148:9:28"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "2138:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2166:71:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2188:6:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "2212:2:28"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2216:4:28",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2208:3:28"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2208:13:28"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "2223:2:28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2204:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2204:22:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2228:2:28",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2200:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2200:31:28"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2233:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2196:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2196:40:28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2184:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2184:53:28"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "2170:10:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2296:22:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2298:16:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2298:18:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2298:18:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2255:10:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2267:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2252:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2252:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2275:10:28"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2287:6:28"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2272:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2272:22:28"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2249:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2249:46:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2246:2:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2334:2:28",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2338:10:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2327:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2327:22:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2327:22:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2365:6:28"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2373:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2358:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2358:18:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2358:18:28"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2422:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2431:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2434:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2424:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2424:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2424:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2399:2:28"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2403:2:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2395:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2395:11:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2408:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2391:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2391:20:28"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2413:7:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2388:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2388:33:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2385:2:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2464:6:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2472:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2460:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2460:15:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2481:2:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2485:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2477:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2477:11:28"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2490:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "2447:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2447:46:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2447:46:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2517:6:28"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2525:2:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2513:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2513:15:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2530:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2509:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2509:24:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2535:1:28",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2502:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2502:35:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2502:35:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2546:16:28",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2556:6:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2546:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1692:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1703:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1715:6:28",
                    "type": ""
                  }
                ],
                "src": "1646:922:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2643:110:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2689:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2698:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2701:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2691:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2691:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2691:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2664:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2673:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2660:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2660:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2685:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2656:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2653:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2714:33:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2737:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2724:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2724:23:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2714:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2609:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2620:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2632:6:28",
                    "type": ""
                  }
                ],
                "src": "2573:180:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2839:103:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2885:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2894:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2897:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2887:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2887:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2887:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2860:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2869:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2856:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2856:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2881:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2852:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "2849:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2910:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2926:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2920:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2920:16:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2910:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2805:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2816:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2828:6:28",
                    "type": ""
                  }
                ],
                "src": "2758:184:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3048:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3058:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3070:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3081:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3066:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3066:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3058:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3100:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3115:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3131:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3136:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3127:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3127:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3140:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3123:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3123:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3111:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3111:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3093:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3093:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3093:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3017:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3028:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3039:4:28",
                    "type": ""
                  }
                ],
                "src": "2947:203:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3272:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3282:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3294:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3305:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3290:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3290:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3282:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3324:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3339:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3355:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3360:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3351:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3351:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3364:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3347:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3347:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3335:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3335:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3317:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3317:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3317:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3241:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3252:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3263:4:28",
                    "type": ""
                  }
                ],
                "src": "3155:219:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3516:175:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3526:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3538:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3549:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3534:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3534:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3526:4:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3561:29:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3579:3:28",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3584:1:28",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3575:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3575:11:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3588:1:28",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3571:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3571:19:28"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3565:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3606:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3621:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3629:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3617:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3617:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3599:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3599:34:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3653:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3664:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3649:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3649:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3673:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3681:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3669:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3669:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3642:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3642:43:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3642:43:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3477:9:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3488:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3496:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3507:4:28",
                    "type": ""
                  }
                ],
                "src": "3379:312:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3825:175:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3835:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3847:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3858:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3843:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3843:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3835:4:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3870:29:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3888:3:28",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3893:1:28",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3884:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3884:11:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3897:1:28",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:19:28"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3874:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3915:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3930:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3938:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3926:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3926:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3908:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3908:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3908:34:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3962:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3973:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3958:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3958:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3982:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3990:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3978:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3978:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3951:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3951:43:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3951:43:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3786:9:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3797:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3805:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3816:4:28",
                    "type": ""
                  }
                ],
                "src": "3696:304:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4162:218:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4172:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4184:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4195:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4180:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4180:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4172:4:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4207:29:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4225:3:28",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4230:1:28",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4221:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4221:11:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4234:1:28",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4217:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4217:19:28"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4211:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4252:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4267:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4275:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4263:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4263:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4245:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4245:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4245:34:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4299:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4310:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4295:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4295:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4319:6:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4327:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4315:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4315:15:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4288:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4288:43:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4288:43:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4351:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4362:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4347:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4347:18:28"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4367:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4340:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4340:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4340:34:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4115:9:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4126:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4134:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4142:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4153:4:28",
                    "type": ""
                  }
                ],
                "src": "4005:375:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4514:145:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4524:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4536:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4547:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4532:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4532:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4524:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4566:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4581:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4597:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4602:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4593:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4593:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4606:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4589:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4589:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4577:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4577:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4559:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4559:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4559:51:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4630:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4641:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4626:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4626:18:28"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4646:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4619:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4619:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4619:34:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4475:9:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4486:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4494:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4505:4:28",
                    "type": ""
                  }
                ],
                "src": "4385:274:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4759:92:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4769:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4781:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4792:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4777:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4777:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4769:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4811:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4836:6:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4829:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4829:14:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4822:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4822:22:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4804:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4804:41:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4804:41:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4728:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4739:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4750:4:28",
                    "type": ""
                  }
                ],
                "src": "4664:187:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5007:178:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5017:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5029:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5040:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5025:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5025:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5017:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5059:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5084:6:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5077:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5077:14:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5070:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5070:22:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5052:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5052:41:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5052:41:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5113:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5124:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5109:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5109:18:28"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5129:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5102:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5102:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5102:34:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5156:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5167:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5152:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5152:18:28"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5172:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5145:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5145:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5145:34:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4960:9:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4971:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4979:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4987:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4998:4:28",
                    "type": ""
                  }
                ],
                "src": "4856:329:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5291:76:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5301:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5313:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5324:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5309:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5309:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5301:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5343:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5354:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5336:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5336:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5336:25:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5260:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5271:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5282:4:28",
                    "type": ""
                  }
                ],
                "src": "5190:177:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5484:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5494:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5506:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5517:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5502:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5502:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5494:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5536:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5551:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5567:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5572:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5563:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5563:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5576:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5559:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5559:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5547:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5547:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5529:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5529:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5529:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5453:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5464:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5475:4:28",
                    "type": ""
                  }
                ],
                "src": "5372:214:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5704:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5714:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5726:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5737:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5722:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5722:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5714:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5756:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5771:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5787:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5792:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5783:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5783:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5796:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5779:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5779:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5767:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5767:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5749:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5749:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5749:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_Fee_$1855__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5673:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5684:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5695:4:28",
                    "type": ""
                  }
                ],
                "src": "5591:215:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5927:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5937:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5949:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5960:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5945:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5945:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5937:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5979:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5994:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6010:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6015:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6006:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6006:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6019:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6002:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6002:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5990:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5990:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5972:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5972:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5972:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IERC20_$1552__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5896:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5907:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5918:4:28",
                    "type": ""
                  }
                ],
                "src": "5811:218:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6146:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6156:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6168:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6179:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6164:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6164:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6156:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6198:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6213:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6229:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6234:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6225:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6225:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6238:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6221:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6221:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6209:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6209:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6191:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6191:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6191:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6115:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6126:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6137:4:28",
                    "type": ""
                  }
                ],
                "src": "6034:214:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6370:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6380:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6392:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6403:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6388:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6388:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6380:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6422:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6437:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6453:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6458:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6449:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6449:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6462:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6445:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6445:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6433:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6433:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6415:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6415:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6415:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IStaking_$170__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6339:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6350:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6361:4:28",
                    "type": ""
                  }
                ],
                "src": "6253:219:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6611:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6621:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6633:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6644:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6629:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6629:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6621:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6663:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6678:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6694:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6699:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6690:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6690:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6703:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6686:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6686:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6674:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6674:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6656:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6656:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6656:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IWorkerManagerAuthManager_$207__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6580:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6591:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6602:4:28",
                    "type": ""
                  }
                ],
                "src": "6477:236:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6839:476:28",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6849:12:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6859:2:28",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "6853:2:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6877:9:28"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6888:2:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6870:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6870:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6870:21:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6900:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6920:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6914:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6914:13:28"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "6904:6:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6947:9:28"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "6958:2:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6943:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6943:18:28"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6963:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6936:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6936:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6936:34:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6979:10:28",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6988:1:28",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "6983:1:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7048:90:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "7077:9:28"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7088:1:28"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7073:3:28"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7073:17:28"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7092:2:28",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7069:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7069:26:28"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "7111:6:28"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "7119:1:28"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "7107:3:28"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7107:14:28"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7123:2:28"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7103:3:28"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7103:23:28"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "7097:5:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7097:30:28"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7062:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7062:66:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7062:66:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7009:1:28"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7012:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7006:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7006:13:28"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "7020:19:28",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "7022:15:28",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7031:1:28"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7034:2:28"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7027:3:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7027:10:28"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "7022:1:28"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "7002:3:28",
                        "statements": []
                      },
                      "src": "6998:140:28"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7172:66:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "7201:9:28"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "7212:6:28"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7197:3:28"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7197:22:28"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7221:2:28",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7193:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7193:31:28"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7226:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7186:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7186:42:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7186:42:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7153:1:28"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7156:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7150:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7150:13:28"
                      },
                      "nodeType": "YulIf",
                      "src": "7147:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7247:62:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7263:9:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "7282:6:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7290:2:28",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7278:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7278:15:28"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7299:2:28",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "7295:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7295:7:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7274:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7274:29:28"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7259:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7259:45:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7306:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7255:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7255:54:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7247:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6808:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6819:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6830:4:28",
                    "type": ""
                  }
                ],
                "src": "6718:597:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7494:170:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7511:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7522:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7504:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7504:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7504:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7545:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7556:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7541:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7541:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7561:2:28",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7534:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7534:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7534:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7584:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7595:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7580:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7580:18:28"
                          },
                          {
                            "hexValue": "5061757361626c653a206e6f7420706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7600:22:28",
                            "type": "",
                            "value": "Pausable: not paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7573:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7573:50:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7573:50:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7632:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7644:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7655:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7640:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7640:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7632:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7471:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7485:4:28",
                    "type": ""
                  }
                ],
                "src": "7320:344:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7843:228:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7860:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7871:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7853:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7853:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7853:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7894:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7905:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7890:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7890:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7910:2:28",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7883:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7883:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7883:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7933:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7944:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7929:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7929:18:28"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7949:34:28",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7922:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7922:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7922:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8004:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8015:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8000:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8000:18:28"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8020:8:28",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7993:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7993:36:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7993:36:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8038:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8050:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8061:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8046:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8046:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8038:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7820:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7834:4:28",
                    "type": ""
                  }
                ],
                "src": "7669:402:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8250:224:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8267:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8278:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8260:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8260:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8260:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8301:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8312:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8297:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8297:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8317:2:28",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8290:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8290:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8290:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8340:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8351:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8336:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8336:18:28"
                          },
                          {
                            "hexValue": "746865726520617265206e6f2073686172657320746f20626520756e7374616b",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8356:34:28",
                            "type": "",
                            "value": "there are no shares to be unstak"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8329:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8329:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8329:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8411:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8422:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8407:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8407:18:28"
                          },
                          {
                            "hexValue": "6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8427:4:28",
                            "type": "",
                            "value": "ed"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8400:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8400:32:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8400:32:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8441:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8453:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8464:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8449:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8449:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8441:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_2e4d884dd6197cceffffb9fbe6085f605c5ff6ec10715e91a4849e8b7abd0777__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8227:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8241:4:28",
                    "type": ""
                  }
                ],
                "src": "8076:398:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8653:246:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8670:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8681:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8663:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8663:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8663:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8704:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8715:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8700:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8700:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8720:2:28",
                            "type": "",
                            "value": "56"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8693:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8693:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8693:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8743:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8754:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8739:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8739:18:28"
                          },
                          {
                            "hexValue": "416c6c6f77616e6365206f66204354534920746f6b656e73206e6f7420656e6f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8759:34:28",
                            "type": "",
                            "value": "Allowance of CTSI tokens not eno"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8732:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8732:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8732:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8814:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8825:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8810:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8810:18:28"
                          },
                          {
                            "hexValue": "75676820746f206d6174636820616d6f756e742073656e74",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8830:26:28",
                            "type": "",
                            "value": "ugh to match amount sent"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8803:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8803:54:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8803:54:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8866:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8878:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8889:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8874:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8874:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8866:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_450f738067a1ad3f6478903d685921312d50b047ef5c4b8a1aa84be0c851d47a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8630:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8644:4:28",
                    "type": ""
                  }
                ],
                "src": "8479:420:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9078:166:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9095:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9106:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9088:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9088:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9088:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9129:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9140:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9125:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9125:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9145:2:28",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9118:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9118:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9118:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9168:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9179:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9164:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9164:18:28"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9184:18:28",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9157:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9157:46:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9157:46:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9212:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9224:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9235:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9220:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9220:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9212:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9055:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9069:4:28",
                    "type": ""
                  }
                ],
                "src": "8904:340:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9423:182:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9440:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9451:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9433:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9433:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9433:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9474:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9485:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9470:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9470:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9490:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9463:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9463:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9463:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9513:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9524:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9509:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9509:18:28"
                          },
                          {
                            "hexValue": "596f7520646f6e27742068617665207265616c65617365642062616c616e6365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9529:34:28",
                            "type": "",
                            "value": "You don't have realeased balance"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9502:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9502:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9502:62:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9573:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9585:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9596:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9581:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9581:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9573:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_764a1728fc8ee85c4a7477425a4275a839740a54c0c8c289e61a889ab8416159__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9400:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9414:4:28",
                    "type": ""
                  }
                ],
                "src": "9249:356:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9784:236:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9801:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9812:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9794:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9794:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9794:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9835:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9846:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9831:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9831:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9851:2:28",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9824:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9824:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9824:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9874:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9885:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9870:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9870:18:28"
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9890:34:28",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9863:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9863:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9863:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9945:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9956:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9941:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9941:18:28"
                          },
                          {
                            "hexValue": "647920696e697469616c697a6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9961:16:28",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9934:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9934:44:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9934:44:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9987:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9999:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10010:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9995:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9995:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9987:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9761:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9775:4:28",
                    "type": ""
                  }
                ],
                "src": "9610:410:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10199:233:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10216:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10227:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10209:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10209:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10209:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10250:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10261:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10246:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10246:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10266:2:28",
                            "type": "",
                            "value": "43"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10239:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10239:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10239:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10289:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10300:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10285:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10285:18:28"
                          },
                          {
                            "hexValue": "4e6f7420656e6f7567682062616c616e636520666f7220746869732077697468",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10305:34:28",
                            "type": "",
                            "value": "Not enough balance for this with"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10278:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10278:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10278:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10360:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10371:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10356:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10356:18:28"
                          },
                          {
                            "hexValue": "6472617720616d6f756e74",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10376:13:28",
                            "type": "",
                            "value": "draw amount"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10349:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10349:41:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10349:41:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10399:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10411:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10422:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10407:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10407:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10399:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8499f20eca8380b97999c470ccd199f385e4591ff018ec599a6484c2901bdf29__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10176:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10190:4:28",
                    "type": ""
                  }
                ],
                "src": "10025:407:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10611:223:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10628:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10639:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10621:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10621:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10621:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10662:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10673:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10658:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10658:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10678:2:28",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10651:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10651:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10651:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10701:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10712:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10697:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10697:18:28"
                          },
                          {
                            "hexValue": "596f752068617665207769746864726177206265696e672070726f6365737365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10717:34:28",
                            "type": "",
                            "value": "You have withdraw being processe"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10690:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10690:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10690:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10772:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10783:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10768:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10768:18:28"
                          },
                          {
                            "hexValue": "64",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10788:3:28",
                            "type": "",
                            "value": "d"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10761:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10761:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10761:31:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10801:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10813:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10824:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10809:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10809:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10801:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_85f8749106e26f6847170840e2f63a941314d796ebf69fbe059191388c245711__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10588:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10602:4:28",
                    "type": ""
                  }
                ],
                "src": "10437:397:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11013:227:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11030:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11041:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11023:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11023:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11023:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11064:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11075:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11060:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11060:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11080:2:28",
                            "type": "",
                            "value": "37"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11053:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11053:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11053:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11103:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11114:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11099:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11099:18:28"
                          },
                          {
                            "hexValue": "556e7374616b6520616d6f756e74206973206f766572207374616b6564206261",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11119:34:28",
                            "type": "",
                            "value": "Unstake amount is over staked ba"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11092:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11092:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11092:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11174:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11185:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11170:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11170:18:28"
                          },
                          {
                            "hexValue": "6c616e6365",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11190:7:28",
                            "type": "",
                            "value": "lance"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11163:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11163:35:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11163:35:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11207:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11219:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11230:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11215:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11215:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11207:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9803d9855d8cdef74eca924e6b8538b9c89e1b159f440a240dfca4ff0def653a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10990:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11004:4:28",
                    "type": ""
                  }
                ],
                "src": "10839:401:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11419:182:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11436:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11447:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11429:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11429:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11429:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11470:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11481:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11466:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11466:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11486:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11459:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11459:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11459:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11509:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11520:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11505:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11505:18:28"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11525:34:28",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11498:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11498:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11498:62:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11569:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11581:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11592:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11577:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11577:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11569:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11396:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11410:4:28",
                    "type": ""
                  }
                ],
                "src": "11245:356:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11780:233:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11797:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11808:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11790:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11790:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11790:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11831:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11842:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11827:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11827:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11847:2:28",
                            "type": "",
                            "value": "43"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11820:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11820:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11820:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11870:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11881:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11866:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11866:18:28"
                          },
                          {
                            "hexValue": "4661696c656420746f20617070726f7665204354534920666f72207374616b69",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11886:34:28",
                            "type": "",
                            "value": "Failed to approve CTSI for staki"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11859:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11859:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11859:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11941:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11952:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11937:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11937:18:28"
                          },
                          {
                            "hexValue": "6e6720636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11957:13:28",
                            "type": "",
                            "value": "ng contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11930:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11930:41:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11930:41:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11980:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11992:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12003:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11988:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11988:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11980:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_b19c74ecf8c740f2fb5571b26a34141796e293467ab8a6af8f31490790af114c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11757:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11771:4:28",
                    "type": ""
                  }
                ],
                "src": "11606:407:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12119:76:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12129:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12141:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12152:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12137:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12137:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12129:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12171:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12182:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12164:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12164:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12164:25:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12088:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12099:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12110:4:28",
                    "type": ""
                  }
                ],
                "src": "12018:177:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12489:356:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12499:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12511:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12522:3:28",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12507:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12507:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12499:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12542:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12553:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12535:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12535:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12535:25:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12580:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12591:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12576:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12576:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "12602:6:28"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12596:5:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12596:13:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12569:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12569:41:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12569:41:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12630:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12641:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12626:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12626:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12656:6:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12664:2:28",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12652:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12652:15:28"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12646:5:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12646:22:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12619:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12619:50:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12619:50:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12689:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12700:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12685:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12685:18:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "12715:6:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12723:2:28",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12711:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12711:15:28"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12705:5:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12705:22:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12678:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12678:50:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12678:50:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12748:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12759:3:28",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12744:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12744:19:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "12771:6:28"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12765:5:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12765:13:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12737:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12737:42:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12737:42:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12799:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12810:3:28",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12795:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12795:19:28"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "12826:6:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12834:2:28",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12822:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12822:15:28"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "12816:5:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12816:22:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12788:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12788:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12788:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_struct$_StakingVoucher_$2464_memory_ptr_t_struct$_UnstakingVoucher_$2469_memory_ptr__to_t_uint256_t_struct$_StakingVoucher_$2464_memory_ptr_t_struct$_UnstakingVoucher_$2469_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12442:9:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "12453:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "12461:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12469:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12480:4:28",
                    "type": ""
                  }
                ],
                "src": "12200:645:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12979:119:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "12989:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13001:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13012:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12997:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12997:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12989:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13031:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13042:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13024:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13024:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13024:25:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13069:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13080:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13065:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13065:18:28"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "13085:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13058:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13058:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13058:34:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12940:9:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "12951:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "12959:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12970:4:28",
                    "type": ""
                  }
                ],
                "src": "12850:248:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13288:206:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "13298:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13310:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13321:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13306:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13306:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13298:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13341:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13352:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13334:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13334:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13334:25:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13379:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13390:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13375:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13375:18:28"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "13395:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13368:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13368:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13368:34:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13422:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13433:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13418:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13418:18:28"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "13438:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13411:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13411:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13411:34:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13465:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13476:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13461:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13461:18:28"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "13481:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13454:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13454:34:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13454:34:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13233:9:28",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "13244:6:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "13252:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "13260:6:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13268:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13279:4:28",
                    "type": ""
                  }
                ],
                "src": "13103:391:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13547:80:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13574:22:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "13576:16:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13576:18:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13576:18:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "13563:1:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13570:1:28"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "13566:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13566:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "13560:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13560:13:28"
                      },
                      "nodeType": "YulIf",
                      "src": "13557:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13605:16:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "13616:1:28"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13619:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13612:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13612:9:28"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "13605:3:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "13530:1:28",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "13533:1:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "13539:3:28",
                    "type": ""
                  }
                ],
                "src": "13499:128:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13678:171:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13709:111:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13730:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13737:3:28",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "13742:10:28",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "13733:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "13733:20:28"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "13723:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13723:31:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13723:31:28"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13774:1:28",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13777:4:28",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "13767:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13767:15:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13767:15:28"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13802:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "13805:4:28",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "13795:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13795:15:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13795:15:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13698:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "13691:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13691:9:28"
                      },
                      "nodeType": "YulIf",
                      "src": "13688:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13829:14:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "13838:1:28"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13841:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "13834:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13834:9:28"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "13829:1:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "13663:1:28",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "13666:1:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "13672:1:28",
                    "type": ""
                  }
                ],
                "src": "13632:217:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13906:116:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "13965:22:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "13967:16:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "13967:18:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "13967:18:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13937:1:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "13930:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13930:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "13923:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13923:17:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "13945:1:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13956:1:28",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "13952:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13952:6:28"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "13960:1:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "13948:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13948:14:28"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "13942:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13942:21:28"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13919:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13919:45:28"
                      },
                      "nodeType": "YulIf",
                      "src": "13916:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13996:20:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14011:1:28"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14014:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "14007:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14007:9:28"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "13996:7:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "13885:1:28",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "13888:1:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "13894:7:28",
                    "type": ""
                  }
                ],
                "src": "13854:168:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14076:76:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14098:22:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "14100:16:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14100:18:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14100:18:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14092:1:28"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14095:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14089:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14089:8:28"
                      },
                      "nodeType": "YulIf",
                      "src": "14086:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14129:17:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14141:1:28"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14144:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14137:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14137:9:28"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "14129:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "14058:1:28",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "14061:1:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "14067:4:28",
                    "type": ""
                  }
                ],
                "src": "14027:125:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14204:88:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14235:22:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "14237:16:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14237:18:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14237:18:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14220:5:28"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14231:1:28",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "14227:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14227:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14217:2:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14217:17:28"
                      },
                      "nodeType": "YulIf",
                      "src": "14214:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14266:20:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14277:5:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14284:1:28",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14273:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14273:13:28"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "14266:3:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "increment_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "14186:5:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "14196:3:28",
                    "type": ""
                  }
                ],
                "src": "14157:135:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14329:95:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14346:1:28",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14353:3:28",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14358:10:28",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14349:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14349:20:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14339:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14339:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14339:31:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14386:1:28",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14389:4:28",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14379:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14379:15:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14379:15:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14410:1:28",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14413:4:28",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "14403:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14403:15:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14403:15:28"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "14297:127:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14461:95:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14478:1:28",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14485:3:28",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14490:10:28",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14481:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14481:20:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14471:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14471:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14471:31:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14518:1:28",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14521:4:28",
                            "type": "",
                            "value": "0x32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14511:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14511:15:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14511:15:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14542:1:28",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14545:4:28",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "14535:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14535:15:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14535:15:28"
                    }
                  ]
                },
                "name": "panic_error_0x32",
                "nodeType": "YulFunctionDefinition",
                "src": "14429:127:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14593:95:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14610:1:28",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14617:3:28",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14622:10:28",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "14613:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14613:20:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14603:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14603:31:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14603:31:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14650:1:28",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14653:4:28",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14643:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14643:15:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14643:15:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14674:1:28",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14677:4:28",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "14667:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14667:15:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14667:15:28"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "14561:127:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14738:86:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14802:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14811:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14814:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "14804:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14804:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14804:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14761:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "14772:5:28"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14787:3:28",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "14792:1:28",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "14783:3:28"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "14783:11:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14796:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14779:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14779:19:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "14768:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14768:31:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "14758:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14758:42:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14751:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14751:50:28"
                      },
                      "nodeType": "YulIf",
                      "src": "14748:2:28"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "14727:5:28",
                    "type": ""
                  }
                ],
                "src": "14693:131:28"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_Fee_$1855__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1552__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IStaking_$170__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IWorkerManagerAuthManager_$207__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2e4d884dd6197cceffffb9fbe6085f605c5ff6ec10715e91a4849e8b7abd0777__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"there are no shares to be unstak\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_450f738067a1ad3f6478903d685921312d50b047ef5c4b8a1aa84be0c851d47a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"Allowance of CTSI tokens not eno\")\n        mstore(add(headStart, 96), \"ugh to match amount sent\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_764a1728fc8ee85c4a7477425a4275a839740a54c0c8c289e61a889ab8416159__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"You don't have realeased balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8499f20eca8380b97999c470ccd199f385e4591ff018ec599a6484c2901bdf29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Not enough balance for this with\")\n        mstore(add(headStart, 96), \"draw amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_85f8749106e26f6847170840e2f63a941314d796ebf69fbe059191388c245711__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"You have withdraw being processe\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9803d9855d8cdef74eca924e6b8538b9c89e1b159f440a240dfca4ff0def653a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Unstake amount is over staked ba\")\n        mstore(add(headStart, 96), \"lance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b19c74ecf8c740f2fb5571b26a34141796e293467ab8a6af8f31490790af114c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Failed to approve CTSI for staki\")\n        mstore(add(headStart, 96), \"ng contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_struct$_StakingVoucher_$2464_memory_ptr_t_struct$_UnstakingVoucher_$2469_memory_ptr__to_t_uint256_t_struct$_StakingVoucher_$2464_memory_ptr_t_struct$_UnstakingVoucher_$2469_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), mload(value1))\n        mstore(add(headStart, 64), mload(add(value1, 32)))\n        mstore(add(headStart, 96), mload(add(value1, 64)))\n        mstore(add(headStart, 128), mload(value2))\n        mstore(add(headStart, 160), mload(add(value2, 32)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
          "id": 28,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "2437": [
          {
            "length": 32,
            "start": 1537
          },
          {
            "length": 32,
            "start": 3995
          },
          {
            "length": 32,
            "start": 5296
          },
          {
            "length": 32,
            "start": 9432
          }
        ],
        "2440": [
          {
            "length": 32,
            "start": 1422
          },
          {
            "length": 32,
            "start": 2463
          },
          {
            "length": 32,
            "start": 2616
          },
          {
            "length": 32,
            "start": 3204
          },
          {
            "length": 32,
            "start": 3361
          },
          {
            "length": 32,
            "start": 4321
          },
          {
            "length": 32,
            "start": 4614
          },
          {
            "length": 32,
            "start": 4893
          },
          {
            "length": 32,
            "start": 5248
          },
          {
            "length": 32,
            "start": 5590
          },
          {
            "length": 32,
            "start": 5756
          },
          {
            "length": 32,
            "start": 5948
          },
          {
            "length": 32,
            "start": 6114
          },
          {
            "length": 32,
            "start": 6435
          },
          {
            "length": 32,
            "start": 6596
          },
          {
            "length": 32,
            "start": 6800
          },
          {
            "length": 32,
            "start": 7848
          },
          {
            "length": 32,
            "start": 8076
          },
          {
            "length": 32,
            "start": 8387
          },
          {
            "length": 32,
            "start": 10759
          },
          {
            "length": 32,
            "start": 12404
          },
          {
            "length": 32,
            "start": 12735
          }
        ],
        "2455": [
          {
            "length": 32,
            "start": 1880
          },
          {
            "length": 32,
            "start": 8042
          },
          {
            "length": 32,
            "start": 12370
          }
        ],
        "2457": [
          {
            "length": 32,
            "start": 2303
          },
          {
            "length": 32,
            "start": 3541
          },
          {
            "length": 32,
            "start": 6766
          },
          {
            "length": 32,
            "start": 6955
          }
        ],
        "2486": [
          {
            "length": 32,
            "start": 1716
          },
          {
            "length": 32,
            "start": 12891
          }
        ],
        "4071": [
          {
            "length": 32,
            "start": 1263
          },
          {
            "length": 32,
            "start": 9871
          }
        ],
        "4074": [
          {
            "length": 32,
            "start": 2168
          },
          {
            "length": 32,
            "start": 7150
          },
          {
            "length": 32,
            "start": 8551
          },
          {
            "length": 32,
            "start": 8818
          },
          {
            "length": 32,
            "start": 10376
          }
        ],
        "4077": [
          {
            "length": 32,
            "start": 996
          },
          {
            "length": 32,
            "start": 7022
          },
          {
            "length": 32,
            "start": 7190
          },
          {
            "length": 32,
            "start": 7288
          },
          {
            "length": 32,
            "start": 8255
          },
          {
            "length": 32,
            "start": 9719
          },
          {
            "length": 32,
            "start": 10254
          },
          {
            "length": 32,
            "start": 10416
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xCF392037 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xECA7FE17 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xECA7FE17 EQ PUSH2 0x8ED JUMPI DUP1 PUSH4 0xEFFB8396 EQ PUSH2 0x921 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x937 JUMPI DUP1 PUSH4 0xFC57D44C EQ PUSH2 0x957 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCF392037 EQ PUSH2 0x89A JUMPI DUP1 PUSH4 0xD9D6BD86 EQ PUSH2 0x8BA JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x8CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x7DA JUMPI DUP1 PUSH4 0xB64B3BED EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0xBC598EEF EQ PUSH2 0x81A JUMPI DUP1 PUSH4 0xBE2CFDFF EQ PUSH2 0x830 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x846 JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x12E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x701 JUMPI DUP1 PUSH4 0x8E9F04B5 EQ PUSH2 0x726 JUMPI DUP1 PUSH4 0x94381556 EQ PUSH2 0x746 JUMPI DUP1 PUSH4 0x9A051545 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x9E6371BA EQ PUSH2 0x79A JUMPI DUP1 PUSH4 0xA5A6CD0B EQ PUSH2 0x7BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x661 JUMPI DUP1 PUSH4 0x73A4F33B EQ PUSH2 0x676 JUMPI DUP1 PUSH4 0x7C0DE72B EQ PUSH2 0x68C JUMPI DUP1 PUSH4 0x7E15D8C7 EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x6D6 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F15457F GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x56CBF7B9 GT PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x56CBF7B9 EQ PUSH2 0x5B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x5C5 JUMPI DUP1 PUSH4 0x64FFC3F4 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0x67BA9B91 EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x6A5030C2 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x6FF46A6C EQ PUSH2 0x659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F15457F EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x419BE624 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x4779525B EQ PUSH2 0x546 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x55C JUMPI DUP1 PUSH4 0x4CF088D9 EQ PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x134D92C8 GT PUSH2 0x26B JUMPI DUP1 PUSH4 0x134D92C8 EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0x27D49695 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x3B8BEB8A EQ PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x3065048 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x600A865 EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x698607D EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xB41AAFD EQ PUSH2 0x3BC JUMPI DUP1 PUSH4 0xD36533C EQ PUSH2 0x3D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x2B9 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP2 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD DUP2 DUP7 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 0x4 DUP4 ADD SLOAD DUP6 MSTORE PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE DUP3 MLOAD PUSH1 0x20 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 DUP5 ADD MLOAD DUP6 DUP4 ADD MSTORE SWAP3 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP1 MLOAD PUSH1 0x80 DUP5 ADD MSTORE ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 ISZERO ISZERO DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0xE18 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x4C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x105A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x433 PUSH2 0x11E0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x12A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x12E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x568 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x577 CALLDATASIZE PUSH1 0x4 PUSH2 0x32F7 JUMP JUMPDEST PUSH2 0x1409 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x15BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x363 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x63E CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x18DE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x486 PUSH2 0x1B59 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x1D2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x698 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x1DB2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x741 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x1DEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x795 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x1E60 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x7B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x2020 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DF PUSH2 0x7D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0x209F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x7F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0x246A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x806 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x815 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x25D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x861 CALLDATASIZE PUSH1 0x4 PUSH2 0x336B JUMP JUMPDEST PUSH2 0x2626 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x872 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x406 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH2 0x8B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x341C JUMP JUMPDEST PUSH2 0x27CE JUMP JUMPDEST PUSH2 0x486 PUSH2 0x8C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x27EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x406 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x92D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x382 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x952 CALLDATASIZE PUSH1 0x4 PUSH2 0x32BD JUMP JUMPDEST PUSH2 0x28E3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x486 PUSH2 0x29E5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x97C PUSH1 0xD SLOAD PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP3 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA19 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0xABC JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE TIMESTAMP SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA96 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xABA SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xACE JUMPI POP PUSH1 0xE SLOAD PUSH1 0x0 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD ISZERO DUP1 PUSH2 0xB00 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 DUP3 ADD SLOAD EQ JUMPDEST PUSH2 0xB5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665207769746864726177206265696E672070726F6365737365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB64 CALLER PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6F DUP4 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746865726520617265206E6F2073686172657320746F20626520756E7374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBE3 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD DUP3 SLOAD LT ISZERO PUSH2 0xC4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B6520616D6F756E74206973206F766572207374616B6564206261 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6C616E6365 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD06 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT ISZERO PUSH2 0xDAA JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDA3 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAD JUMP JUMPDEST POP TIMESTAMP JUMPDEST CALLER PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 DUP6 PUSH2 0xDFA PUSH32 0x0 DUP6 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xE4B JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH2 0xE48 SWAP1 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST GT ISZERO JUMPDEST PUSH2 0xE97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E27742068617665207265616C65617365642062616C616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH2 0xEA0 CALLER PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP4 PUSH2 0x2C18 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xF18 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520666F7220746869732077697468 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x191C985DC8185B5BDD5B9D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF2F SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0xF48 SWAP1 DUP5 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x10 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101F SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 PUSH2 0x107F PUSH1 0x1 DUP4 ADD PUSH2 0x2C54 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x5 DUP5 ADD SLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 GT ISZERO PUSH2 0x109D JUMPI PUSH1 0x4 DUP5 ADD SLOAD SWAP2 POP JUMPDEST PUSH1 0xC SLOAD ISZERO PUSH2 0x10CA JUMPI DUP4 SLOAD PUSH2 0x10B2 SWAP1 DUP4 SWAP1 PUSH2 0x3566 JUMP JUMPDEST PUSH2 0x10BC SWAP1 DUP5 PUSH2 0x350D JUMP JUMPDEST SWAP3 POP PUSH2 0x10C7 DUP4 PUSH2 0x2A9D JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE TIMESTAMP SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x113F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1163 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST LT ISZERO PUSH2 0x11D7 JUMPI PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x1 PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x118F SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x11AB JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH2 0x11A4 SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP PUSH2 0x11D5 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SLOAD DUP2 SWAP1 PUSH2 0x11BD SWAP1 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x1 DUP6 ADD SLOAD PUSH2 0x11D2 SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP JUMPDEST POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x125C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT ISZERO PUSH2 0x1297 JUMPI POP POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x0 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST POP POP PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 SWAP4 SWAP2 SWAP3 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x12E1 PUSH2 0x2D19 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x5 SLOAD SWAP2 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP4 SWAP1 SWAP3 DUP5 SWAP3 SWAP2 TIMESTAMP SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1399 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST LT ISZERO PUSH2 0x13AD JUMPI DUP1 PUSH2 0x13A9 DUP2 PUSH2 0x357D JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP2 SWAP1 PUSH2 0x13BF SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST GT ISZERO PUSH2 0x13D7 JUMPI PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x13D4 SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP2 SWAP1 PUSH2 0x13E9 SWAP1 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST GT ISZERO PUSH2 0x1401 JUMPI PUSH1 0x1 DUP4 ADD SLOAD PUSH2 0x13FE SWAP1 DUP4 PUSH2 0x350D JUMP JUMPDEST SWAP2 POP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x1422 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x143E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x348A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1460 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x1469 DUP3 PUSH2 0x2DB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1508 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x152C SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x158C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F20617070726F7665204354534920666F72207374616B69 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1B99C818DBDB9D1C9858DD PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x15B9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1634 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1658 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x1700 JUMPI POP PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE TIMESTAMP SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16FE SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0x1708 JUMPI POP JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO DUP1 ISZERO PUSH2 0x1718 JUMPI POP PUSH1 0xE SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1720 JUMPI POP JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x179C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0x1858 JUMPI PUSH1 0x3 SLOAD PUSH2 0x17BA PUSH1 0xD SLOAD PUSH2 0x2A9D JUMP JUMPDEST PUSH2 0x17C4 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1858 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C2FBCF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E17DE78 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1842 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0xB SLOAD PUSH2 0x1854 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH1 0xD SLOAD PUSH1 0xC PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x186C SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xD SLOAD PUSH1 0x10 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1886 SWAP1 DUP5 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0xD SSTORE PUSH1 0x3 SLOAD PUSH1 0xE SLOAD PUSH2 0x18A0 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x18B1 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 PUSH1 0x3 DUP2 SWAP1 SSTORE PUSH1 0xE DUP3 SWAP1 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x18D5 SWAP1 DUP5 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0x1908 DUP3 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x19AC JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x196D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1981 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A22 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A46 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT DUP1 ISZERO PUSH2 0x1A54 JUMPI POP PUSH1 0x6 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0x1B1C JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1ADA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B12 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 EQ ISZERO PUSH2 0x1B50 JUMPI PUSH2 0x19A5 PUSH32 0x0 TIMESTAMP PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B789B7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1CE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0x1000000 SWAP1 SWAP3 DIV SWAP2 SWAP1 SWAP2 AND SWAP4 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP4 POP SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1D2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x1000000 SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH2 0x12E1 PUSH2 0x2E75 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x6 SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x4 SWAP1 SWAP3 ADD SWAP2 EQ DUP1 ISZERO PUSH2 0x1E1F JUMPI POP PUSH1 0xC SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1E2F JUMPI DUP1 SLOAD PUSH2 0x19A5 SWAP1 PUSH2 0x2A9D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH2 0x1E41 SWAP2 PUSH2 0x350D JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0x1E50 JUMPI POP PUSH1 0x10 SLOAD ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1B50 JUMPI DUP1 SLOAD PUSH2 0x19A5 SWAP1 PUSH2 0x2EFA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1E8D SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x1F30 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F06 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F2A SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD EQ ISZERO PUSH2 0x2018 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x200E SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x1F2A SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4F31B8DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x9E6371BA SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2084 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2098 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2119 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x213D SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT DUP1 ISZERO SWAP2 POP PUSH2 0x214E JUMPI PUSH2 0x214E PUSH2 0x2F31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x85425F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x85425F4F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21E9 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8AEC8542 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2235 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2259 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA5A6CD0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA5A6CD0B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x22D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F6 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C7F22B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1FC8AD4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2357 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237B SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST SWAP1 POP PUSH2 0x23A0 PUSH2 0x239A PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH4 0x1000000 SWAP1 SWAP2 DIV AND SWAP1 JUMP JUMPDEST DUP3 PUSH2 0x2FA3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AC DUP3 DUP5 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x23C6 PUSH1 0x2 SLOAD DUP4 PUSH2 0x23C1 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x3114 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x23DA SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 SLOAD DUP2 SWAP1 PUSH2 0x23EE SWAP1 DUP5 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x23F8 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0xEBDE3BBD8B975E8EF263501EAFB2F271CB2D5583CF2F353E16BBD49B3577C88C SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP5 ISZERO PUSH2 0x2455 JUMPI PUSH2 0x2455 PUSH2 0x318B JUMP JUMPDEST PUSH2 0x245D PUSH2 0x15BE JUMP JUMPDEST POP PUSH1 0x1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x24B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2524 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2538 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x255C SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH2 0x25CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C6C6F77616E6365206F66204354534920746F6B656E73206E6F7420656E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x75676820746F206D6174636820616D6F756E742073656E740000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x1D2B CALLER DUP3 PUSH2 0x2FA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB64B3BED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xB64B3BED SWAP1 PUSH1 0x24 ADD PUSH2 0x206A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2657 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x91D1777781884D03A6757A803996E38DE2A42967FB37EEACA72729271025A9E2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2711 SWAP2 SWAP1 PUSH2 0x32DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC47F0027 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC47F0027 SWAP1 PUSH2 0x2740 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x275A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x276E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2792 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST POP PUSH32 0x6AAA0865532D48A9A0F63CC91DF7FF2AB538C896665C864AE02D0A1E7F81CF65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x27C2 SWAP2 SWAP1 PUSH2 0x3435 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x8 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x27DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2867 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH2 0x206A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2914 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x34D8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2979 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0x1000000 SWAP1 SWAP4 DIV AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH4 0x1000000 MUL PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 TIMESTAMP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A5D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A81 SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST GT ISZERO SWAP1 POP DUP1 PUSH2 0x2A8D JUMPI POP JUMP JUMPDEST PUSH2 0x2A95 PUSH2 0x2F31 JUMP JUMPDEST PUSH2 0x1D2B PUSH2 0x318B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2AB2 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2AC7 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x2AD1 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xB SLOAD PUSH2 0x2AE3 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xC SLOAD SWAP1 SWAP2 POP PUSH2 0x2AF3 DUP3 DUP7 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x2AFD SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x1 DUP3 ADD SLOAD ISZERO DUP1 ISZERO PUSH2 0x2B36 JUMPI POP PUSH1 0x2 DUP3 ADD SLOAD ISZERO JUMPDEST DUP1 PUSH2 0x2B42 JUMPI POP PUSH1 0x5 SLOAD DUP2 EQ JUMPDEST ISZERO PUSH2 0x2B4C JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x2B58 DUP3 PUSH1 0x1 ADD PUSH2 0x2C54 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2B6B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x5 SLOAD PUSH2 0x2B7E DUP3 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST EQ ISZERO PUSH2 0x2BA0 JUMPI PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x0 SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 DUP4 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x2BAE DUP3 PUSH1 0x2 PUSH2 0x350D JUMP JUMPDEST GT PUSH2 0x15B9 JUMPI PUSH1 0x0 PUSH1 0x2 DUP4 ADD DUP2 SWAP1 SSTORE PUSH1 0x1 DUP4 ADD SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x4 SLOAD PUSH2 0x2BDC SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x2BE6 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xB SLOAD PUSH2 0x2BF8 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2C09 JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0xC SLOAD DUP6 PUSH2 0x2AF3 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH2 0x2C2B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x2C3B JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x10 SLOAD DUP5 PUSH2 0x2C4A SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x19A5 SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH1 0x2 PUSH2 0x2C6A SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST GT PUSH2 0x2CA3 JUMPI PUSH1 0x8 DUP3 PUSH1 0x2 ADD SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2C86 JUMPI PUSH2 0x2C86 PUSH2 0x35AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x2CA0 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 ADD SLOAD GT DUP1 ISZERO PUSH2 0x2CC8 JUMPI POP PUSH1 0x5 SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH2 0x2CC5 SWAP1 PUSH1 0x1 PUSH2 0x350D JUMP JUMPDEST GT ISZERO JUMPDEST ISZERO PUSH2 0x2D14 JUMPI PUSH1 0x8 PUSH1 0x1 DUP4 PUSH1 0x2 ADD SLOAD PUSH2 0x2CE0 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x2CF0 JUMPI PUSH2 0x2CF0 PUSH2 0x35AE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2D0A SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x1F2A SWAP1 DUP3 PUSH2 0x350D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2D68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2DCD JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2DE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP1 PUSH2 0x348A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2E0B JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0x1000000 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT AND PUSH4 0x1000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 DUP1 ISZERO PUSH2 0x2E71 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2EC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2D97 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2F0F JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD PUSH1 0xE SLOAD PUSH2 0x2F21 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP1 SWAP2 POP PUSH2 0x2C4A DUP3 DUP6 PUSH2 0x3547 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 SLOAD LT PUSH2 0x12E1 JUMPI PUSH1 0x0 PUSH2 0x2F45 PUSH2 0x324B JUMP JUMPDEST SWAP1 POP PUSH2 0x2F50 DUP2 PUSH2 0x328C JUMP JUMPDEST PUSH1 0xC SSTORE PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD DUP2 SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x2F98 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xB SSTORE POP PUSH1 0x0 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x2FAC DUP3 PUSH2 0x2B05 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2FD3 SWAP1 DUP3 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x5 SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE PUSH1 0x9 SLOAD PUSH2 0x300A SWAP1 DUP3 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD PUSH4 0x9A051545 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP2 DUP5 SWAP2 PUSH32 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x9A051545 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30CA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30EE SWAP2 SWAP1 PUSH2 0x3352 JUMP JUMPDEST PUSH2 0x30F8 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0xB SLOAD PUSH2 0x312B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x3135 SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH2 0x313F SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC SLOAD DUP3 PUSH1 0xD SLOAD PUSH2 0x3154 SWAP2 SWAP1 PUSH2 0x3547 JUMP JUMPDEST PUSH2 0x315E SWAP2 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH2 0x3170 SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 GT ISZERO PUSH2 0x3182 JUMPI SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP SWAP3 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x9 SLOAD PUSH2 0x319B SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE ISZERO PUSH2 0x3224 JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x534A7E1D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA694FC3A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x320B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x4 SSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x9 DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP2 PUSH2 0x3244 DUP4 PUSH2 0x357D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x327D JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3287 PUSH1 0x1 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SLOAD PUSH1 0xA SLOAD PUSH2 0x329F SWAP2 SWAP1 PUSH2 0x3566 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x32AD DUP5 DUP4 PUSH2 0x3547 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x2AFD SWAP2 SWAP1 PUSH2 0x350D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19A5 DUP2 PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x19A5 DUP2 PUSH2 0x35DA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x330A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3315 DUP2 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3325 DUP2 PUSH2 0x35DA JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x19A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x337D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x33A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x33BB JUMPI PUSH2 0x33BB PUSH2 0x35C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x33E3 JUMPI PUSH2 0x33E3 PUSH2 0x35C4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x33FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x342E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3462 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x3446 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3474 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x3520 JUMPI PUSH2 0x3520 PUSH2 0x3598 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x3542 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3561 JUMPI PUSH2 0x3561 PUSH2 0x3598 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3578 JUMPI PUSH2 0x3578 PUSH2 0x3598 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3591 JUMPI PUSH2 0x3591 PUSH2 0x3598 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1D2B JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0x4A DUP11 0xFC PUSH29 0xBC8A55FC2CEB377C0CDE3718CB743BA539D9CE5E029EC8F30D0D766473 PUSH16 0x6C634300080600330000000000000000 ",
      "sourceMap": "960:21509:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1821:50;;;;;;;;;;-1:-1:-1;1821:50:22;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12535:25:28;;;12596:13;;12591:2;12576:18;;;12569:41;;;;12652:15;;;12646:22;12626:18;;;12619:50;12711:15;;12705:22;12700:2;12685:18;;12678:50;12765:13;;12759:3;12744:19;;12737:42;12822:15;12816:22;12810:3;12795:19;;12788:51;12522:3;12507:19;1821:50:22;;;;;;;;1269:34;;;;;;;;;;;;;;;;;;;5336:25:28;;;5324:2;5309:18;1269:34:22;5291:76:28;2638:32:22;;;;;;;;;;;;;;;;2560:29;;;;;;;;;;;;;;;;1196;;;;;;;;;;;;;;;;1375:56:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3111:32:28;;;3093:51;;3081:2;3066:18;1375:56:24;3048:102:28;21887:580:22;;;;;;;;;;;;;:::i;:::-;;;;5077:14:28;;5070:22;5052:41;;5124:2;5109:18;;5102:34;;;;5152:18;;;5145:34;5040:2;5025:18;21887:580:22;5007:178:28;2481:35:22;;;;;;;;;;;;;;;;10811:1203;;;;;;;;;;-1:-1:-1;10811:1203:22;;;;;:::i;:::-;;:::i;:::-;;12145:873;;;;;;;;;;-1:-1:-1;12145:873:22;;;;;:::i;:::-;;:::i;3908:1266::-;;;;;;;;;;-1:-1:-1;3908:1266:22;;;;;:::i;:::-;;:::i;21439:442::-;;;;;;;;;;;;;:::i;1313:24:24:-;;;;;;;;;;;;;;;3064:74;;;;;;;;;;;;;:::i;6788:856:22:-;;;;;;;;;;-1:-1:-1;6788:856:22;;;;;:::i;:::-;;:::i;2711:34::-;;;;;;;;;;;;;;;;3407:296;;;;;;;;;;-1:-1:-1;3407:296:22;;;;;:::i;:::-;;:::i;1067:33::-;;;;;;;;;;;;;;;16170:1254;;;;;;;;;;;;;:::i;1042:84:10:-;;;;;;;;;;-1:-1:-1;1089:4:10;1112:7;;;;;;1042:84;;;4829:14:28;;4822:22;4804:41;;4792:2;4777:18;1042:84:10;4759:92:28;1033:28:22;;;;;;;;;;;;;;;5975:680;;;;;;;;;;-1:-1:-1;5975:680:22;;;;;:::i;:::-;;:::i;1127:27::-;;;;;;;;;;;;;;;;3228:314:24;;;:::i;5394:145::-;;;;;;;;;;;;;:::i;1231:32:22:-;;;;;;;;;;;;;;;;1160:30;;;;;;;;;;;;;;;;1877:52;;;;;;;;;;;;;;;2270:26;;;;;;;;;;;;;;;;2941:68:24;;;;;;;;;;;;;:::i;5615:85::-;;;;;;;;;;-1:-1:-1;5661:7:24;5687:6;;;;-1:-1:-1;;;;;5687:6:24;5615:85;;7781:747:22;;;;;;;;;;-1:-1:-1;7781:747:22;;;;;:::i;:::-;;:::i;1310:36::-;;;;;;;;;;;;;;;5322:516;;;;;;;;;;-1:-1:-1;5322:516:22;;;;;:::i;:::-;;:::i;4310:117:24:-;;;;;;;;;;-1:-1:-1;4310:117:24;;;;;:::i;:::-;;:::i;9176:1383:22:-;;;;;;;;;;-1:-1:-1;9176:1383:22;;;;;:::i;:::-;;:::i;8742:281::-;;;;;;;;;;-1:-1:-1;8742:281:22;;;;;:::i;:::-;;:::i;4006:117:24:-;;;;;;;;;;-1:-1:-1;4006:117:24;;;;;:::i;:::-;;:::i;2195:35:22:-;;;;;;;;;;;;;;;;2347:32;;;;;;;;;;;;;;;;2505:383:24;;;;;;;;;;-1:-1:-1;2505:383:24;;;;;:::i;:::-;;:::i;1343:25::-;;;;;;;;;;;;;;;2021:43:22;;;;;;;;;;-1:-1:-1;2021:43:22;;;;;:::i;:::-;;:::i;3686:201:24:-;;;;;;:::i;:::-;;:::i;1107:14:22:-;;;;;;;;;;-1:-1:-1;1107:14:22;;;;-1:-1:-1;;;;;1107:14:22;;;1352:38;;;;;;;;;;;;;;;2128:33;;;;;;;;;;;;;;;;4778:274:24;;;;;;;;;;-1:-1:-1;4778:274:24;;;;;:::i;:::-;;:::i;15774:272:22:-;;;;;;;;;;;;;:::i;21887:580::-;21999:14;22027:28;22069:23;22140:45;22164:20;;22140:23;:45::i;:::-;22212:42;;-1:-1:-1;;;22212:42:22;;22248:4;22212:42;;;3093:51:28;22117:68:22;;-1:-1:-1;22257:1:22;;-1:-1:-1;;;;;22212:7:22;:27;;;;3066:18:28;;22212:42:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;:124;;;;-1:-1:-1;22274:44:22;;-1:-1:-1;;;22274:44:22;;22312:4;22274:44;;;3093:51:28;22321:15:22;;22274:7;-1:-1:-1;;;;;22274:29:22;;;;3066:18:28;;22274:44:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;22212:124;22195:204;;;-1:-1:-1;22384:14:22;;22355:5;;22362:20;;-1:-1:-1;22384:14:22;21887:580::o;22195:204::-;-1:-1:-1;22445:14:22;;22417:4;;22423:20;;-1:-1:-1;22445:14:22;21887:580::o;10811:1203::-;10912:10;10873:24;10900:23;;;:11;:23;;;;;10954:21;;;:32;:37;;:112;;-1:-1:-1;11047:19:22;;11011:32;;;;:55;10954:112;10933:192;;;;-1:-1:-1;;;10933:192:22;;10639:2:28;10933:192:22;;;10621:21:28;10678:2;10658:18;;;10651:30;10717:34;10697:18;;;10690:62;-1:-1:-1;;;10768:18:28;;;10761:31;10809:19;;10933:192:22;;;;;;;;;11136:31;11156:10;11136:19;:31::i;:::-;11223:23;11249:32;11273:7;11249:23;:32::i;:::-;11223:58;;11317:1;11299:15;:19;11291:66;;;;-1:-1:-1;;;11291:66:22;;8278:2:28;11291:66:22;;;8260:21:28;8317:2;8297:18;;;8290:30;8356:34;8336:18;;;8329:62;-1:-1:-1;;;8407:18:28;;;8400:32;8449:19;;11291:66:22;8250:224:28;11291:66:22;11403:15;11367:4;:21;;:32;;;:51;;;;;;;:::i;:::-;;;;-1:-1:-1;;11475:21:22;;;:32;11450:21;;:57;;11429:141;;;;-1:-1:-1;;;11429:141:22;;11041:2:28;11429:141:22;;;11023:21:28;11080:2;11060:18;;;11053:30;11119:34;11099:18;;;11092:62;-1:-1:-1;;;11170:18:28;;;11163:35;11215:19;;11429:141:22;11013:227:28;11429:141:22;11605:15;11581:20;;:39;;;;;;;:::i;:::-;;;;-1:-1:-1;;11665:19:22;;11630:32;;;:54;11733:42;;-1:-1:-1;;;11733:42:22;;11769:4;11630:21;11733:42;;3093:51:28;11695:24:22;;;;11733:7;-1:-1:-1;;;;;11733:27:22;;;;3066:18:28;;11733:42:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;11729:201;;;11812:44;;-1:-1:-1;;;11812:44:22;;11850:4;11812:44;;;3093:51:28;11812:7:22;-1:-1:-1;;;;;11812:29:22;;;;3066:18:28;;11812:44:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11793:63;;11729:201;;;-1:-1:-1;11904:15:22;11729:201;11953:10;11945:62;11965:7;11974:32;11993:13;11974:16;:32;:::i;:::-;11945:62;;;13024:25:28;;;13080:2;13065:18;;13058:34;;;;12997:18;11945:62:22;;;;;;;10863:1151;;;10811:1203;:::o;12145:873::-;12247:10;12208:24;12235:23;;;:11;:23;;;;;12289:21;;;:32;:36;;;;:115;;-1:-1:-1;12385:19:22;;12345:32;;;;:36;;12380:1;12345:36;:::i;:::-;:59;;12289:115;12268:194;;;;-1:-1:-1;;;12268:194:22;;9451:2:28;12268:194:22;;;9433:21:28;;;9470:18;;;9463:30;9529:34;9509:18;;;9502:62;9581:18;;12268:194:22;9423:182:28;12268:194:22;12472:31;12492:10;12472:19;:31::i;:::-;12559:14;12576:34;12602:7;12576:25;:34::i;:::-;12559:51;;12677:6;12641:4;:21;;:32;;;:42;;12620:132;;;;-1:-1:-1;;;12620:132:22;;10227:2:28;12620:132:22;;;10209:21:28;10266:2;10246:18;;;10239:30;10305:34;10285:18;;;10278:62;-1:-1:-1;;;10356:18:28;;;10349:41;10407:19;;12620:132:22;10199:233:28;12620:132:22;12798:6;12762:4;:21;;:32;;;:42;;;;;;;:::i;:::-;;;;-1:-1:-1;;12814:31:22;;12839:6;;12814:4;;:21;;:31;;12839:6;;12814:31;:::i;:::-;;;;;;;;12877:7;12856:17;;:28;;;;;;;:::i;:::-;;;;;;;;12917:6;12894:19;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;12933:34:22;;-1:-1:-1;;;12933:34:22;;12947:10;12933:34;;;4559:51:28;4626:18;;;4619:34;;;12933:4:22;-1:-1:-1;;;;;12933:13:22;;;;4532:18:28;;12933:34:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12982:29:22;;5336:25:28;;;12991:10:22;;12982:29;;5324:2:28;5309:18;12982:29:22;;;;;;;12198:820;;12145:873;:::o;3908:1266::-;-1:-1:-1;;;;;4081:25:22;;4020:21;4081:25;;;:11;:25;;;;;4020:21;4133:41;4157:16;;;4133:23;:41::i;:::-;4378:19;;4346:29;;;;4116:58;;-1:-1:-1;4184:23:22;;;;-1:-1:-1;4342:116:22;;;4429:18;;;:29;;-1:-1:-1;4342:116:22;4472:17;;:21;4468:157;;4519:18;;:36;;4540:15;;4519:36;:::i;:::-;4509:46;;;;:::i;:::-;;;4583:31;4607:6;4583:23;:31::i;:::-;4569:45;;4468:157;4638:43;;-1:-1:-1;;;4638:43:22;;4675:4;4638:43;;;3093:51:28;4684:15:22;;4638:7;-1:-1:-1;;;;;4638:28:22;;;;3066:18:28;;4638:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;4634:505;;;4787:26;4816:17;;4836:1;4816:21;;;;:::i;:::-;4855:27;;;;4787:50;;-1:-1:-1;4787:50:22;;4855:31;;:16;:31;:::i;:::-;:53;4851:278;;;4943:29;;;;4928:44;;;;:::i;:::-;;;4851:278;;;4997:27;;;;5032:18;;4997:31;;:27;:31;:::i;:::-;:53;4993:136;;;5085:16;;;:29;5070:44;;;;:::i;:::-;;;4993:136;4701:438;4634:505;5156:11;3908:1266;-1:-1:-1;;;;;3908:1266:22:o;21439:442::-;21678:43;;-1:-1:-1;;;21678:43:22;;21715:4;21678:43;;;3093:51:28;21551:14:22;;;;;;21724:15;;-1:-1:-1;;;;;21678:7:22;:28;;;;3066:18:28;;21678:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;21674:135;;;-1:-1:-1;;21768:18:22;;21788:20;;21761:5;;21768:18;;-1:-1:-1;21788:20:22;21439:442::o;21674:135::-;-1:-1:-1;;21833:18:22;;21853:20;;21827:4;;21833:18;;-1:-1:-1;21853:20:22;21439:442::o;3064:74:24:-;4554:6;;;;;-1:-1:-1;;;;;4554:6:24;4564:10;4554:20;4546:65;;;;-1:-1:-1;;;4546:65:24;;;;;;;:::i;:::-;3121:10:::1;:8;:10::i;:::-;3064:74::o:0;6788:856:22:-;-1:-1:-1;;;;;6949:25:22;;;6902:7;6949:25;;;:11;:25;;;;;;7050:17;;7081:43;;-1:-1:-1;;;7081:43:22;;7118:4;7081:43;;;3093:51:28;6902:7:22;;6949:25;;6902:7;;7050:17;7127:15;;7081:7;:28;;;;;;3066:18:28;;7081:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;7077:99;;;7156:20;;;;:::i;:::-;;;;7077:99;7277:27;;;;7311:18;;7277:31;;:16;:31;:::i;:::-;:52;7273:118;;;7362:29;;;;7343:48;;;;:::i;:::-;;;7273:118;7491:27;;;;7525:18;;7491:31;;:27;:31;:::i;:::-;:52;7487:118;;;7576:16;;;:29;7557:48;;;;:::i;:::-;;;7487:118;-1:-1:-1;7622:15:22;6788:856;-1:-1:-1;;;6788:856:22:o;3407:296::-;1456:13:9;;;;;;;;:30;;-1:-1:-1;1474:12:9;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:9;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:9;;;;;1594:98;3492:23:22::1;3509:5;3492:16;:23::i;:::-;3546:49;::::0;-1:-1:-1;;;3546:49:22;;-1:-1:-1;;;;;3567:7:22::1;4577:32:28::0;;3546:49:22::1;::::0;::::1;4559:51:28::0;-1:-1:-1;;4626:18:28;;;4619:34;3546:4:22::1;:12;::::0;::::1;::::0;4532:18:28;;3546:49:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3525:139;;;::::0;-1:-1:-1;;;3525:139:22;;11808:2:28;3525:139:22::1;::::0;::::1;11790:21:28::0;11847:2;11827:18;;;11820:30;11886:34;11866:18;;;11859:62;-1:-1:-1;;;11937:18:28;;;11930:41;11988:19;;3525:139:22::1;11780:233:28::0;3525:139:22::1;3674:3;:22:::0;;-1:-1:-1;;;;;;3674:22:22::1;-1:-1:-1::0;;;;;3674:22:22;::::1;;::::0;;1714:66:9;;;;1764:5;1748:21;;-1:-1:-1;;1748:21:9;;;1714:66;1438:348;3407:296:22;;:::o;16170:1254::-;16255:42;;-1:-1:-1;;;16255:42:22;;16291:4;16255:42;;;3093:51:28;16228:24:22;;16255:7;-1:-1:-1;;;;;16255:27:22;;;;3066:18:28;;16255:42:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16228:69;;16343:1;16324:16;:20;:98;;;;-1:-1:-1;16360:44:22;;-1:-1:-1;;;16360:44:22;;16398:4;16360:44;;;3093:51:28;16407:15:22;;16360:7;-1:-1:-1;;;;;16360:29:22;;;;3066:18:28;;16360:44:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;16324:98;16307:133;;;16433:7;16170:1254::o;16307:133::-;16492:20;;:25;:48;;;;-1:-1:-1;16521:14:22;;:19;16492:48;16488:61;;;16542:7;16170:1254::o;16488:61::-;16654:20;;16650:60;;16676:34;;-1:-1:-1;;;16676:34:22;;;;;5336:25:28;;;16676:7:22;-1:-1:-1;;;;;16676:16:22;;;;5309:18:28;;16676:34:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16650:60;16761:20;;16721:22;;16761:24;16757:328;;16898:15;;16834:45;16858:20;;16834:23;:45::i;:::-;:79;;;;:::i;:::-;16801:112;-1:-1:-1;16931:18:22;;16927:148;;16969:31;;-1:-1:-1;;;16969:31:22;;;;;5336:25:28;;;16969:7:22;-1:-1:-1;;;;;16969:15:22;;;;5309:18:28;;16969:31:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17046:14;17032:11;;:28;;;;:::i;:::-;17018:11;:42;16927:148;17143:20;;17122:17;;:41;;;;;;;:::i;:::-;;;;-1:-1:-1;;17196:20:22;;17173:19;:43;;:19;;:43;;17196:20;;17173:43;:::i;:::-;;;;-1:-1:-1;;17249:1:22;17226:20;:24;17298:15;;17281:14;;:32;;17298:15;17281:32;:::i;:::-;17260:17;;:53;;;;;;;:::i;:::-;;;;-1:-1:-1;;17341:1:22;17323:15;:19;;;17352:14;:31;;;17393:19;:24;;17416:1;;17341;17393:24;;17416:1;;17393:24;:::i;:::-;;;;-1:-1:-1;;;;16170:1254:22:o;5975:680::-;-1:-1:-1;;;;;6132:25:22;;6092:7;6132:25;;;:11;:25;;;;;:53;;;6213:19;;6199:10;6132:53;;6199:10;:::i;:::-;:33;6195:436;;;6255:44;;-1:-1:-1;;;6255:44:22;;6293:4;6255:44;;;3093:51:28;6255:7:22;-1:-1:-1;;;;;6255:29:22;;;;3066:18:28;;6255:44:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6248:51;5975:680;-1:-1:-1;;;5975:680:22:o;6195:436::-;6333:42;;-1:-1:-1;;;6333:42:22;;6369:4;6333:42;;;3093:51:28;6378:1:22;;6333:7;-1:-1:-1;;;;;6333:27:22;;;;3066:18:28;;6333:42:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;:91;;;;;6405:19;;6395:6;:29;6333:91;6316:315;;;6456:44;;-1:-1:-1;;;6456:44:22;;6494:4;6456:44;;;3093:51:28;6503:13:22;;6456:7;-1:-1:-1;;;;;6456:29:22;;;;3066:18:28;;6456:44:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:60;;;;:::i;6316:315::-;6547:19;;6537:6;:29;6533:98;;;6589:31;6607:13;6589:15;:31;:::i;6533:98::-;-1:-1:-1;6647:1:22;;5975:680;-1:-1:-1;;5975:680:22:o;3228:314:24:-;3333:60;;-1:-1:-1;;;3333:60:24;;3386:4;3333:60;;;3093:51:28;3333:13:24;-1:-1:-1;;;;;3333:18:24;;;;3359:9;;3066:18:28;;3333:60:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3403:52:24;;-1:-1:-1;;;3403:52:24;;3435:4;3403:52;;;3599:34:28;-1:-1:-1;;;;;3450:3:24;3669:15:28;;3649:18;;;3642:43;3403:13:24;:23;;-1:-1:-1;3403:23:24;;-1:-1:-1;3534:18:28;;;-1:-1:-1;3403:52:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3465:13;-1:-1:-1;;;;;3465:23:24;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3508:6:24;;;3500:35;;-1:-1:-1;;;;;3508:6:24;;;;;;;;;-1:-1:-1;3525:9:24;3500:35;;;;;-1:-1:-1;3525:9:24;3500:35;3508:6;3500:35;3525:9;3508:6;3500:35;;;;;;;;;;;;;;;;;;;;;3228:314::o;5394:145::-;4554:6;;;;;-1:-1:-1;;;;;4554:6:24;4564:10;4554:20;4546:65;;;;-1:-1:-1;;;4546:65:24;;;;;;;:::i;:::-;5500:1:::1;5484:6:::0;;5463:40:::1;::::0;5484:6;;;::::1;-1:-1:-1::0;;;;;5484:6:24::1;::::0;5463:40:::1;::::0;5500:1;;5463:40:::1;5530:1;5513:19:::0;;-1:-1:-1;;;;;;5513:19:24::1;::::0;;5394:145::o;2941:68::-;4554:6;;;;;-1:-1:-1;;;;;4554:6:24;4564:10;4554:20;4546:65;;;;-1:-1:-1;;;4546:65:24;;;;;;;:::i;:::-;2994:8:::1;:6;:8::i;7781:747:22:-:0;-1:-1:-1;;;;;7966:25:22;;7896:7;7966:25;;;:11;:25;;;;;8108:19;;8086:18;;;;7966:42;;;;;8086:41;:67;;;;-1:-1:-1;8131:17:22;;:22;;8086:67;8082:135;;;8198:18;;8174:43;;:23;:43::i;8082:135::-;8329:19;;8303:18;;;;;:22;;;:::i;:::-;:45;;:85;;;;-1:-1:-1;8364:19:22;;:24;;8303:85;8286:165;;;8432:18;;8406:45;;:25;:45::i;5322:516::-;5549:17;;-1:-1:-1;;;;;5478:25:22;;5438:7;5478:25;;;:11;:25;;;;;:51;;;5438:7;;5549:17;5478:55;;:40;:55;:::i;:::-;:88;5461:166;;;5584:43;;-1:-1:-1;;;5584:43:22;;5621:4;5584:43;;;3093:51:28;5584:7:22;-1:-1:-1;;;;;5584:28:22;;;;3066:18:28;;5584:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5577:50;5322:516;-1:-1:-1;;5322:516:22:o;5461:166::-;5721:17;;-1:-1:-1;;;;;5654:25:22;;;;;;:11;:25;;;;;:51;;;:84;5637:176;;;5756:43;;-1:-1:-1;;;5756:43:22;;5793:4;5756:43;;;3093:51:28;5802:11:22;;5756:7;-1:-1:-1;;;;;5756:28:22;;;;3066:18:28;;5756:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;5637:176::-;-1:-1:-1;5830:1:22;;5322:516;-1:-1:-1;5322:516:22:o;4310:117:24:-;4385:35;;-1:-1:-1;;;4385:35:24;;-1:-1:-1;;;;;3111:32:28;;;4385:35:24;;;3093:51:28;4385:13:24;:20;;;;3066:18:28;;4385:35:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4310:117;:::o;9176:1383:22:-;9297:43;;-1:-1:-1;;;9297:43:22;;9334:4;9297:43;;;3093:51:28;9241:4:22;;;;9344:15;;-1:-1:-1;;;;;9297:7:22;:28;;;;3066:18:28;;9297:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;;;-1:-1:-1;9369:48:22;;9395:22;:20;:22::i;:::-;9472:35;;-1:-1:-1;;;9472:35:22;;;;;5336:25:28;;;9428:14:22;;9472:3;-1:-1:-1;;;;;9472:27:22;;;;5309:18:28;;9472:35:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9457:85:22;;:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9555:24;;-1:-1:-1;;;9555:24:22;;;;;5336:25:28;;;9428:116:22;;-1:-1:-1;9555:3:22;-1:-1:-1;;;;;9555:16:22;;;;5309:18:28;;9555:24:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9611:3:22;;:33;;-1:-1:-1;;;9611:33:22;;;;;13024:25:28;;;13065:18;;;13058:34;;;9590:18:22;;-1:-1:-1;;;;;9611:3:22;;:17;;12997:18:28;;9611:33:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9590:54;;9654:34;9668:7;5661::24;5687:6;-1:-1:-1;;;;;5687:6:24;;;;;;5615:85;9668:7:22;9677:10;9654:13;:34::i;:::-;9745:23;9771:19;9780:10;9771:6;:19;:::i;:::-;9745:45;;10030:35;10080:53;10120:12;;10102:15;:30;;;;:::i;:::-;10080:21;:53::i;:::-;10030:103;;10162:27;10143:15;;:46;;;;;;;:::i;:::-;;;;-1:-1:-1;;10307:12:22;;10335:27;;10289:30;;:15;:30;:::i;:::-;10288:74;;;;:::i;:::-;10261:12;:101;;;10426:15;;10378:64;;;13334:25:28;;;13390:2;13375:18;;13368:34;;;13418:18;;;13411:34;;;;13476:2;13461:18;;13454:34;10378:64:22;;13321:3:28;13306:19;10378:64:22;;;;;;;10457:20;10453:46;;;10479:20;:18;:20::i;:::-;10509:22;:20;:22::i;:::-;-1:-1:-1;10548:4:22;;9176:1383;-1:-1:-1;;;;;;9176:1383:22:o;8742:281::-;1089:4:10;1112:7;;;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:10;;9106:2:28;1347:38:10;;;9088:21:28;9145:2;9125:18;;;9118:30;-1:-1:-1;;;9164:18:28;;;9157:46;9220:18;;1347:38:10;9078:166:28;1347:38:10;8837:53:22::1;::::0;-1:-1:-1;;;8837:53:22;;8855:10:::1;8837:53;::::0;::::1;4245:34:28::0;8875:4:22::1;4295:18:28::0;;;4288:43;4347:18;;;4340:34;;;8837:4:22::1;-1:-1:-1::0;;;;;8837:17:22::1;::::0;::::1;::::0;4180:18:28;;8837:53:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8816:156;;;::::0;-1:-1:-1;;;8816:156:22;;8681:2:28;8816:156:22::1;::::0;::::1;8663:21:28::0;8720:2;8700:18;;;8693:30;8759:34;8739:18;;;8732:62;8830:26;8810:18;;;8803:54;8874:19;;8816:156:22::1;8653:246:28::0;8816:156:22::1;8982:34;8996:10;9008:7;8982:13;:34::i;4006:117:24:-:0;4077:39;;-1:-1:-1;;;4077:39:24;;-1:-1:-1;;;;;3111:32:28;;;4077:39:24;;;3093:51:28;4077:13:24;:24;;;;3066:18:28;;4077:39:24;3048:102:28;2505:383:24;4554:6;;;;;-1:-1:-1;;;;;4554:6:24;4564:10;4554:20;4546:65;;;;-1:-1:-1;;;4546:65:24;;;;;;;:::i;:::-;2648:28:::1;::::0;-1:-1:-1;;;2648:28:24;;1240:66:::1;2648:28;::::0;::::1;5336:25:28::0;2580:36:24::1;::::0;2648:3:::1;-1:-1:-1::0;;;;;2648:9:24::1;::::0;::::1;::::0;5309:18:28;;2648:28:24::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2761:33;::::0;-1:-1:-1;;;2761:33:24;;2580:97;;-1:-1:-1;;;;;;2761:27:24;::::1;::::0;::::1;::::0;:33:::1;::::0;2789:4;;2761:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2857:24;2876:4;2857:24;;;;;;:::i;:::-;;;;;;;;2570:318;2505:383:::0;:::o;2021:43:22:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2021:43:22;:::o;3686:201:24:-;3767:51;;-1:-1:-1;;;3767:51:24;;-1:-1:-1;;;;;3111:32:28;;;3767:51:24;;;3093::28;3767:13:24;:18;;;;3793:9;;3066:18:28;;3767:51:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3828:52:24;;-1:-1:-1;;;3828:52:24;;-1:-1:-1;;;;;3617:15:28;;;3828:52:24;;;3599:34:28;3875:3:24;3669:15:28;;3649:18;;;3642:43;3828:13:24;:23;;-1:-1:-1;3828:23:24;;-1:-1:-1;3534:18:28;;;-1:-1:-1;3828:52:24;3516:175:28;4778:274:24;4554:6;;;;;-1:-1:-1;;;;;4554:6:24;4564:10;4554:20;4546:65;;;;-1:-1:-1;;;4546:65:24;;;;;;;:::i;:::-;-1:-1:-1;;;;;4879:22:24;::::1;4858:107;;;::::0;-1:-1:-1;;;4858:107:24;;7871:2:28;4858:107:24::1;::::0;::::1;7853:21:28::0;7910:2;7890:18;;;7883:30;7949:34;7929:18;;;7922:62;-1:-1:-1;;;8000:18:28;;;7993:36;8046:19;;4858:107:24::1;7843:228:28::0;4858:107:24::1;5001:6;::::0;;4980:38:::1;::::0;-1:-1:-1;;;;;4980:38:24;;::::1;::::0;5001:6;;;::::1;;::::0;4980:38:::1;::::0;::::1;5028:6;:17:::0;;-1:-1:-1;;;;;5028:17:24;;::::1;::::0;::::1;-1:-1:-1::0;;;;;;5028:17:24;;::::1;::::0;;;::::1;::::0;;4778:274::o;15774:272:22:-;15872:43;;-1:-1:-1;;;15872:43:22;;15909:4;15872:43;;;3093:51:28;15832:25:22;;15919:15;;-1:-1:-1;;;;;15872:7:22;:28;;;;3066:18:28;;15872:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;15832:102;;15949:20;15944:34;;15971:7;15774:272::o;15944:34::-;15987:22;:20;:22::i;:::-;16019:20;:18;:20::i;19583:457::-;19679:13;19712:17;;19733:1;19712:22;19708:36;;;-1:-1:-1;19743:1:22;;19583:457;-1:-1:-1;19583:457:22:o;19708:36::-;19754:24;19828:12;;19810:15;;19793:14;;:32;;;;:::i;:::-;:47;;;;:::i;:::-;19754:86;;19902:29;19948:16;19934:11;;:30;;;;:::i;:::-;20016:17;;19902:62;;-1:-1:-1;19982:30:22;19902:62;19982:6;:30;:::i;:::-;19981:52;;;;:::i;:::-;19974:59;19583:457;-1:-1:-1;;;;19583:457:22:o;17618:970::-;-1:-1:-1;;;;;17708:18:22;;17681:24;17708:18;;;:11;:18;;;;;17766:30;;;;:19;;;17824:32;:37;:94;;;;-1:-1:-1;17881:32:22;;;;:37;17824:94;17823:152;;;;17958:17;;17935:19;:40;17823:152;17806:187;;;17986:7;;17618:970;:::o;17806:187::-;18061:44;18085:4;:19;;18061:23;:44::i;:::-;18036:4;:21;;;:69;;;;;;;:::i;:::-;;;;-1:-1:-1;;18190:17:22;;18163:23;:19;18185:1;18163:23;:::i;:::-;:44;18159:423;;;18258:19;;;:32;;18223;;;:67;18258:32;18304:36;;18387:17;;18354:30;;;:50;1438:348:9;3407:296:22;;:::o;18159:423::-;18452:17;;18425:23;:19;18447:1;18425:23;:::i;:::-;:44;18421:161;;18520:1;18485:32;;;:36;;;:19;;;18535:36;17671:917;;17618:970;:::o;19117:460::-;19212:14;19242:24;19313:15;;19298:12;;19281:14;;:29;;;;:::i;:::-;:47;;;;:::i;:::-;19242:86;;19390:29;19436:16;19422:11;;:30;;;;:::i;:::-;19390:62;-1:-1:-1;19466:26:22;19462:40;;-1:-1:-1;19501:1:22;;19117:460;-1:-1:-1;;;19117:460:22:o;19462:40::-;19549:21;19528:17;;19520:5;:25;;;;:::i;20425:374::-;20522:14;20606:29;20655:17;;20638:14;;:34;;;;:::i;:::-;20606:66;-1:-1:-1;20686:26:22;20682:40;;-1:-1:-1;20721:1:22;;20425:374;-1:-1:-1;;20425:374:22:o;20682:40::-;20771:21;20748:19;;20740:5;:27;;;;:::i;:::-;20739:53;;;;:::i;20805:628::-;20911:14;21041:17;;21021:1;:12;;;21036:1;21021:16;;;;:::i;:::-;:37;21017:134;;21100:26;21127:1;:12;;;21100:40;;;;;;;;:::i;:::-;;;;;;;;;21083:1;:14;;;:57;;;;:::i;:::-;21074:66;;21017:134;21255:1;21240;:12;;;:16;:57;;;;-1:-1:-1;21280:17:22;;21260:12;;;;:16;;21275:1;21260:16;:::i;:::-;:37;;21240:57;21236:191;;;21372:26;21414:1;21399;:12;;;:16;;;;:::i;:::-;21372:44;;;;;;;;:::i;:::-;;;;;;;;;21339:1;:14;;;:77;;;;:::i;:::-;21313:103;;;;:::i;21236:191::-;20805:628;;;:::o;2054:117:10:-;1089:4;1112:7;;;;;;1613:41;;;;-1:-1:-1;;;1613:41:10;;7522:2:28;1613:41:10;;;7504:21:28;7561:2;7541:18;;;7534:30;-1:-1:-1;;;7580:18:28;;;7573:50;7640:18;;1613:41:10;7494:170:28;1613:41:10;2122:5:::1;2112:15:::0;;-1:-1:-1;;2112:15:10::1;::::0;;2142:22:::1;665:10:14::0;2151:12:10::1;2142:22;::::0;-1:-1:-1;;;;;3111:32:28;;;3093:51;;3081:2;3066:18;2142:22:10::1;;;;;;;2054:117::o:0;2246:159:24:-;1456:13:9;;;;;;;;:30;;-1:-1:-1;1474:12:9;;;;1473:13;1456:30;1448:89;;;;-1:-1:-1;;;1448:89:9;;;;;;;:::i;:::-;1548:19;1571:13;;;;;;1570:14;1594:98;;;;1628:13;:20;;-1:-1:-1;;1662:19:9;;;;;1594:98;2318:6:24::1;:20:::0;;-1:-1:-1;;;;;;2318:20:24::1;::::0;-1:-1:-1;;;;;2318:20:24;::::1;::::0;;::::1;::::0;;;::::1;::::0;;2353:45:::1;::::0;2318:20;;:6;2353:45:::1;::::0;2318:6;;2353:45:::1;1718:14:9::0;1714:66;;;1764:5;1748:21;;-1:-1:-1;;1748:21:9;;;1714:66;1438:348;2246:159:24;:::o;1807:115:10:-;1089:4;1112:7;;;;;;1355:9;1347:38;;;;-1:-1:-1;;;1347:38:10;;9106:2:28;1347:38:10;;;9088:21:28;9145:2;9125:18;;;9118:30;-1:-1:-1;;;9164:18:28;;;9157:46;9220:18;;1347:38:10;9078:166:28;1347:38:10;1866:7:::1;:14:::0;;-1:-1:-1;;1866:14:10::1;::::0;::::1;::::0;;1895:20:::1;1902:12;665:10:14::0;;586:96;20046:373:22;20144:13;20177:19;;20200:1;20177:24;20173:38;;;-1:-1:-1;20210:1:22;;20046:373;-1:-1:-1;20046:373:22:o;20173:38::-;20275:29;20324:17;;20307:14;;:34;;;;:::i;:::-;20393:19;;20275:66;;-1:-1:-1;20359:30:22;20275:66;20359:6;:30;:::i;14723:496::-;14799:1;14778:17;;:22;14774:439;;14816:21;14840:19;:17;:19::i;:::-;14816:43;;14893:31;14910:13;14893:16;:31::i;:::-;14873:17;:51;14938:26;:46;;;;;;;-1:-1:-1;14938:46:22;;;;;;;;;15026:20;;15012:11;;:34;;15026:20;15012:34;:::i;:::-;14998:11;:48;-1:-1:-1;15201:1:22;15178:20;:24;14723:496::o;18594:517::-;18667:25;18687:4;18667:19;:25::i;:::-;-1:-1:-1;;;;;18763:17:22;;;;;;:11;:17;;;;;:32;;:45;:67;;18823:7;;18763:67;:::i;:::-;-1:-1:-1;;;;;18703:17:22;;;;;;:11;:17;;;;;:32;;;:127;;;;18886:17;;18840:43;;;;:63;18935:18;;:28;;18956:7;;18935:28;:::i;:::-;18914:18;:49;19037:43;;-1:-1:-1;;;19037:43:22;;19074:4;19037:43;;;3093:51:28;-1:-1:-1;;;;;18979:125:22;;;;;;19016:7;;19083:11;;19037:7;:28;;;;3066:18:28;;19037:43:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;18979:125;;;13024:25:28;;;13080:2;13065:18;;13058:34;;;;12997:18;18979:125:22;;;;;;;18594:517;;:::o;13024:897::-;13119:7;13263:29;13356:7;13338:15;;13321:14;;13307:11;;:28;;;;:::i;:::-;:46;;;;:::i;:::-;:56;;;;:::i;:::-;13263:100;;13462:27;13553:17;;13528:21;13505:20;;:44;;;;:::i;:::-;13504:66;;;;:::i;:::-;13462:108;;13655:34;13726:15;;13704:19;:37;;;;:::i;:::-;13655:86;;13765:26;13755:7;:36;13751:87;;;13812:26;13024:897;-1:-1:-1;;;;13024:897:22:o;13751:87::-;-1:-1:-1;13855:7:22;;13024:897;-1:-1:-1;;;13024:897:22:o;15336:314::-;15429:12;;15408:18;;:33;;;;:::i;:::-;15385:20;:56;;;15455:25;15451:66;;15496:20;;15482:35;;-1:-1:-1;;;15482:35:22;;;;;5336:25:28;;;;15482:7:22;-1:-1:-1;;;;;15482:13:22;;;;5309:18:28;;15482:35:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15451:66;15544:12;;;15527:14;:29;-1:-1:-1;15566:16:22;;;;15592:18;:22;;;15624:17;:19;;;;;;:::i;:::-;;;;;;15336:314::o;13927:312::-;13979:7;14036:17;;14057:1;14036:22;14032:80;;;-1:-1:-1;14081:20:22;;13927:312::o;14032:80::-;14206:26;14230:1;14206:23;:26::i;:::-;14199:33;;13927:312;:::o;14245:366::-;14340:7;14423:22;14471:14;;14448:20;;:37;;;;:::i;:::-;14423:62;-1:-1:-1;14495:24:22;14522:29;14539:12;14423:62;14522:29;:::i;:::-;14495:56;;14588:16;14568:17;;:36;;;;:::i;14:247:28:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;181:9;168:23;200:31;225:5;200:31;:::i;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:2;;;405:1;402;395:12;357:2;437:9;431:16;456:31;481:5;456:31;:::i;782:388::-;850:6;858;911:2;899:9;890:7;886:23;882:32;879:2;;;927:1;924;917:12;879:2;966:9;953:23;985:31;1010:5;985:31;:::i;:::-;1035:5;-1:-1:-1;1092:2:28;1077:18;;1064:32;1105:33;1064:32;1105:33;:::i;:::-;1157:7;1147:17;;;869:301;;;;;:::o;1175:277::-;1242:6;1295:2;1283:9;1274:7;1270:23;1266:32;1263:2;;;1311:1;1308;1301:12;1263:2;1343:9;1337:16;1396:5;1389:13;1382:21;1375:5;1372:32;1362:2;;1418:1;1415;1408:12;1457:184;1527:6;1580:2;1568:9;1559:7;1555:23;1551:32;1548:2;;;1596:1;1593;1586:12;1548:2;-1:-1:-1;1619:16:28;;1538:103;-1:-1:-1;1538:103:28:o;1646:922::-;1715:6;1768:2;1756:9;1747:7;1743:23;1739:32;1736:2;;;1784:1;1781;1774:12;1736:2;1824:9;1811:23;1853:18;1894:2;1886:6;1883:14;1880:2;;;1910:1;1907;1900:12;1880:2;1948:6;1937:9;1933:22;1923:32;;1993:7;1986:4;1982:2;1978:13;1974:27;1964:2;;2015:1;2012;2005:12;1964:2;2051;2038:16;2073:2;2069;2066:10;2063:2;;;2079:18;;:::i;:::-;2154:2;2148:9;2122:2;2208:13;;-1:-1:-1;;2204:22:28;;;2228:2;2200:31;2196:40;2184:53;;;2252:18;;;2272:22;;;2249:46;2246:2;;;2298:18;;:::i;:::-;2338:10;2334:2;2327:22;2373:2;2365:6;2358:18;2413:7;2408:2;2403;2399;2395:11;2391:20;2388:33;2385:2;;;2434:1;2431;2424:12;2385:2;2490;2485;2481;2477:11;2472:2;2464:6;2460:15;2447:46;2535:1;2513:15;;;2530:2;2509:24;2502:35;;;;-1:-1:-1;2517:6:28;1726:842;-1:-1:-1;;;;;1726:842:28:o;2573:180::-;2632:6;2685:2;2673:9;2664:7;2660:23;2656:32;2653:2;;;2701:1;2698;2691:12;2653:2;-1:-1:-1;2724:23:28;;2643:110;-1:-1:-1;2643:110:28:o;6718:597::-;6830:4;6859:2;6888;6877:9;6870:21;6920:6;6914:13;6963:6;6958:2;6947:9;6943:18;6936:34;6988:1;6998:140;7012:6;7009:1;7006:13;6998:140;;;7107:14;;;7103:23;;7097:30;7073:17;;;7092:2;7069:26;7062:66;7027:10;;6998:140;;;7156:6;7153:1;7150:13;7147:2;;;7226:1;7221:2;7212:6;7201:9;7197:22;7193:31;7186:42;7147:2;-1:-1:-1;7299:2:28;7278:15;-1:-1:-1;;7274:29:28;7259:45;;;;7306:2;7255:54;;6839:476;-1:-1:-1;;;6839:476:28:o;9610:410::-;9812:2;9794:21;;;9851:2;9831:18;;;9824:30;9890:34;9885:2;9870:18;;9863:62;-1:-1:-1;;;9956:2:28;9941:18;;9934:44;10010:3;9995:19;;9784:236::o;11245:356::-;11447:2;11429:21;;;11466:18;;;11459:30;11525:34;11520:2;11505:18;;11498:62;11592:2;11577:18;;11419:182::o;13499:128::-;13539:3;13570:1;13566:6;13563:1;13560:13;13557:2;;;13576:18;;:::i;:::-;-1:-1:-1;13612:9:28;;13547:80::o;13632:217::-;13672:1;13698;13688:2;;13742:10;13737:3;13733:20;13730:1;13723:31;13777:4;13774:1;13767:15;13805:4;13802:1;13795:15;13688:2;-1:-1:-1;13834:9:28;;13678:171::o;13854:168::-;13894:7;13960:1;13956;13952:6;13948:14;13945:1;13942:21;13937:1;13930:9;13923:17;13919:45;13916:2;;;13967:18;;:::i;:::-;-1:-1:-1;14007:9:28;;13906:116::o;14027:125::-;14067:4;14095:1;14092;14089:8;14086:2;;;14100:18;;:::i;:::-;-1:-1:-1;14137:9:28;;14076:76::o;14157:135::-;14196:3;-1:-1:-1;;14217:17:28;;14214:2;;;14237:18;;:::i;:::-;-1:-1:-1;14284:1:28;14273:13;;14204:88::o;14297:127::-;14358:10;14353:3;14349:20;14346:1;14339:31;14389:4;14386:1;14379:15;14413:4;14410:1;14403:15;14429:127;14490:10;14485:3;14481:20;14478:1;14471:31;14521:4;14518:1;14511:15;14545:4;14542:1;14535:15;14561:127;14622:10;14617:3;14613:20;14610:1;14603:31;14653:4;14650:1;14643:15;14677:4;14674:1;14667:15;14693:131;-1:-1:-1;;;;;14768:31:28;;14758:42;;14748:2;;14814:1;14811;14804:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2772200",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "FIXED_POINT_DECIMALS()": "infinite",
        "canCycleStakeMaturation()": "infinite",
        "canCycleWithdrawRelease()": "infinite",
        "cancelHire(address)": "infinite",
        "ctsi()": "infinite",
        "currentMaturingTotal()": "2384",
        "currentQueuedTotal()": "2383",
        "currentStakeEpoch()": "2363",
        "currentUnstakeEpoch()": "2364",
        "cycleStakeMaturation()": "infinite",
        "cycleWithdrawRelease()": "infinite",
        "ens()": "infinite",
        "fee()": "2448",
        "getMaturingBalance(address)": "infinite",
        "getMaturingTimestamp(address)": "infinite",
        "getReleasingBalance(address)": "infinite",
        "getReleasingTimestamp(address)": "infinite",
        "getStakedBalance(address)": "infinite",
        "hire(address)": "infinite",
        "initialize(address,address)": "infinite",
        "owner()": "2387",
        "pause()": "29928",
        "paused()": "2371",
        "pos()": "infinite",
        "produceBlock(uint256)": "infinite",
        "renounceOwnership()": "30230",
        "retire(address)": "infinite",
        "rewardMaturing()": "2430",
        "rewardNotStaked()": "2385",
        "rewardQueued()": "2428",
        "selfhire()": "infinite",
        "setName(string)": "infinite",
        "stake(uint256)": "infinite",
        "staking()": "infinite",
        "stakingVoucherValueAtEpoch(uint256)": "4642",
        "timeToRelease()": "infinite",
        "timeToStake()": "infinite",
        "totalStaked()": "2429",
        "totalStakedShares()": "2406",
        "totalToUnstakeShares()": "2363",
        "totalUnstakedShares()": "2407",
        "totalUnstaking()": "2408",
        "totalWithdrawable()": "2386",
        "transferOwnership(address)": "30537",
        "unpause()": "29817",
        "unstake(uint256)": "infinite",
        "userBalance(address)": "13364",
        "withdraw(uint256)": "infinite",
        "workerManager()": "infinite"
      },
      "internal": {
        "_calcTotalShares(uint256)": "6594",
        "_calcUnstakingRewards(uint256)": "infinite",
        "_calcValueAtEpoch()": "infinite",
        "_getStakedSharesInValue(uint256)": "infinite",
        "_getStakedValueInShares(uint256)": "infinite",
        "_getUnstakedSharesInValue(uint256)": "8692",
        "_getUnstakedValueInShares(uint256)": "6586",
        "_getUserMaturatedShares(struct StakingPoolImpl.StakingVoucher storage pointer)": "infinite",
        "_stakeUpdates(address,uint256)": "infinite",
        "_updateUserBalances(address)": "infinite",
        "computeFinishedStake()": "infinite",
        "startNewStakeCycle()": "infinite"
      }
    },
    "methodIdentifiers": {
      "FIXED_POINT_DECIMALS()": "7e15d8c7",
      "canCycleStakeMaturation()": "3b8beb8a",
      "canCycleWithdrawRelease()": "134d92c8",
      "cancelHire(address)": "b64b3bed",
      "ctsi()": "64ffc3f4",
      "currentMaturingTotal()": "bc598eef",
      "currentQueuedTotal()": "effb8396",
      "currentStakeEpoch()": "73a4f33b",
      "currentUnstakeEpoch()": "03065048",
      "cycleStakeMaturation()": "fc57d44c",
      "cycleWithdrawRelease()": "56cbf7b9",
      "ens()": "3f15457f",
      "fee()": "ddca3f43",
      "getMaturingBalance(address)": "419be624",
      "getMaturingTimestamp(address)": "9a051545",
      "getReleasingBalance(address)": "8e9f04b5",
      "getReleasingTimestamp(address)": "67ba9b91",
      "getStakedBalance(address)": "3a02a42d",
      "hire(address)": "d9d6bd86",
      "initialize(address,address)": "485cc955",
      "owner()": "8da5cb5b",
      "pause()": "8456cb59",
      "paused()": "5c975abb",
      "pos()": "c56551b6",
      "produceBlock(uint256)": "a5a6cd0b",
      "renounceOwnership()": "715018a6",
      "retire(address)": "9e6371ba",
      "rewardMaturing()": "0b41aafd",
      "rewardNotStaked()": "7c0de72b",
      "rewardQueued()": "6a5030c2",
      "selfhire()": "6ff46a6c",
      "setName(string)": "c47f0027",
      "stake(uint256)": "a694fc3a",
      "staking()": "4cf088d9",
      "stakingVoucherValueAtEpoch(uint256)": "cf392037",
      "timeToRelease()": "eca7fe17",
      "timeToStake()": "94381556",
      "totalStaked()": "817b1cd2",
      "totalStakedShares()": "be2cfdff",
      "totalToUnstakeShares()": "27d49695",
      "totalUnstakedShares()": "4779525b",
      "totalUnstaking()": "0698607d",
      "totalWithdrawable()": "0600a865",
      "transferOwnership(address)": "f2fde38b",
      "unpause()": "3f4ba83a",
      "unstake(uint256)": "2e17de78",
      "userBalance(address)": "0103c92b",
      "withdraw(uint256)": "2e1a7d4d",
      "workerManager()": "0d36533c"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ctsi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pos\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_timeToStake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timeToRelease\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_workerManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queued\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"notStaked\",\"type\":\"uint256\"}],\"name\":\"BlockProduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturationDate\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"StakingPoolRenamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maturationDate\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FIXED_POINT_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canCycleStakeMaturation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"available\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_currentQueuedTotal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_currentMaturingTotal\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canCycleWithdrawRelease\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"available\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_totalToUnstakeValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_totalUnstaking\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"cancelHire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ctsi\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentMaturingTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentQueuedTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentStakeEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentUnstakeEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cycleStakeMaturation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cycleWithdrawRelease\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"contract Fee\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getMaturingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getMaturingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getReleasingBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getReleasingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"}],\"name\":\"getStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedBalance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"hire\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pos\",\"outputs\":[{\"internalType\":\"contract IPoS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"produceBlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"retire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardMaturing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardNotStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfhire\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakingVoucherValueAtEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToRelease\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToStake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalToUnstakeShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnstakedShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUnstaking\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakedPoolShares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountQueued\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountStaked\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queueEpoch\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingPoolImpl.StakingVoucher\",\"name\":\"stakingVoucher\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"poolShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"queueEpoch\",\"type\":\"uint256\"}],\"internalType\":\"struct StakingPoolImpl.UnstakingVoucher\",\"name\":\"unstakingVoucher\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workerManager\",\"outputs\":[{\"internalType\":\"contract IWorkerManagerAuthManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canCycleStakeMaturation()\":{\"returns\":{\"available\":\"true if cycleStakeMaturation can bee called                   false if it can not         _currentQueuedTotal how much is waiting to be staked\"}},\"canCycleWithdrawRelease()\":{\"returns\":{\"available\":\"true if cycleWithdrawRelease can bee called                   false if it can not         _totalToUnstakeValue how much is waiting to be unstaked\"}},\"cancelHire(address)\":{\"params\":{\"workerAddress\":\"address of the worker node\"}},\"getMaturingBalance(address)\":{\"returns\":{\"_0\":\"amount that will get staked after finalization\"}},\"getMaturingTimestamp(address)\":{\"returns\":{\"_0\":\"timestamp of when cycleStakeMaturation() is callable\"}},\"getReleasingBalance(address)\":{\"returns\":{\"_0\":\"amount that will get withdrawn after finalization\"}},\"getReleasingTimestamp(address)\":{\"returns\":{\"_0\":\"timestamp of when withdraw() is callable\"}},\"getStakedBalance(address)\":{\"params\":{\"_userAddress\":\"user to retrieve staked balance from\"},\"returns\":{\"stakedBalance\":\"is the finalized staked of _userAddress\"}},\"hire(address)\":{\"params\":{\"workerAddress\":\"address of the worker\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"produceBlock(uint256)\":{\"returns\":{\"_0\":\"true when everything went fine\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retire(address)\":{\"details\":\"this also removes all authorizations in place\",\"params\":{\"workerAddress\":\"address of the worker to be retired\"}},\"stake(uint256)\":{\"params\":{\"_amount\":\"The amount of tokens that are gonna be additionally deposited.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unstake(uint256)\":{\"params\":{\"_amount\":\"The amount of tokens that are gonna be unstaked.\"}},\"withdraw(uint256)\":{\"params\":{\"_amount\":\"The amount of tokens that are gonna be transferred.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"BlockProduced(uint256,uint256,uint256,uint256)\":{\"notice\":\"this events is emitted at every produceBlock call     reward is the block reward     commission is how much CTSI is directed to the poolManager     queued is how much currently is being queued to be staked     notStaked is how much is directed to withdrawal\"},\"Stake(address,uint256,uint256)\":{\"notice\":\"CTSI tokens were deposited, they count as stake after _maturationDate\"},\"StakingPoolRenamed(string)\":{\"notice\":\"Event emmited when a pool is rename\"},\"Unstake(address,uint256,uint256)\":{\"notice\":\"Unstake tokens, moving them to releasing structure\"},\"Withdraw(address,uint256)\":{\"notice\":\"Withdraw process was finalized\"}},\"kind\":\"user\",\"methods\":{\"canCycleStakeMaturation()\":{\"notice\":\"checks whether or not a call can be made to cycleStakeMaturation and be successful\"},\"canCycleWithdrawRelease()\":{\"notice\":\"checks whether or not a call can be made to cycleWithdrawRelease and be successful\"},\"cancelHire(address)\":{\"notice\":\"Called by the user to cancel a job offer\"},\"cycleStakeMaturation()\":{\"notice\":\"enables pool manager to update staking balances as they mature on the (main) Staking contract\"},\"cycleWithdrawRelease()\":{\"notice\":\"enables pool manager to update staking balances as they mature on the (main) Staking contract\"},\"getMaturingBalance(address)\":{\"notice\":\"Returns the balance waiting/ready to be matured\"},\"getMaturingTimestamp(address)\":{\"notice\":\"Returns the timestamp when next deposit can be finalized\"},\"getReleasingBalance(address)\":{\"notice\":\"Returns the balance waiting/ready to be released\"},\"getReleasingTimestamp(address)\":{\"notice\":\"Returns the timestamp when next withdraw can be finalized\"},\"getStakedBalance(address)\":{\"notice\":\"Returns total amount of tokens counted as stake\"},\"hire(address)\":{\"notice\":\"Asks the worker to work for the sender. Sender needs to pay something.\"},\"pause()\":{\"notice\":\"pauses new staking on the pool\"},\"produceBlock(uint256)\":{\"notice\":\"routes produceBlock to POS contract and updates internal states of the pool\"},\"retire(address)\":{\"notice\":\"Called by the user to retire his worker.\"},\"selfhire()\":{\"notice\":\"allows for the pool to act on its own behalf when producing blocks.\"},\"setName(string)\":{\"notice\":\"sets a name for the pool using ENS service\"},\"stake(uint256)\":{\"notice\":\"Deposit CTSI to be staked. The money will turn into staked         balance after timeToStake days\"},\"unpause()\":{\"notice\":\"unpauses new staking on the pool\"},\"unstake(uint256)\":{\"notice\":\"Remove tokens from staked balance. The money can         be released after timeToRelease seconds, if the         function withdraw is called.\"},\"withdraw(uint256)\":{\"notice\":\"Transfer tokens to user's wallet.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolImpl.sol\":\"StakingPoolImpl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/pos/contracts/IPoS.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface PoS\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IPoS {\\n    /// @notice Produce a block\\n    /// @param _index the index of the instance of pos you want to interact with\\n    /// @dev this function can only be called by a worker, user never calls it directly\\n    function produceBlock(uint256 _index) external returns (bool);\\n\\n    /// @notice Get reward manager address\\n    /// @param _index index of instance\\n    /// @return address of instance's RewardManager\\n    function getRewardManagerAddress(uint256 _index)\\n        external\\n        view\\n        returns (address);\\n\\n    /// @notice Get block selector address\\n    /// @param _index index of instance\\n    /// @return address of instance's block selector\\n    function getBlockSelectorAddress(uint256 _index)\\n        external\\n        view\\n        returns (address);\\n\\n    /// @notice Get block selector index\\n    /// @param _index index of instance\\n    /// @return index of instance's block selector\\n    function getBlockSelectorIndex(uint256 _index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Get staking address\\n    /// @param _index index of instance\\n    /// @return address of instance's staking contract\\n    function getStakingAddress(uint256 _index) external view returns (address);\\n\\n    /// @notice Get state of a particular instance\\n    /// @param _index index of instance\\n    /// @param _user address of user\\n    /// @return bool if user is eligible to produce next block\\n    /// @return address of user that was chosen to build the block\\n    /// @return current reward paid by the network for that block\\n    function getState(uint256 _index, address _user)\\n        external\\n        view\\n        returns (\\n            bool,\\n            address,\\n            uint256\\n        );\\n\\n    function terminate(uint256 _index) external;\\n}\\n\",\"keccak256\":\"0xf22d440f723b8d80ef60a20bf38f5a3ea16fd604a2c485e1c969bec0b24e8889\",\"license\":\"Apache-2.0\"},\"@cartesi/pos/contracts/IRewardManager.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface RewardManager\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IRewardManager {\\n    /// @notice Rewards address\\n    /// @param _address address be rewarded\\n    /// @param _amount reward\\n    /// @dev only the pos contract can call this\\n    function reward(address _address, uint256 _amount) external;\\n\\n    /// @notice Get RewardManager's balance\\n    function getBalance() external view returns (uint256);\\n\\n    /// @notice Get current reward amount\\n    function getCurrentReward() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf3d3fb9853d55c0658f45dfd072032291c975138e99cd8cedb0d6550848e2813\",\"license\":\"Apache-2.0\"},\"@cartesi/pos/contracts/IStaking.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface Staking\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IStaking {\\n    /// @notice Returns total amount of tokens counted as stake\\n    /// @param _userAddress user to retrieve staked balance from\\n    /// @return finalized staked of _userAddress\\n    function getStakedBalance(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the timestamp when next deposit can be finalized\\n    /// @return timestamp of when finalizeStakes() is callable\\n    function getMaturingTimestamp(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the timestamp when next withdraw can be finalized\\n    /// @return timestamp of when finalizeWithdraw() is callable\\n    function getReleasingTimestamp(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the balance waiting/ready to be matured\\n    /// @return amount that will get staked after finalization\\n    function getMaturingBalance(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the balance waiting/ready to be released\\n    /// @return amount that will get withdrew after finalization\\n    function getReleasingBalance(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Deposit CTSI to be staked. The money will turn into staked\\n    ///         balance after timeToStake days\\n    /// @param _amount The amount of tokens that are gonna be deposited.\\n    function stake(uint256 _amount) external;\\n\\n    /// @notice Remove tokens from staked balance. The money can\\n    ///         be released after timeToRelease seconds, if the\\n    ///         function withdraw is called.\\n    /// @param _amount The amount of tokens that are gonna be unstaked.\\n    function unstake(uint256 _amount) external;\\n\\n    /// @notice Transfer tokens to user's wallet.\\n    /// @param _amount The amount of tokens that are gonna be transferred.\\n    function withdraw(uint256 _amount) external;\\n\\n    // events\\n    /// @notice CTSI tokens were deposited, they count as stake after _maturationDate\\n    /// @param user address of msg.sender\\n    /// @param amount amount deposited for staking\\n    /// @param maturationDate date when the stake can be finalized\\n    event Stake(address indexed user, uint256 amount, uint256 maturationDate);\\n\\n    /// @notice Unstake tokens, moving them to releasing structure\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens to be released\\n    /// @param maturationDate date when the tokens can be withdrew\\n    event Unstake(address indexed user, uint256 amount, uint256 maturationDate);\\n\\n    /// @notice Withdraw process was finalized\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens withdrawn\\n    event Withdraw(address indexed user, uint256 amount);\\n}\\n\",\"keccak256\":\"0xda69ecab096249069100cd857133f717045d19422061ea06d87eca606ac62dd3\",\"license\":\"Apache-2.0\"},\"@cartesi/pos/contracts/IWorkerManagerAuthManager.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface WorkerManager\\n/// @author Danilo Tuler\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IWorkerManagerAuthManager {\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress) external payable;\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external;\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external;\\n\\n    /// @notice Gives worker permission to act on a DApp\\n    /// @param _workerAddress address of the worker node to given permission\\n    /// @param _dappAddress address of the dapp that permission will be given to\\n    function authorize(address _workerAddress, address _dappAddress) external;\\n\\n    /// @notice Called by the worker to accept the job\\n    function acceptJob() external;\\n\\n    /// @notice Called by the worker to reject a job offer\\n    function rejectJob() external payable;\\n}\\n\",\"keccak256\":\"0x81c78ff7141cedf3cb3c70537b557baf88070a4d374a5967c5a65e0b865e9b46\",\"license\":\"Apache-2.0\"},\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    function setRecord(bytes32 node, address owner, address resolver, uint64 ttl) external virtual;\\n    function setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external virtual;\\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external virtual returns(bytes32);\\n    function setResolver(bytes32 node, address resolver) external virtual;\\n    function setOwner(bytes32 node, address owner) external virtual;\\n    function setTTL(bytes32 node, uint64 ttl) external virtual;\\n    function setApprovalForAll(address operator, bool approved) external virtual;\\n    function owner(bytes32 node) external virtual view returns (address);\\n    function resolver(bytes32 node) external virtual view returns (address);\\n    function ttl(bytes32 node) external virtual view returns (uint64);\\n    function recordExists(bytes32 node) external virtual view returns (bool);\\n    function isApprovedForAll(address owner, address operator) external virtual view returns (bool);\\n}\\n\",\"keccak256\":\"0x942ef29bd7c0f62228aeb91879ddd1ba101f52a2162970d3e48adffa498f4483\"},\"@ensdomains/ens-contracts/contracts/registry/ReverseRegistrar.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\nimport \\\"./ENS.sol\\\";\\n\\nabstract contract NameResolver {\\n    function setName(bytes32 node, string memory name) public virtual;\\n}\\n\\ncontract ReverseRegistrar {\\n    // namehash('addr.reverse')\\n    bytes32 public constant ADDR_REVERSE_NODE = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n    ENS public ens;\\n    NameResolver public defaultResolver;\\n\\n    /**\\n     * @dev Constructor\\n     * @param ensAddr The address of the ENS registry.\\n     * @param resolverAddr The address of the default reverse resolver.\\n     */\\n    constructor(ENS ensAddr, NameResolver resolverAddr) public {\\n        ens = ensAddr;\\n        defaultResolver = resolverAddr;\\n\\n        // Assign ownership of the reverse record to our deployer\\n        ReverseRegistrar oldRegistrar = ReverseRegistrar(ens.owner(ADDR_REVERSE_NODE));\\n        if (address(oldRegistrar) != address(0x0)) {\\n            oldRegistrar.claim(msg.sender);\\n        }\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claim(address owner) public returns (bytes32) {\\n        return claimWithResolver(owner, address(0x0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @param resolver The address of the resolver to set; 0 to leave unchanged.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claimWithResolver(address owner, address resolver) public returns (bytes32) {\\n        bytes32 label = sha3HexAddress(msg.sender);\\n        bytes32 node = keccak256(abi.encodePacked(ADDR_REVERSE_NODE, label));\\n        address currentOwner = ens.owner(node);\\n\\n        // Update the resolver if required\\n        if (resolver != address(0x0) && resolver != ens.resolver(node)) {\\n            // Transfer the name to us first if it's not already\\n            if (currentOwner != address(this)) {\\n                ens.setSubnodeOwner(ADDR_REVERSE_NODE, label, address(this));\\n                currentOwner = address(this);\\n            }\\n            ens.setResolver(node, resolver);\\n        }\\n\\n        // Update the owner if required\\n        if (currentOwner != owner) {\\n            ens.setSubnodeOwner(ADDR_REVERSE_NODE, label, owner);\\n        }\\n\\n        return node;\\n    }\\n\\n    /**\\n     * @dev Sets the `name()` record for the reverse ENS record associated with\\n     * the calling account. First updates the resolver to the default reverse\\n     * resolver if necessary.\\n     * @param name The name to set for this address.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function setName(string memory name) public returns (bytes32) {\\n        bytes32 node = claimWithResolver(address(this), address(defaultResolver));\\n        defaultResolver.setName(node, name);\\n        return node;\\n    }\\n\\n    /**\\n     * @dev Returns the node hash for a given account's reverse records.\\n     * @param addr The address to hash\\n     * @return The ENS node hash.\\n     */\\n    function node(address addr) public pure returns (bytes32) {\\n        return keccak256(abi.encodePacked(ADDR_REVERSE_NODE, sha3HexAddress(addr)));\\n    }\\n\\n    /**\\n     * @dev An optimised function to compute the sha3 of the lower-case\\n     *      hexadecimal representation of an Ethereum address.\\n     * @param addr The address to hash\\n     * @return ret The SHA3 hash of the lower-case hexadecimal encoding of the\\n     *         input address.\\n     */\\n    function sha3HexAddress(address addr) private pure returns (bytes32 ret) {\\n        addr;\\n        ret; // Stop warning us about unused variables\\n        assembly {\\n            let lookup := 0x3031323334353637383961626364656600000000000000000000000000000000\\n\\n            for { let i := 40 } gt(i, 0) { } {\\n                i := sub(i, 1)\\n                mstore8(i, byte(and(addr, 0xf), lookup))\\n                addr := div(addr, 0x10)\\n                i := sub(i, 1)\\n                mstore8(i, byte(and(addr, 0xf), lookup))\\n                addr := div(addr, 0x10)\\n            }\\n\\n            ret := keccak256(0, 40)\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0954bb8471f1f58353106f19c05b57f75349579afc5ab296b800b3df906907ee\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor () {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/Fee.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\ninterface Fee {\\n    /// @notice calculates the total amount of the reward that will be directed to the PoolManager\\n    /// @return commissionTotal is the amount subtracted from the rewardAmount\\n    function getCommission(uint256 posIndex, uint256 rewardAmount)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xd17a0058b5ef0f8734e102538622187c99d00d19f49ae7c4946004e55c1b9f6e\",\"license\":\"Apache-2.0\"},\"contracts/StakingPool.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\nimport \\\"@cartesi/pos/contracts/IStaking.sol\\\";\\nimport \\\"./StakingPoolManagement.sol\\\";\\n\\ninterface StakingPool is IStaking, StakingPoolManagement {\\n    ///@notice this events is emitted at every produceBlock call\\n    ///     reward is the block reward\\n    ///     commission is how much CTSI is directed to the poolManager\\n    ///     queued is how much currently is being queued to be staked\\n    ///     notStaked is how much is directed to withdrawal\\n    event BlockProduced(\\n        uint256 reward,\\n        uint256 commission,\\n        uint256 queued,\\n        uint256 notStaked\\n    );\\n\\n    /// @notice routes produceBlock to POS contract and\\n    /// updates internal states of the pool\\n    /// @return true when everything went fine\\n    function produceBlock(uint256 _index) external returns (bool);\\n\\n    /// @notice enables pool manager to update staking balances as they mature\\n    /// on the (main) Staking contract\\n    function cycleStakeMaturation() external;\\n\\n    /// @notice enables pool manager to update releasing balances as they get freed\\n    /// on the (main) Staking contract\\n    function cycleWithdrawRelease() external;\\n\\n    /// @notice checks whether or not a call can be made to cycleStakeMaturation\\n    /// and be successful\\n    /// @return available true if cycleStakeMaturation can bee called\\n    ///                   false if it can not\\n    ///         _currentQueuedTotal how much is waiting to be staked\\n    function canCycleStakeMaturation()\\n        external\\n        view\\n        returns (bool available, uint256 _currentQueuedTotal, uint256 _currentMaturingTotal);\\n\\n    /// @notice checks whether or not a call can be made to cycleWithdrawRelease\\n    /// and be successful\\n    /// @return available true if cycleWithdrawRelease can bee called\\n    ///                   false if it can not\\n    ///         _totalToUnstakeValue how much is waiting to be unstaked\\n    function canCycleWithdrawRelease()\\n        external\\n        view\\n        returns (bool available, uint256 _totalToUnstakeValue, uint256 _totalUnstaking);\\n}\\n\",\"keccak256\":\"0x97758e1e0c614c8e6b2614601d906b0cecfdcecd56acd8595bd907a1ccfb92ae\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma experimental ABIEncoderV2;\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IRewardManager.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IStaking.sol\\\";\\nimport \\\"./StakingPool.sol\\\";\\nimport \\\"./Fee.sol\\\";\\nimport \\\"./StakingPoolManagementImpl.sol\\\";\\n\\ncontract StakingPoolImpl is StakingPool, StakingPoolManagementImpl {\\n    IERC20 public immutable ctsi;\\n    IStaking public immutable staking;\\n\\n    Fee public fee;\\n    uint256 public rewardQueued;\\n    uint256 public rewardNotStaked;\\n    uint256 public rewardMaturing;\\n    uint256 public currentStakeEpoch;\\n    uint256 public currentUnstakeEpoch;\\n\\n    uint256 public immutable timeToStake;\\n    uint256 public immutable timeToRelease;\\n\\n    struct StakingVoucher {\\n        uint256 amountQueued;\\n        uint256 amountStaked;\\n        uint256 queueEpoch;\\n    }\\n\\n    struct UnstakingVoucher {\\n        uint256 poolShares;\\n        uint256 queueEpoch;\\n    }\\n\\n    struct UserBalance {\\n        // @TODO improve state usage reducing variable sizes\\n        uint256 stakedPoolShares;\\n        StakingVoucher stakingVoucher;\\n        UnstakingVoucher unstakingVoucher;\\n    }\\n    mapping(address => UserBalance) public userBalance;\\n    uint256 public immutable FIXED_POINT_DECIMALS = 10E5; //@DEV is this enough zero/precision?\\n    // this gets updated on every reward income\\n    uint256[] public stakingVoucherValueAtEpoch; // correction factor for balances outdated by new rewards\\n    uint256 public currentQueuedTotal; // next cycle staking amout\\n    uint256 public currentMaturingTotal; // current cycle staking maturing\\n    uint256 public totalStaked; // \\\"same as\\\" StakeImp.getStakedBalance(this)\\n    uint256 public totalStakedShares;\\n    // this tracks the ratio of balances to actual CTSI value\\n    // withdraw related variables\\n    uint256 public totalToUnstakeShares; // next withdraw cycle unstake amount\\n    uint256 public totalUnstaking; // current withdraw cycle unstaking amount\\n    uint256 public totalWithdrawable; // ready to withdraw user balances\\n    uint256 public totalUnstakedShares; // tracks shares balances\\n\\n    // all immutable variables can stay at the constructor\\n    constructor(\\n        address _ctsi,\\n        address _staking,\\n        address _pos,\\n        uint256 _timeToStake,\\n        uint256 _timeToRelease,\\n        address _ens,\\n        address _workerManager\\n    ) StakingPoolManagementImpl(_ens, _workerManager, _pos) {\\n        require(_ctsi != address(0), \\\"parameter can not be zero address\\\");\\n        require(_staking != address(0), \\\"parameter can not be zero address\\\");\\n\\n        ctsi = IERC20(_ctsi);\\n        staking = IStaking(_staking);\\n        timeToStake = _timeToStake;\\n        timeToRelease = _timeToRelease;\\n    }\\n\\n    function initialize(address _feeAddress, address owner) public initializer {\\n        super.initialize(owner);\\n        require(\\n            ctsi.approve(address(staking), type(uint256).max),\\n            \\\"Failed to approve CTSI for staking contract\\\"\\n        );\\n        fee = Fee(_feeAddress);\\n    }\\n\\n    /// @notice Returns total amount of tokens counted as stake\\n    /// @param _userAddress user to retrieve staked balance from\\n    /// @return stakedBalance is the finalized staked of _userAddress\\n    function getStakedBalance(address _userAddress)\\n        external\\n        view\\n        override\\n        returns (uint256 stakedBalance)\\n    {\\n        UserBalance storage b = userBalance[_userAddress];\\n        uint256 shares = _getUserMaturatedShares(b.stakingVoucher);\\n        uint256 withdrawBalance;\\n        uint256 stakedValue = 0;\\n        // since it didn't call staking.unstake() yet, it's balance still counts for reward\\n        if (b.unstakingVoucher.queueEpoch < currentUnstakeEpoch)\\n            withdrawBalance = b.unstakingVoucher.poolShares;\\n        if (totalStakedShares > 0) {\\n            shares += b.stakedPoolShares - withdrawBalance;\\n            stakedValue = _getStakedSharesInValue(shares);\\n        }\\n        if (staking.getMaturingTimestamp(address(this)) < block.timestamp) {\\n            // effectively 1 cycle has passed and we didn't compute yet\\n            uint256 _currentStakeEpoch = currentStakeEpoch + 1;\\n            if (b.stakingVoucher.queueEpoch + 1 == _currentStakeEpoch) {\\n                stakedValue += b.stakingVoucher.amountStaked;\\n            } else if (b.stakingVoucher.queueEpoch + 2 == _currentStakeEpoch) {\\n                stakedValue += b.stakingVoucher.amountQueued;\\n            }\\n        }\\n\\n        return stakedValue;\\n    }\\n\\n    /// @notice Returns the timestamp when next deposit can be finalized\\n    /// @return timestamp of when cycleStakeMaturation() is callable\\n    function getMaturingTimestamp(address _userAddress)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        if (\\n            userBalance[_userAddress].stakingVoucher.queueEpoch + 1 ==\\n            currentStakeEpoch\\n        ) return staking.getMaturingTimestamp(address(this));\\n        if (\\n            userBalance[_userAddress].stakingVoucher.queueEpoch ==\\n            currentStakeEpoch\\n        ) return staking.getMaturingTimestamp(address(this)) + timeToStake;\\n        return 0;\\n    }\\n\\n    /// @notice Returns the timestamp when next withdraw can be finalized\\n    /// @return timestamp of when withdraw() is callable\\n    function getReleasingTimestamp(address _userAddress)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        uint256 wEpoch = userBalance[_userAddress].unstakingVoucher.queueEpoch;\\n        if (wEpoch + 1 == currentUnstakeEpoch) {\\n            return staking.getReleasingTimestamp(address(this));\\n        } else if (\\n            staking.getReleasingBalance(address(this)) > 0 &&\\n            wEpoch == currentUnstakeEpoch\\n        ) {\\n            return staking.getReleasingTimestamp(address(this)) + timeToRelease;\\n        } else if (wEpoch == currentUnstakeEpoch) {\\n            return block.timestamp + timeToRelease;\\n        }\\n        return 0;\\n    }\\n\\n    /// @notice Returns the balance waiting/ready to be matured\\n    /// @return amount that will get staked after finalization\\n    function getMaturingBalance(address _userAddress)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        UserBalance storage b = userBalance[_userAddress];\\n        uint256 maturingBalance = 0;\\n        uint256 _currentStakeEpoch = currentStakeEpoch;\\n        if (staking.getMaturingTimestamp(address(this)) < block.timestamp)\\n            _currentStakeEpoch++;\\n        // if more than one cycle has passed for amountStaked then it's vested already\\n        if (b.stakingVoucher.queueEpoch + 1 > _currentStakeEpoch)\\n            maturingBalance += b.stakingVoucher.amountStaked;\\n        // if more than 2 cycles has passed for amountQueued then it's vested already\\n        if (b.stakingVoucher.queueEpoch + 2 > _currentStakeEpoch)\\n            maturingBalance += b.stakingVoucher.amountQueued;\\n        return maturingBalance;\\n    }\\n\\n    /// @notice Returns the balance waiting/ready to be released\\n    /// @return amount that will get withdrawn after finalization\\n    function getReleasingBalance(address _userAddress)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        UnstakingVoucher storage voucher =\\n            userBalance[_userAddress].unstakingVoucher;\\n        // releasing balance still was not unstaked on IStaking\\n        if (voucher.queueEpoch == currentUnstakeEpoch && totalStakedShares != 0)\\n            return _getStakedSharesInValue(voucher.poolShares);\\n\\n        // releasing(ed) balance was unstaked on IStaking\\n        if (\\n            voucher.queueEpoch + 1 <= currentUnstakeEpoch &&\\n            totalUnstakedShares != 0\\n        ) return _getUnstakedSharesInValue(voucher.poolShares);\\n        // avoid division by zero in some scenarios\\n        return 0;\\n    }\\n\\n    /// @notice Deposit CTSI to be staked. The money will turn into staked\\n    ///         balance after timeToStake days\\n    /// @param _amount The amount of tokens that are gonna be additionally deposited.\\n    function stake(uint256 _amount) external override whenNotPaused {\\n        require(\\n            ctsi.transferFrom(msg.sender, address(this), _amount),\\n            \\\"Allowance of CTSI tokens not enough to match amount sent\\\"\\n        );\\n        _stakeUpdates(msg.sender, _amount);\\n    }\\n\\n    /// @notice routes produceBlock to POS contract and\\n    /// updates internal states of the pool\\n    /// @return true when everything went fine\\n    function produceBlock(uint256 _index) external override returns (bool) {\\n        bool isLastStakeCycleOver =\\n            staking.getMaturingTimestamp(address(this)) <= block.timestamp;\\n        if (isLastStakeCycleOver) computeFinishedStake();\\n\\n        uint256 reward =\\n            IRewardManager(pos.getRewardManagerAddress(_index))\\n                .getCurrentReward();\\n\\n        pos.produceBlock(_index);\\n\\n        uint256 commission = fee.getCommission(_index, reward);\\n        _stakeUpdates(owner(), commission); // directs the commission to the pool manager\\n\\n        uint256 remainingReward = reward - commission; // this is also a safety check\\n        // if commission is over the reward amount, it will underflow\\n\\n        // we first route rewards related to unstakingShares to withdrawal\\n        // then we add the rest to the staking queue\\n        uint256 additionalRewardsWithdrawal =\\n            _calcUnstakingRewards(remainingReward + rewardQueued);\\n        rewardNotStaked += additionalRewardsWithdrawal;\\n\\n        // update the possible remaining reward to be staked\\n        rewardQueued =\\n            (remainingReward + rewardQueued) -\\n            additionalRewardsWithdrawal;\\n\\n        emit BlockProduced(reward, commission, rewardQueued, rewardNotStaked);\\n\\n        if (isLastStakeCycleOver) startNewStakeCycle();\\n        cycleWithdrawRelease();\\n        return true;\\n    }\\n\\n    /// @notice Remove tokens from staked balance. The money can\\n    ///         be released after timeToRelease seconds, if the\\n    ///         function withdraw is called.\\n    /// @param _amount The amount of tokens that are gonna be unstaked.\\n    function unstake(uint256 _amount) external override {\\n        UserBalance storage user = userBalance[msg.sender];\\n        require(\\n            user.unstakingVoucher.poolShares == 0 ||\\n                user.unstakingVoucher.queueEpoch == currentUnstakeEpoch,\\n            \\\"You have withdraw being processed\\\"\\n        );\\n\\n        _updateUserBalances(msg.sender); // makes sure balances are updated to shares\\n\\n        uint256 _amountInShares = _getStakedValueInShares(_amount);\\n        require(_amountInShares > 0, \\\"there are no shares to be unstaked\\\");\\n        user.unstakingVoucher.poolShares += _amountInShares;\\n\\n        require(\\n            user.stakedPoolShares >= user.unstakingVoucher.poolShares,\\n            \\\"Unstake amount is over staked balance\\\"\\n        );\\n\\n        totalToUnstakeShares += _amountInShares;\\n        user.unstakingVoucher.queueEpoch = currentUnstakeEpoch;\\n\\n        uint256 releaseTimestamp;\\n        if (staking.getReleasingBalance(address(this)) > 0)\\n            releaseTimestamp = staking.getReleasingTimestamp(address(this));\\n        else {\\n            releaseTimestamp = block.timestamp;\\n        }\\n\\n        emit Unstake(msg.sender, _amount, releaseTimestamp + timeToRelease);\\n    }\\n\\n    /// @notice Transfer tokens to user's wallet.\\n    /// @param _amount The amount of tokens that are gonna be transferred.\\n    function withdraw(uint256 _amount) external override {\\n        UserBalance storage user = userBalance[msg.sender];\\n        require(\\n            user.unstakingVoucher.poolShares > 0 &&\\n                user.unstakingVoucher.queueEpoch + 2 <= currentUnstakeEpoch,\\n            \\\"You don't have realeased balance\\\"\\n        );\\n        _updateUserBalances(msg.sender); // makes sure balances are updated to matured\\n        uint256 shares = _getUnstakedValueInShares(_amount);\\n        require(\\n            user.unstakingVoucher.poolShares >= shares,\\n            \\\"Not enough balance for this withdraw amount\\\"\\n        );\\n        user.unstakingVoucher.poolShares -= shares;\\n        user.stakedPoolShares -= shares;\\n\\n        totalWithdrawable -= _amount;\\n        totalUnstakedShares -= shares;\\n        ctsi.transfer(msg.sender, _amount);\\n        emit Withdraw(msg.sender, _amount);\\n    }\\n\\n    function _calcUnstakingRewards(uint256 rewards)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // @dev review this function when totalStakedShares is Zero.\\n        // total value related to totalStakedShares\\n        uint256 totalAccumulatedValue =\\n            totalStaked + rewardMaturing + rewardNotStaked + rewards;\\n        // value that will be made available to withdraw in the next full withdraw cycle\\n        uint256 totalToUnstakeValue =\\n            (totalToUnstakeShares * totalAccumulatedValue) / totalStakedShares;\\n        // additional value related to current rewards yet to be set aside\\n        uint256 toUnstakeValueNotAccounted =\\n            totalToUnstakeValue - rewardNotStaked;\\n        if (rewards > toUnstakeValueNotAccounted)\\n            return toUnstakeValueNotAccounted;\\n        return rewards; // all this reward will be added to rewardNotStaked\\n    }\\n\\n    function _calcValueAtEpoch() internal view returns (uint256) {\\n        // first time weight is 1\\n        if (currentStakeEpoch == 1) {\\n            return FIXED_POINT_DECIMALS;\\n        }\\n        // the `ValueAtEpoch` factor is the same as 1 unit of value in shares\\n        return _getStakedValueInShares(1);\\n    }\\n\\n    function _calcTotalShares(uint256 valueAtEpoch)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // rewards do not count shares, so we subtract them\\n        uint256 newStakedValue = currentMaturingTotal - rewardMaturing;\\n        uint256 additionalShares = newStakedValue * valueAtEpoch;\\n        return totalStakedShares + additionalShares;\\n    }\\n\\n    /// @notice called when a stake is matured in StakeImpl\\n    /// updating internal state related to it\\n    function computeFinishedStake() internal {\\n        if (currentStakeEpoch >= 1) {\\n            uint256 _valueAtEpoch = _calcValueAtEpoch();\\n            totalStakedShares = _calcTotalShares(_valueAtEpoch);\\n            stakingVoucherValueAtEpoch.push(_valueAtEpoch);\\n            totalStaked = totalStaked + currentMaturingTotal;\\n            // now we add this because we migth have intermediate\\n            // calculations that use this state var\\n            currentMaturingTotal = 0;\\n        }\\n    }\\n\\n    /// @notice called after the finish of cycle\\n    /// to start with a new stake and reset global state vars\\n    function startNewStakeCycle() internal {\\n        currentMaturingTotal = currentQueuedTotal + rewardQueued;\\n        if (currentMaturingTotal != 0) staking.stake(currentMaturingTotal);\\n        rewardMaturing = rewardQueued;\\n        rewardQueued = 0;\\n        currentQueuedTotal = 0;\\n        currentStakeEpoch++;\\n    }\\n\\n    /// @notice enables pool manager to update staking balances as they mature\\n    /// on the (main) Staking contract\\n    function cycleStakeMaturation() public override {\\n        bool isLastStakeCycleOver =\\n            staking.getMaturingTimestamp(address(this)) <= block.timestamp;\\n        if (!isLastStakeCycleOver) return;\\n        computeFinishedStake();\\n        startNewStakeCycle();\\n    }\\n\\n    /// @notice enables pool manager to update staking balances as they mature\\n    /// on the (main) Staking contract\\n    function cycleWithdrawRelease() public override {\\n        uint256 releasingBalance = staking.getReleasingBalance(address(this));\\n        if (\\n            releasingBalance > 0 &&\\n            staking.getReleasingTimestamp(address(this)) > block.timestamp\\n        ) return; // last release cycle hasn't finished\\n\\n        if (totalToUnstakeShares == 0 && totalUnstaking == 0) return; // nothing to do\\n\\n        // withdraw everything to this contract before reseting the clock\\n        if (releasingBalance > 0) staking.withdraw(releasingBalance);\\n\\n        uint256 totalToUnstake = 0;\\n        if (totalToUnstakeShares > 0) {\\n            totalToUnstake =\\n                _getStakedSharesInValue(totalToUnstakeShares) -\\n                rewardNotStaked;\\n            if (totalToUnstake > 0) {\\n                staking.unstake(totalToUnstake);\\n                totalStaked = totalStaked - totalToUnstake;\\n            }\\n        }\\n\\n        // reset the cycle\\n        totalStakedShares -= totalToUnstakeShares;\\n        totalUnstakedShares += totalToUnstakeShares;\\n        totalToUnstakeShares = 0;\\n        totalWithdrawable += totalUnstaking + rewardNotStaked;\\n        rewardNotStaked = 0;\\n        totalUnstaking = totalToUnstake;\\n        currentUnstakeEpoch += 1;\\n    }\\n\\n    /// @notice this function updates stale balance structure for a user\\n    /// it has basically 2 scenarios: user is staking since 1 epoch\\n    /// or it's staking since 2 or more epochs\\n    function _updateUserBalances(address _user) internal {\\n        UserBalance storage user = userBalance[_user];\\n        uint256 userLastUpdateEpoch = user.stakingVoucher.queueEpoch;\\n        if (\\n            (user.stakingVoucher.amountQueued == 0 &&\\n                user.stakingVoucher.amountStaked == 0) ||\\n            userLastUpdateEpoch == currentStakeEpoch\\n        ) return; // nothing to do; all up-to-date\\n\\n        user.stakedPoolShares += _getUserMaturatedShares(user.stakingVoucher);\\n        // checks for any outdated balances\\n        if (userLastUpdateEpoch + 1 == currentStakeEpoch) {\\n            user.stakingVoucher.amountStaked = user.stakingVoucher.amountQueued;\\n            user.stakingVoucher.amountQueued = 0;\\n            user.stakingVoucher.queueEpoch = currentStakeEpoch;\\n        } else if (userLastUpdateEpoch + 2 <= currentStakeEpoch) {\\n            user.stakingVoucher.amountStaked = 0;\\n            user.stakingVoucher.amountQueued = 0;\\n        }\\n    }\\n\\n    function _stakeUpdates(address user, uint256 _amount) internal {\\n        _updateUserBalances(user);\\n\\n        userBalance[user].stakingVoucher.amountQueued =\\n            userBalance[user].stakingVoucher.amountQueued +\\n            _amount;\\n        userBalance[user].stakingVoucher.queueEpoch = currentStakeEpoch;\\n\\n        currentQueuedTotal = currentQueuedTotal + _amount;\\n\\n        emit Stake(\\n            user,\\n            _amount,\\n            staking.getMaturingTimestamp(address(this)) + timeToStake\\n        );\\n    }\\n\\n    function _getStakedValueInShares(uint256 value)\\n        internal\\n        view\\n        returns (uint256 shares)\\n    {\\n        uint256 rewardsNotStaked =\\n            rewardMaturing + rewardQueued + rewardNotStaked;\\n        // total value related to totalStakedShares\\n        uint256 totalAccumulatedValue = totalStaked + rewardsNotStaked;\\n        if (totalAccumulatedValue == 0) return 0;\\n        return (value * totalStakedShares) / totalAccumulatedValue;\\n    }\\n\\n    function _getStakedSharesInValue(uint256 shares)\\n        internal\\n        view\\n        returns (uint256 value)\\n    {\\n        if (totalStakedShares == 0) return 0;\\n        uint256 rewardsNotStaked =\\n            rewardMaturing + rewardNotStaked + rewardQueued;\\n        // total value related to totalStakedShares\\n        uint256 totalAccumulatedValue = totalStaked + rewardsNotStaked;\\n        return (shares * totalAccumulatedValue) / totalStakedShares;\\n    }\\n\\n    function _getUnstakedSharesInValue(uint256 shares)\\n        internal\\n        view\\n        returns (uint256 value)\\n    {\\n        if (totalUnstakedShares == 0) return 0;\\n        // total value related to totalUnstakedShares\\n        uint256 totalAccumulatedValue = totalUnstaking + totalWithdrawable;\\n        return (shares * totalAccumulatedValue) / totalUnstakedShares;\\n    }\\n\\n    function _getUnstakedValueInShares(uint256 value)\\n        internal\\n        view\\n        returns (uint256 shares)\\n    {\\n        // total value related to totalUnstakedShares\\n        uint256 totalAccumulatedValue = totalUnstaking + totalWithdrawable;\\n        if (totalAccumulatedValue == 0) return 0;\\n        return (value * totalUnstakedShares) / totalAccumulatedValue;\\n    }\\n\\n    function _getUserMaturatedShares(StakingVoucher storage v)\\n        internal\\n        view\\n        returns (uint256 shares)\\n    {\\n        // check whether any balance under 'amountQueued' is already mature\\n        if (v.queueEpoch + 2 <= currentStakeEpoch) {\\n            shares = v.amountQueued * stakingVoucherValueAtEpoch[v.queueEpoch];\\n        }\\n        // check whether any balance under 'amountStaked' is already mature\\n        if (v.queueEpoch > 0 && v.queueEpoch + 1 <= currentStakeEpoch) {\\n            shares +=\\n                v.amountStaked *\\n                stakingVoucherValueAtEpoch[v.queueEpoch - 1];\\n        }\\n    }\\n\\n    function canCycleStakeMaturation()\\n        external\\n        view\\n        override\\n        returns (\\n            bool available,\\n            uint256 _currentQueuedTotal,\\n            uint256 _currentMaturingTotal\\n        )\\n    {\\n        if (staking.getMaturingTimestamp(address(this)) > block.timestamp)\\n            return (false, currentQueuedTotal, currentMaturingTotal);\\n        return (true, currentQueuedTotal, currentMaturingTotal);\\n    }\\n\\n    function canCycleWithdrawRelease()\\n        external\\n        view\\n        override\\n        returns (\\n            bool available,\\n            uint256 _totalToUnstakeValue,\\n            uint256 _totalUnstaking\\n        )\\n    {\\n        _totalToUnstakeValue = _getStakedSharesInValue(totalToUnstakeShares);\\n        if (\\n            staking.getReleasingBalance(address(this)) > 0 &&\\n            staking.getReleasingTimestamp(address(this)) > block.timestamp\\n        ) return (false, _totalToUnstakeValue, totalUnstaking);\\n        return (true, _totalToUnstakeValue, totalUnstaking);\\n    }\\n}\\n\",\"keccak256\":\"0x7b107d63870148e300e3f82deae2388660971641641dafd9216cc88b9a071add\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolManagement.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\ninterface StakingPoolManagement {\\n    /// @notice sets a name for the pool using ENS service\\n    function setName(string memory name) external;\\n\\n    /// @notice pauses new staking on the pool\\n    function pause() external;\\n\\n    /// @notice unpauses new staking on the pool\\n    function unpause() external;\\n\\n    /// @notice Event emmited when a pool is rename\\n    event StakingPoolRenamed(string name);\\n\\n    /// @notice allows for the pool to act on its own behalf when producing blocks.\\n    function selfhire() external payable;\\n\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress) external payable;\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external;\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external;\\n}\\n\",\"keccak256\":\"0xec0e9343c5cfbe93b7443e6786d8d1e7a6cfe8f57526afcb0e02ff426e8de02b\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolManagementImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\nimport \\\"@cartesi/pos/contracts/IPoS.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IWorkerManagerAuthManager.sol\\\";\\nimport \\\"@ensdomains/ens-contracts/contracts/registry/ReverseRegistrar.sol\\\";\\nimport \\\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\n\\nimport \\\"./StakingPoolManagement.sol\\\";\\n\\ncontract StakingPoolManagementImpl is\\n    StakingPoolManagement,\\n    Initializable,\\n    Pausable\\n{\\n    bytes32 private constant ADDR_REVERSE_NODE =\\n        0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n    ENS public immutable ens;\\n    IPoS public immutable pos;\\n\\n    IWorkerManagerAuthManager public immutable workerManager;\\n\\n    event OwnershipTransferred(\\n        address indexed previousOwner,\\n        address indexed newOwner\\n    );\\n\\n    address private _owner;\\n\\n    // all immutable variables can stay at the constructor\\n    constructor(\\n        address _ens,\\n        address _workerManager,\\n        address _pos\\n    ) {\\n        require(_ens != address(0), \\\"parameter can not be zero address\\\");\\n        require(\\n            _workerManager != address(0),\\n            \\\"parameter can not be zero address\\\"\\n        );\\n        require(_pos != address(0), \\\"parameter can not be zero address\\\");\\n\\n        ens = ENS(_ens);\\n        workerManager = IWorkerManagerAuthManager(_workerManager);\\n        pos = IPoS(_pos);\\n        // make sure reference code is pause so noone stake to it\\n        initialize(address(0));\\n        _pause();\\n    }\\n\\n    function initialize(address ownerSender) internal initializer {\\n        _owner = ownerSender;\\n        emit OwnershipTransferred(address(0), ownerSender);\\n    }\\n\\n    receive() external payable {}\\n\\n    /// @notice sets a name for the pool using ENS service\\n    function setName(string memory name) external override onlyOwner {\\n        ReverseRegistrar ensReverseRegistrar =\\n            ReverseRegistrar(ens.owner(ADDR_REVERSE_NODE));\\n\\n        // call the ENS reverse registrar resolving pool address to name\\n        ensReverseRegistrar.setName(name);\\n\\n        // emit event, for subgraph processing\\n        emit StakingPoolRenamed(name);\\n    }\\n\\n    /// @notice pauses new staking on the pool\\n    function pause() public override onlyOwner {\\n        _pause();\\n    }\\n\\n    /// @notice unpauses new staking on the pool\\n    function unpause() external override onlyOwner {\\n        _unpause();\\n    }\\n\\n    /// @notice allows for the pool to act on its own behalf when producing blocks.\\n    function selfhire() external payable override {\\n        // pool needs to be both user and worker\\n        workerManager.hire{value: msg.value}(payable(address(this)));\\n        workerManager.authorize(address(this), address(pos));\\n        workerManager.acceptJob();\\n        payable(_owner).transfer(msg.value);\\n    }\\n\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress) external payable override {\\n        workerManager.hire{value: msg.value}(workerAddress);\\n        workerManager.authorize(workerAddress, address(pos));\\n    }\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external override {\\n        workerManager.cancelHire(workerAddress);\\n    }\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external override {\\n        workerManager.retire(workerAddress);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == msg.sender, \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(\\n            newOwner != address(0),\\n            \\\"Ownable: new owner is the zero address\\\"\\n        );\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n}\\n\",\"keccak256\":\"0x9fbb4c85625a591d46db2d1174d41ca86c3e23a30486d615834f082e67e76ac4\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 835,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 838,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 893,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_paused",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 4085,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_owner",
        "offset": 3,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2443,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "fee",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(Fee)1855"
      },
      {
        "astId": 2445,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "rewardQueued",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 2447,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "rewardNotStaked",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2449,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "rewardMaturing",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 2451,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "currentStakeEpoch",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2453,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "currentUnstakeEpoch",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 2483,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "userBalance",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(UserBalance)2478_storage)"
      },
      {
        "astId": 2489,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "stakingVoucherValueAtEpoch",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 2491,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "currentQueuedTotal",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 2493,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "currentMaturingTotal",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 2495,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "totalStaked",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 2497,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "totalStakedShares",
        "offset": 0,
        "slot": "12",
        "type": "t_uint256"
      },
      {
        "astId": 2499,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "totalToUnstakeShares",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 2501,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "totalUnstaking",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 2503,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "totalWithdrawable",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 2505,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "totalUnstakedShares",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Fee)1855": {
        "encoding": "inplace",
        "label": "contract Fee",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserBalance)2478_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPoolImpl.UserBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(UserBalance)2478_storage"
      },
      "t_struct(StakingVoucher)2464_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolImpl.StakingVoucher",
        "members": [
          {
            "astId": 2459,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "amountQueued",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2461,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "amountStaked",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2463,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "queueEpoch",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(UnstakingVoucher)2469_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolImpl.UnstakingVoucher",
        "members": [
          {
            "astId": 2466,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "poolShares",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2468,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "queueEpoch",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(UserBalance)2478_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolImpl.UserBalance",
        "members": [
          {
            "astId": 2471,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "stakedPoolShares",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2474,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "stakingVoucher",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(StakingVoucher)2464_storage"
          },
          {
            "astId": 2477,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "unstakingVoucher",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(UnstakingVoucher)2469_storage"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "BlockProduced(uint256,uint256,uint256,uint256)": {
        "notice": "this events is emitted at every produceBlock call     reward is the block reward     commission is how much CTSI is directed to the poolManager     queued is how much currently is being queued to be staked     notStaked is how much is directed to withdrawal"
      },
      "Stake(address,uint256,uint256)": {
        "notice": "CTSI tokens were deposited, they count as stake after _maturationDate"
      },
      "StakingPoolRenamed(string)": {
        "notice": "Event emmited when a pool is rename"
      },
      "Unstake(address,uint256,uint256)": {
        "notice": "Unstake tokens, moving them to releasing structure"
      },
      "Withdraw(address,uint256)": {
        "notice": "Withdraw process was finalized"
      }
    },
    "kind": "user",
    "methods": {
      "canCycleStakeMaturation()": {
        "notice": "checks whether or not a call can be made to cycleStakeMaturation and be successful"
      },
      "canCycleWithdrawRelease()": {
        "notice": "checks whether or not a call can be made to cycleWithdrawRelease and be successful"
      },
      "cancelHire(address)": {
        "notice": "Called by the user to cancel a job offer"
      },
      "cycleStakeMaturation()": {
        "notice": "enables pool manager to update staking balances as they mature on the (main) Staking contract"
      },
      "cycleWithdrawRelease()": {
        "notice": "enables pool manager to update staking balances as they mature on the (main) Staking contract"
      },
      "getMaturingBalance(address)": {
        "notice": "Returns the balance waiting/ready to be matured"
      },
      "getMaturingTimestamp(address)": {
        "notice": "Returns the timestamp when next deposit can be finalized"
      },
      "getReleasingBalance(address)": {
        "notice": "Returns the balance waiting/ready to be released"
      },
      "getReleasingTimestamp(address)": {
        "notice": "Returns the timestamp when next withdraw can be finalized"
      },
      "getStakedBalance(address)": {
        "notice": "Returns total amount of tokens counted as stake"
      },
      "hire(address)": {
        "notice": "Asks the worker to work for the sender. Sender needs to pay something."
      },
      "pause()": {
        "notice": "pauses new staking on the pool"
      },
      "produceBlock(uint256)": {
        "notice": "routes produceBlock to POS contract and updates internal states of the pool"
      },
      "retire(address)": {
        "notice": "Called by the user to retire his worker."
      },
      "selfhire()": {
        "notice": "allows for the pool to act on its own behalf when producing blocks."
      },
      "setName(string)": {
        "notice": "sets a name for the pool using ENS service"
      },
      "stake(uint256)": {
        "notice": "Deposit CTSI to be staked. The money will turn into staked         balance after timeToStake days"
      },
      "unpause()": {
        "notice": "unpauses new staking on the pool"
      },
      "unstake(uint256)": {
        "notice": "Remove tokens from staked balance. The money can         be released after timeToRelease seconds, if the         function withdraw is called."
      },
      "withdraw(uint256)": {
        "notice": "Transfer tokens to user's wallet."
      }
    },
    "version": 1
  }
}