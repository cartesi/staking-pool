{
  "contractName": "StakingPoolImpl",
  "sourceName": "contracts/StakingPoolImpl.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ctsi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_staking",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_workerManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_ens",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_stakeLock",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        }
      ],
      "name": "BlockProduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeTimestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "StakingPoolRenamed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "amountToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "stake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unstake",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdraw",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "cancelHire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ctsi",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract StakingPoolFactory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "contract Fee",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "hire",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fee",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pos",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pos",
      "outputs": [
        {
          "internalType": "contract IPoS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "produceBlock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rebalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "workerAddress",
          "type": "address"
        }
      ],
      "name": "retire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfhire",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x6101606040523480156200001257600080fd5b5060405162002e8538038062002e858339810160408190526200003591620002c1565b82858287878987600060019054906101000a900460ff16806200005b575060005460ff16155b620000c45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015620000e7576000805461ffff19166101011790555b6001600160a01b038216620001385760405162461bcd60e51b8152602060048201526021602482015260008051602062002e658339815191526044820152607360f81b6064820152608401620000bb565b6001600160601b0319606083901b166080526200015462000209565b801562000167576000805461ff00191690555b50506001600160601b0319606091821b811660a05292811b831660c05290811b821660e0529290921b90911661010052610120526001600160a01b038116620001ec5760405162461bcd60e51b8152602060048201526021602482015260008051602062002e658339815191526044820152607360f81b6064820152608401620000bb565b60601b6001600160601b0319166101405250620003289350505050565b60335460ff1615620002515760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401620000bb565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258620002873390565b6040516001600160a01b03909116815260200160405180910390a1565b80516001600160a01b0381168114620002bc57600080fd5b919050565b600080600080600060a08688031215620002da57600080fd5b620002e586620002a4565b9450620002f560208701620002a4565b93506200030560408701620002a4565b92506200031560608701620002a4565b9150608086015190509295509295909350565b60805160601c60a05160601c60c05160601c60e05160601c6101005160601c610120516101405160601c612a446200042160003960008181610da201528181610e2d01528181610e910152818161124301528181611ab801528181611eb701528181611f3c0152612392015260008181610290015281816118910152611c5c01526000818161089501528181610f650152611b94015260008181610b7401528181610c5001528181610cea0152818161105d015281816110de0152818161115f0152612106015260008181610ad601526121360152600081816103cb015261165a0152600081816103060152611d2f0152612a446000f3fe6080604052600436106101f25760003560e01c80638456cb591161010d578063b6b55f25116100a0578063c56551b61161006f578063c56551b6146105a7578063d9d6bd86146105c7578063ddca3f43146105da578063e366b7bb146105fa578063f2fde38b1461061057600080fd5b8063b6b55f2514610527578063b811540e14610547578063c45a015514610567578063c47f00271461058757600080fd5b8063a5a6cd0b116100dc578063a5a6cd0b146104b1578063a694fc3a146104d1578063aa8c217c146104f1578063b64b3bed1461050757600080fd5b80638456cb59146104495780638da5cb5b1461045e5780639e6371ba1461047c578063a2e620451461049c57600080fd5b8063555d8ebb116101855780636ff46a6c116101545780636ff46a6c14610402578063710fe6f81461040a578063715018a61461041f5780637d7c2a1c1461043457600080fd5b8063555d8ebb146103755780635c975abb1461039557806364ffc3f4146103b95780636beaeeae146103ed57600080fd5b80632e1a7d4d116101c15780632e1a7d4d146102d45780633f15457f146102f45780633f4ba83a14610340578063485cc9551461035557600080fd5b80630103c92b146101fe57806303314efa1461025a5780630d6680871461027e5780632e17de78146102b257600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b5061023a610219366004612643565b609b6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b34801561026657600080fd5b5061027060975481565b604051908152602001610251565b34801561028a57600080fd5b506102707f000000000000000000000000000000000000000000000000000000000000000081565b3480156102be57600080fd5b506102d26102cd3660046127a2565b610630565b005b3480156102e057600080fd5b506102d26102ef3660046127a2565b6107d6565b34801561030057600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610251565b34801561034c57600080fd5b506102d261096f565b34801561036157600080fd5b506102d261037036600461267d565b6109a3565b34801561038157600080fd5b506102706103903660046127a2565b610a73565b3480156103a157600080fd5b5060335460ff165b6040519015158152602001610251565b3480156103c557600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b3480156103f957600080fd5b5061023a610ab0565b6102d2610d8d565b34801561041657600080fd5b50610270610f32565b34801561042b57600080fd5b506102d2610ff9565b34801561044057600080fd5b506102d261102d565b34801561045557600080fd5b506102d26111c8565b34801561046a57600080fd5b506065546001600160a01b0316610328565b34801561048857600080fd5b506102d2610497366004612643565b6111fa565b3480156104a857600080fd5b506102d26112a3565b3480156104bd57600080fd5b506103a96104cc3660046127a2565b611355565b3480156104dd57600080fd5b506102d26104ec3660046127a2565b6117c9565b3480156104fd57600080fd5b5061027060985481565b34801561051357600080fd5b506102d2610522366004612643565b611a6f565b34801561053357600080fd5b506102d26105423660046127a2565b611ae7565b34801561055357600080fd5b506102706105623660046127a2565b611c96565b34801561057357600080fd5b50609c54610328906001600160a01b031681565b34801561059357600080fd5b506102d26105a23660046126f1565b611ccd565b3480156105b357600080fd5b50609a54610328906001600160a01b031681565b6102d26105d5366004612643565b611e6e565b3480156105e657600080fd5b50609d54610328906001600160a01b031681565b34801561060657600080fd5b5061027060995481565b34801561061c57600080fd5b506102d261062b366004612643565b611f71565b336000908152609b60205260409020816106a75760405162461bcd60e51b815260206004820152602d60248201527f5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f60448201526c756e74206f662073686172657360981b60648201526084015b60405180910390fd5b818160010154101561070c5760405162461bcd60e51b815260206004820152602860248201527f5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e604482015267742073686172657360c01b606482015260840161069e565b8181600101600082825461072091906129b6565b909155506000905061073183610a73565b9050826097600082825461074591906129b6565b92505081905550806098600082825461075e91906129b6565b909155505081548190839060009061077790849061295d565b925050819055508060996000828254610790919061295d565b9091555050604080518281526020810185905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28091015b60405180910390a2505050565b336000908152609b6020526040902080546108475760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e63652060448201526a746f20776974686472617760a81b606482015260840161069e565b8181600001600082825461085b91906129b6565b92505081905550816099600082825461087491906129b6565b909155505060405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091991906126b6565b6109355760405162461bcd60e51b815260040161069e90612810565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b6065546001600160a01b031633146109995760405162461bcd60e51b815260040161069e906128d6565b6109a1611f7a565b565b600054610100900460ff16806109bc575060005460ff16155b6109d85760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff161580156109fa576000805461ffff19166101011790555b610a0261200d565b610a0a612088565b610a3d8383609d80546001600160a01b039384166001600160a01b031991821617909155609a8054929093169116179055565b610a456120ef565b610a5c609c80546001600160a01b03191633179055565b8015610a6e576000805461ff00191690555b505050565b600060975460001415610a8f57610a8982612212565b92915050565b610a89609754610aaa6098548561224690919063ffffffff16565b90612280565b6040516370a0823160e01b81523060048201526000908190819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610b1857600080fd5b505afa158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5091906126d8565b9050609954811115610c1357604051631066f98960e21b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063419be6249060240160206040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf691906126d8565b905080610c0d57609954610c0a90836129b6565b94505b50610d87565b806099541115610d8757600081609954610c2d91906129b6565b604051638e9f04b560e01b81523060048201529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e9f04b59060240160206040518083038186803b158015610c9257600080fd5b505afa158015610ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cca91906126d8565b90508015610d80576040516367ba9b9160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906367ba9b919060240160206040518083038186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c91906126d8565b905042811015610d7a578194505b50610d84565b8194505b50505b50909192565b604051636ceb5ec360e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d9d6bd869034906024016000604051808303818588803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b5050609a54604051632bef459560e01b81523060048201526001600160a01b0391821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169350632bef459592506044019050600060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b789b7e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610eea57600080fd5b505af1158015610efe573d6000803e3d6000fd5b50506040513392503480156108fc029250906000818181858888f19350505050158015610f2f573d6000803e3d6000fd5b50565b336000908152609b6020526040808220805491516370a0823160e01b815230600482015290919083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610fa757600080fd5b505afa158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf91906126d8565b905081811015610fef5780610ff1565b815b935050505090565b6065546001600160a01b031633146110235760405162461bcd60e51b815260040161069e906128d6565b6109a160006122c3565b600080600061103a610ab0565b9194509250905082156110c25760405163534a7e1d60e11b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a694fc3a90602401600060405180830381600087803b1580156110a957600080fd5b505af11580156110bd573d6000803e3d6000fd5b505050505b8115611143576040516305c2fbcf60e31b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e17de7890602401600060405180830381600087803b15801561112a57600080fd5b505af115801561113e573d6000803e3d6000fd5b505050505b8015610a6e57604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156111ab57600080fd5b505af11580156111bf573d6000803e3d6000fd5b50505050505050565b6065546001600160a01b031633146111f25760405162461bcd60e51b815260040161069e906128d6565b6109a1612315565b6065546001600160a01b031633146112245760405162461bcd60e51b815260040161069e906128d6565b604051634f31b8dd60e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639e6371ba906024015b600060405180830381600087803b15801561128857600080fd5b505af115801561129c573d6000803e3d6000fd5b5050505050565b6065546001600160a01b031633146112cd5760405162461bcd60e51b815260040161069e906128d6565b609c5460408051632686e29d60e01b815290516000926001600160a01b031691632686e29d916004808301926020929190829003018186803b15801561131257600080fd5b505afa158015611326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134a9190612660565b9050610f2f8161236d565b609a546040516385425f4f60e01b81526004810183905260009182916001600160a01b03909116906385425f4f9060240160206040518083038186803b15801561139e57600080fd5b505afa1580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190612660565b90506000816001600160a01b0316638aec85426040518163ffffffff1660e01b815260040160206040518083038186803b15801561141357600080fd5b505afa158015611427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144b91906126d8565b609a5460405163a5a6cd0b60e01b8152600481018790529192506001600160a01b03169063a5a6cd0b90602401602060405180830381600087803b15801561149257600080fd5b505af11580156114a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ca91906126b6565b61152f5760405162461bcd60e51b815260206004820152603060248201527f5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c65642060448201526f746f2070726f6475636520626c6f636b60801b606482015260840161069e565b609d54604051632c7f22b560e21b815260048101869052602481018390526000916001600160a01b03169063b1fc8ad49060440160206040518083038186803b15801561157b57600080fd5b505afa15801561158f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b391906126d8565b90508181111561162d576040805162461bcd60e51b81526020600482015260248101919091527f5374616b696e67506f6f6c50726f6475636572496d706c3a20636f6d6d69737360448201527f696f6e2069732067726561746572207468616e20626c6f636b20726577617264606482015260840161069e565b600061163982846129b6565b9050806098600082825461164d919061295d565b90915550508115611784577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6116996065546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101859052604401602060405180830381600087803b1580156116e157600080fd5b505af11580156116f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171991906126b6565b6117845760405162461bcd60e51b815260206004820152603660248201527f5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c6564206044820152753a37903a3930b739b332b91031b7b6b6b4b9b9b4b7b760511b606482015260840161069e565b60408051848152602081018490527fbb9ac692e0e3001a628f86a894f03da4ced5df81886fec577036664ed70a59cb910160405180910390a150600195945050505050565b60335460ff16156117ec5760405162461bcd60e51b815260040161069e9061285e565b336000908152609b60205260409020816118185760405162461bcd60e51b815260040161069e9061290b565b805482111561188f5760405162461bcd60e51b815260206004820152603c60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f746f6b656e7320617661696c61626c6520666f72207374616b696e6700000000606482015260840161069e565b7f000000000000000000000000000000000000000000000000000000000000000081600201546118bf919061295d565b42101561193f5760405162461bcd60e51b815260206004820152604260248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f74696d6520686173207061737365642073696e6365206c617374206465706f736064820152611a5d60f21b608482015260a40161069e565b600061194a83611c96565b9050600081116119ba5760405162461bcd60e51b815260206004820152603560248201527f5374616b696e67506f6f6c55736572496d706c3a207374616b65206e6f7420656044820152746e6f75676820746f20656d6974203120736861726560581b606482015260840161069e565b808260010160008282546119ce919061295d565b90915550508154839083906000906119e79084906129b6565b925050819055508260986000828254611a00919061295d565b925050819055508060976000828254611a19919061295d565b925050819055508260996000828254611a3291906129b6565b9091555050604080518481526020810183905233917f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b691016107c9565b6065546001600160a01b03163314611a995760405162461bcd60e51b815260040161069e906128d6565b60405163b64b3bed60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063b64b3bed9060240161126e565b60335460ff1615611b0a5760405162461bcd60e51b815260040161069e9061285e565b60008111611b2a5760405162461bcd60e51b815260040161069e9061290b565b336000908152609b60205260408120805490918391839190611b4d90849061295d565b909155505042600282015560998054839190600090611b6d90849061295d565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015611be057600080fd5b505af1158015611bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1891906126b6565b611c345760405162461bcd60e51b815260040161069e90612810565b337f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1583611c817f00000000000000000000000000000000000000000000000000000000000000004261295d565b60408051928352602083019190915201610963565b600060985460001415611cac57610a8982612411565b610a89609854611cc76097548561242190919063ffffffff16565b90612449565b6065546001600160a01b03163314611cf75760405162461bcd60e51b815260040161069e906128d6565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be39060240160206040518083038186803b158015611d7957600080fd5b505afa158015611d8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db19190612660565b60405163c47f002760e01b81529091506001600160a01b0382169063c47f002790611de09085906004016127bb565b602060405180830381600087803b158015611dfa57600080fd5b505af1158015611e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3291906126d8565b507f6aaa0865532d48a9a0f63cc91df7ff2ab538c896665c864ae02d0a1e7f81cf6582604051611e6291906127bb565b60405180910390a15050565b6065546001600160a01b03163314611e985760405162461bcd60e51b815260040161069e906128d6565b604051636ceb5ec360e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d9d6bd869034906024016000604051808303818588803b158015611efc57600080fd5b505af1158015611f10573d6000803e3d6000fd5b5050609a54604051632bef459560e01b81526001600160a01b03868116600483015291821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169350632bef45959250604401905061126e565b610f2f8161246c565b60335460ff16611fc35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161069e565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054610100900460ff1680612026575060005460ff16155b6120425760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff16158015612064576000805461ffff19166101011790555b61206c612504565b61207461256e565b8015610f2f576000805461ff001916905550565b600054610100900460ff16806120a1575060005460ff16155b6120bd5760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff161580156120df576000805461ffff19166101011790555b6120e7612504565b6120746125e3565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561217a57600080fd5b505af115801561218e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b291906126b6565b6109a15760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f20617070726f7665204354534920666f72207374616b6960448201526a1b99c818dbdb9d1c9858dd60aa1b606482015260840161069e565b6000806122246002633b9aca00612975565b9050633b9aca00612235848361295d565b61223f9190612975565b9392505050565b60006b033b2e3c9fd0803ce800000061225f8385612997565b61227660026b033b2e3c9fd0803ce8000000612975565b612235919061295d565b60008061228e600284612975565b9050826122a76b033b2e3c9fd0803ce800000086612997565b6122b1908361295d565b6122bb9190612975565b949350505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60335460ff16156123385760405162461bcd60e51b815260040161069e9061285e565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ff03390565b604051632bef459560e01b81523060048201526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690632bef459590604401600060405180830381600087803b1580156123d657600080fd5b505af11580156123ea573d6000803e3d6000fd5b5050609a80546001600160a01b0319166001600160a01b0394909416939093179092555050565b6000610a89633b9aca0083612997565b6000670de0b6b3a76400006124368385612997565b6122766002670de0b6b3a7640000612975565b600080612457600284612975565b9050826122a7670de0b6b3a764000086612997565b6065546001600160a01b031633146124965760405162461bcd60e51b815260040161069e906128d6565b6001600160a01b0381166124fb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161069e565b610f2f816122c3565b600054610100900460ff168061251d575060005460ff16155b6125395760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff16158015612074576000805461ffff19166101011790558015610f2f576000805461ff001916905550565b600054610100900460ff1680612587575060005460ff16155b6125a35760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff161580156125c5576000805461ffff19166101011790555b6033805460ff191690558015610f2f576000805461ff001916905550565b600054610100900460ff16806125fc575060005460ff16155b6126185760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff1615801561263a576000805461ffff19166101011790555b612074336122c3565b60006020828403121561265557600080fd5b813561223f816129f9565b60006020828403121561267257600080fd5b815161223f816129f9565b6000806040838503121561269057600080fd5b823561269b816129f9565b915060208301356126ab816129f9565b809150509250929050565b6000602082840312156126c857600080fd5b8151801515811461223f57600080fd5b6000602082840312156126ea57600080fd5b5051919050565b60006020828403121561270357600080fd5b813567ffffffffffffffff8082111561271b57600080fd5b818401915084601f83011261272f57600080fd5b813581811115612741576127416129e3565b604051601f8201601f19908116603f01168101908382118183101715612769576127696129e3565b8160405282815287602084870101111561278257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156127b457600080fd5b5035919050565b600060208083528351808285015260005b818110156127e8578581018301518582016040015282016127cc565b818111156127fa576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f207460408201526d72616e7366657220746f6b656e7360901b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d75737460408201527102062652067726561746572207468616e20360741b606082015260800190565b60008219821115612970576129706129cd565b500190565b60008261299257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156129b1576129b16129cd565b500290565b6000828210156129c8576129c86129cd565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f2f57600080fdfea26469706673582212203c535d95c790ec68bcf07e0f09fa1de8d9ac93b9383ffe05946507faa4e6d27064736f6c63430008070033706172616d657465722063616e206e6f74206265207a65726f20616464726573",
  "deployedBytecode": "0x6080604052600436106101f25760003560e01c80638456cb591161010d578063b6b55f25116100a0578063c56551b61161006f578063c56551b6146105a7578063d9d6bd86146105c7578063ddca3f43146105da578063e366b7bb146105fa578063f2fde38b1461061057600080fd5b8063b6b55f2514610527578063b811540e14610547578063c45a015514610567578063c47f00271461058757600080fd5b8063a5a6cd0b116100dc578063a5a6cd0b146104b1578063a694fc3a146104d1578063aa8c217c146104f1578063b64b3bed1461050757600080fd5b80638456cb59146104495780638da5cb5b1461045e5780639e6371ba1461047c578063a2e620451461049c57600080fd5b8063555d8ebb116101855780636ff46a6c116101545780636ff46a6c14610402578063710fe6f81461040a578063715018a61461041f5780637d7c2a1c1461043457600080fd5b8063555d8ebb146103755780635c975abb1461039557806364ffc3f4146103b95780636beaeeae146103ed57600080fd5b80632e1a7d4d116101c15780632e1a7d4d146102d45780633f15457f146102f45780633f4ba83a14610340578063485cc9551461035557600080fd5b80630103c92b146101fe57806303314efa1461025a5780630d6680871461027e5780632e17de78146102b257600080fd5b366101f957005b600080fd5b34801561020a57600080fd5b5061023a610219366004612643565b609b6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b34801561026657600080fd5b5061027060975481565b604051908152602001610251565b34801561028a57600080fd5b506102707f000000000000000000000000000000000000000000000000000000000000000081565b3480156102be57600080fd5b506102d26102cd3660046127a2565b610630565b005b3480156102e057600080fd5b506102d26102ef3660046127a2565b6107d6565b34801561030057600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610251565b34801561034c57600080fd5b506102d261096f565b34801561036157600080fd5b506102d261037036600461267d565b6109a3565b34801561038157600080fd5b506102706103903660046127a2565b610a73565b3480156103a157600080fd5b5060335460ff165b6040519015158152602001610251565b3480156103c557600080fd5b506103287f000000000000000000000000000000000000000000000000000000000000000081565b3480156103f957600080fd5b5061023a610ab0565b6102d2610d8d565b34801561041657600080fd5b50610270610f32565b34801561042b57600080fd5b506102d2610ff9565b34801561044057600080fd5b506102d261102d565b34801561045557600080fd5b506102d26111c8565b34801561046a57600080fd5b506065546001600160a01b0316610328565b34801561048857600080fd5b506102d2610497366004612643565b6111fa565b3480156104a857600080fd5b506102d26112a3565b3480156104bd57600080fd5b506103a96104cc3660046127a2565b611355565b3480156104dd57600080fd5b506102d26104ec3660046127a2565b6117c9565b3480156104fd57600080fd5b5061027060985481565b34801561051357600080fd5b506102d2610522366004612643565b611a6f565b34801561053357600080fd5b506102d26105423660046127a2565b611ae7565b34801561055357600080fd5b506102706105623660046127a2565b611c96565b34801561057357600080fd5b50609c54610328906001600160a01b031681565b34801561059357600080fd5b506102d26105a23660046126f1565b611ccd565b3480156105b357600080fd5b50609a54610328906001600160a01b031681565b6102d26105d5366004612643565b611e6e565b3480156105e657600080fd5b50609d54610328906001600160a01b031681565b34801561060657600080fd5b5061027060995481565b34801561061c57600080fd5b506102d261062b366004612643565b611f71565b336000908152609b60205260409020816106a75760405162461bcd60e51b815260206004820152602d60248201527f5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f60448201526c756e74206f662073686172657360981b60648201526084015b60405180910390fd5b818160010154101561070c5760405162461bcd60e51b815260206004820152602860248201527f5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e604482015267742073686172657360c01b606482015260840161069e565b8181600101600082825461072091906129b6565b909155506000905061073183610a73565b9050826097600082825461074591906129b6565b92505081905550806098600082825461075e91906129b6565b909155505081548190839060009061077790849061295d565b925050819055508060996000828254610790919061295d565b9091555050604080518281526020810185905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28091015b60405180910390a2505050565b336000908152609b6020526040902080546108475760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e63652060448201526a746f20776974686472617760a81b606482015260840161069e565b8181600001600082825461085b91906129b6565b92505081905550816099600082825461087491906129b6565b909155505060405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156108e157600080fd5b505af11580156108f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091991906126b6565b6109355760405162461bcd60e51b815260040161069e90612810565b60405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b6065546001600160a01b031633146109995760405162461bcd60e51b815260040161069e906128d6565b6109a1611f7a565b565b600054610100900460ff16806109bc575060005460ff16155b6109d85760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff161580156109fa576000805461ffff19166101011790555b610a0261200d565b610a0a612088565b610a3d8383609d80546001600160a01b039384166001600160a01b031991821617909155609a8054929093169116179055565b610a456120ef565b610a5c609c80546001600160a01b03191633179055565b8015610a6e576000805461ff00191690555b505050565b600060975460001415610a8f57610a8982612212565b92915050565b610a89609754610aaa6098548561224690919063ffffffff16565b90612280565b6040516370a0823160e01b81523060048201526000908190819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610b1857600080fd5b505afa158015610b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5091906126d8565b9050609954811115610c1357604051631066f98960e21b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063419be6249060240160206040518083038186803b158015610bbe57600080fd5b505afa158015610bd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf691906126d8565b905080610c0d57609954610c0a90836129b6565b94505b50610d87565b806099541115610d8757600081609954610c2d91906129b6565b604051638e9f04b560e01b81523060048201529091506000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638e9f04b59060240160206040518083038186803b158015610c9257600080fd5b505afa158015610ca6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cca91906126d8565b90508015610d80576040516367ba9b9160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906367ba9b919060240160206040518083038186803b158015610d3457600080fd5b505afa158015610d48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6c91906126d8565b905042811015610d7a578194505b50610d84565b8194505b50505b50909192565b604051636ceb5ec360e11b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d9d6bd869034906024016000604051808303818588803b158015610def57600080fd5b505af1158015610e03573d6000803e3d6000fd5b5050609a54604051632bef459560e01b81523060048201526001600160a01b0391821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169350632bef459592506044019050600060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639b789b7e6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610eea57600080fd5b505af1158015610efe573d6000803e3d6000fd5b50506040513392503480156108fc029250906000818181858888f19350505050158015610f2f573d6000803e3d6000fd5b50565b336000908152609b6020526040808220805491516370a0823160e01b815230600482015290919083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610fa757600080fd5b505afa158015610fbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fdf91906126d8565b905081811015610fef5780610ff1565b815b935050505090565b6065546001600160a01b031633146110235760405162461bcd60e51b815260040161069e906128d6565b6109a160006122c3565b600080600061103a610ab0565b9194509250905082156110c25760405163534a7e1d60e11b8152600481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a694fc3a90602401600060405180830381600087803b1580156110a957600080fd5b505af11580156110bd573d6000803e3d6000fd5b505050505b8115611143576040516305c2fbcf60e31b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e17de7890602401600060405180830381600087803b15801561112a57600080fd5b505af115801561113e573d6000803e3d6000fd5b505050505b8015610a6e57604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156111ab57600080fd5b505af11580156111bf573d6000803e3d6000fd5b50505050505050565b6065546001600160a01b031633146111f25760405162461bcd60e51b815260040161069e906128d6565b6109a1612315565b6065546001600160a01b031633146112245760405162461bcd60e51b815260040161069e906128d6565b604051634f31b8dd60e11b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690639e6371ba906024015b600060405180830381600087803b15801561128857600080fd5b505af115801561129c573d6000803e3d6000fd5b5050505050565b6065546001600160a01b031633146112cd5760405162461bcd60e51b815260040161069e906128d6565b609c5460408051632686e29d60e01b815290516000926001600160a01b031691632686e29d916004808301926020929190829003018186803b15801561131257600080fd5b505afa158015611326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134a9190612660565b9050610f2f8161236d565b609a546040516385425f4f60e01b81526004810183905260009182916001600160a01b03909116906385425f4f9060240160206040518083038186803b15801561139e57600080fd5b505afa1580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190612660565b90506000816001600160a01b0316638aec85426040518163ffffffff1660e01b815260040160206040518083038186803b15801561141357600080fd5b505afa158015611427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144b91906126d8565b609a5460405163a5a6cd0b60e01b8152600481018790529192506001600160a01b03169063a5a6cd0b90602401602060405180830381600087803b15801561149257600080fd5b505af11580156114a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ca91906126b6565b61152f5760405162461bcd60e51b815260206004820152603060248201527f5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c65642060448201526f746f2070726f6475636520626c6f636b60801b606482015260840161069e565b609d54604051632c7f22b560e21b815260048101869052602481018390526000916001600160a01b03169063b1fc8ad49060440160206040518083038186803b15801561157b57600080fd5b505afa15801561158f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b391906126d8565b90508181111561162d576040805162461bcd60e51b81526020600482015260248101919091527f5374616b696e67506f6f6c50726f6475636572496d706c3a20636f6d6d69737360448201527f696f6e2069732067726561746572207468616e20626c6f636b20726577617264606482015260840161069e565b600061163982846129b6565b9050806098600082825461164d919061295d565b90915550508115611784577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb6116996065546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101859052604401602060405180830381600087803b1580156116e157600080fd5b505af11580156116f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171991906126b6565b6117845760405162461bcd60e51b815260206004820152603660248201527f5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c6564206044820152753a37903a3930b739b332b91031b7b6b6b4b9b9b4b7b760511b606482015260840161069e565b60408051848152602081018490527fbb9ac692e0e3001a628f86a894f03da4ced5df81886fec577036664ed70a59cb910160405180910390a150600195945050505050565b60335460ff16156117ec5760405162461bcd60e51b815260040161069e9061285e565b336000908152609b60205260409020816118185760405162461bcd60e51b815260040161069e9061290b565b805482111561188f5760405162461bcd60e51b815260206004820152603c60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f746f6b656e7320617661696c61626c6520666f72207374616b696e6700000000606482015260840161069e565b7f000000000000000000000000000000000000000000000000000000000000000081600201546118bf919061295d565b42101561193f5760405162461bcd60e51b815260206004820152604260248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f74696d6520686173207061737365642073696e6365206c617374206465706f736064820152611a5d60f21b608482015260a40161069e565b600061194a83611c96565b9050600081116119ba5760405162461bcd60e51b815260206004820152603560248201527f5374616b696e67506f6f6c55736572496d706c3a207374616b65206e6f7420656044820152746e6f75676820746f20656d6974203120736861726560581b606482015260840161069e565b808260010160008282546119ce919061295d565b90915550508154839083906000906119e79084906129b6565b925050819055508260986000828254611a00919061295d565b925050819055508060976000828254611a19919061295d565b925050819055508260996000828254611a3291906129b6565b9091555050604080518481526020810183905233917f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b691016107c9565b6065546001600160a01b03163314611a995760405162461bcd60e51b815260040161069e906128d6565b60405163b64b3bed60e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063b64b3bed9060240161126e565b60335460ff1615611b0a5760405162461bcd60e51b815260040161069e9061285e565b60008111611b2a5760405162461bcd60e51b815260040161069e9061290b565b336000908152609b60205260408120805490918391839190611b4d90849061295d565b909155505042600282015560998054839190600090611b6d90849061295d565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015611be057600080fd5b505af1158015611bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1891906126b6565b611c345760405162461bcd60e51b815260040161069e90612810565b337f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1583611c817f00000000000000000000000000000000000000000000000000000000000000004261295d565b60408051928352602083019190915201610963565b600060985460001415611cac57610a8982612411565b610a89609854611cc76097548561242190919063ffffffff16565b90612449565b6065546001600160a01b03163314611cf75760405162461bcd60e51b815260040161069e906128d6565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be39060240160206040518083038186803b158015611d7957600080fd5b505afa158015611d8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db19190612660565b60405163c47f002760e01b81529091506001600160a01b0382169063c47f002790611de09085906004016127bb565b602060405180830381600087803b158015611dfa57600080fd5b505af1158015611e0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e3291906126d8565b507f6aaa0865532d48a9a0f63cc91df7ff2ab538c896665c864ae02d0a1e7f81cf6582604051611e6291906127bb565b60405180910390a15050565b6065546001600160a01b03163314611e985760405162461bcd60e51b815260040161069e906128d6565b604051636ceb5ec360e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063d9d6bd869034906024016000604051808303818588803b158015611efc57600080fd5b505af1158015611f10573d6000803e3d6000fd5b5050609a54604051632bef459560e01b81526001600160a01b03868116600483015291821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169350632bef45959250604401905061126e565b610f2f8161246c565b60335460ff16611fc35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161069e565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054610100900460ff1680612026575060005460ff16155b6120425760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff16158015612064576000805461ffff19166101011790555b61206c612504565b61207461256e565b8015610f2f576000805461ff001916905550565b600054610100900460ff16806120a1575060005460ff16155b6120bd5760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff161580156120df576000805461ffff19166101011790555b6120e7612504565b6120746125e3565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561217a57600080fd5b505af115801561218e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b291906126b6565b6109a15760405162461bcd60e51b815260206004820152602b60248201527f4661696c656420746f20617070726f7665204354534920666f72207374616b6960448201526a1b99c818dbdb9d1c9858dd60aa1b606482015260840161069e565b6000806122246002633b9aca00612975565b9050633b9aca00612235848361295d565b61223f9190612975565b9392505050565b60006b033b2e3c9fd0803ce800000061225f8385612997565b61227660026b033b2e3c9fd0803ce8000000612975565b612235919061295d565b60008061228e600284612975565b9050826122a76b033b2e3c9fd0803ce800000086612997565b6122b1908361295d565b6122bb9190612975565b949350505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60335460ff16156123385760405162461bcd60e51b815260040161069e9061285e565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ff03390565b604051632bef459560e01b81523060048201526001600160a01b0382811660248301527f00000000000000000000000000000000000000000000000000000000000000001690632bef459590604401600060405180830381600087803b1580156123d657600080fd5b505af11580156123ea573d6000803e3d6000fd5b5050609a80546001600160a01b0319166001600160a01b0394909416939093179092555050565b6000610a89633b9aca0083612997565b6000670de0b6b3a76400006124368385612997565b6122766002670de0b6b3a7640000612975565b600080612457600284612975565b9050826122a7670de0b6b3a764000086612997565b6065546001600160a01b031633146124965760405162461bcd60e51b815260040161069e906128d6565b6001600160a01b0381166124fb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161069e565b610f2f816122c3565b600054610100900460ff168061251d575060005460ff16155b6125395760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff16158015612074576000805461ffff19166101011790558015610f2f576000805461ff001916905550565b600054610100900460ff1680612587575060005460ff16155b6125a35760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff161580156125c5576000805461ffff19166101011790555b6033805460ff191690558015610f2f576000805461ff001916905550565b600054610100900460ff16806125fc575060005460ff16155b6126185760405162461bcd60e51b815260040161069e90612888565b600054610100900460ff1615801561263a576000805461ffff19166101011790555b612074336122c3565b60006020828403121561265557600080fd5b813561223f816129f9565b60006020828403121561267257600080fd5b815161223f816129f9565b6000806040838503121561269057600080fd5b823561269b816129f9565b915060208301356126ab816129f9565b809150509250929050565b6000602082840312156126c857600080fd5b8151801515811461223f57600080fd5b6000602082840312156126ea57600080fd5b5051919050565b60006020828403121561270357600080fd5b813567ffffffffffffffff8082111561271b57600080fd5b818401915084601f83011261272f57600080fd5b813581811115612741576127416129e3565b604051601f8201601f19908116603f01168101908382118183101715612769576127696129e3565b8160405282815287602084870101111561278257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156127b457600080fd5b5035919050565b600060208083528351808285015260005b818110156127e8578581018301518582016040015282016127cc565b818111156127fa576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f207460408201526d72616e7366657220746f6b656e7360901b606082015260800190565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526032908201527f5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d75737460408201527102062652067726561746572207468616e20360741b606082015260800190565b60008219821115612970576129706129cd565b500190565b60008261299257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156129b1576129b16129cd565b500290565b6000828210156129c8576129c86129cd565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610f2f57600080fdfea26469706673582212203c535d95c790ec68bcf07e0f09fa1de8d9ac93b9383ffe05946507faa4e6d27064736f6c63430008070033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "amounts()": {
        "returns": {
          "stake": "amount of tokens that can be staked",
          "unstake": "amount of tokens that must be unstaked to add liquidity",
          "withdraw": "amount of tokens that can be withdrawn to add liquidity"
        }
      },
      "cancelHire(address)": {
        "params": {
          "workerAddress": "address of the worker node"
        }
      },
      "getWithdrawBalance()": {
        "details": "there is no way to know the exact time in the future the requested tokens will be available",
        "returns": {
          "_0": "the amount of tokens that can be immediately withdrawn by the calling user"
        }
      },
      "hire(address)": {
        "params": {
          "workerAddress": "address of the worker"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "produceBlock(uint256)": {
        "returns": {
          "_0": "true when everything went fine"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "retire(address)": {
        "details": "this also removes all authorizations in place",
        "params": {
          "workerAddress": "address of the worker to be retired"
        }
      },
      "stake(uint256)": {
        "params": {
          "_amount": "amount of tokens to convert from user's balance"
        }
      },
      "withdraw(uint256)": {
        "details": "this will transfer all free tokens for the calling user"
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_2392": {
          "entryPoint": null,
          "id": 2392,
          "parameterSlots": 5,
          "returnSlots": 0
        },
        "@_2501": {
          "entryPoint": null,
          "id": 2501,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_2595": {
          "entryPoint": null,
          "id": 2595,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_2734": {
          "entryPoint": null,
          "id": 2734,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_2934": {
          "entryPoint": null,
          "id": 2934,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@_3277": {
          "entryPoint": null,
          "id": 3277,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_msgSender_1162": {
          "entryPoint": null,
          "id": 1162,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_pause_1111": {
          "entryPoint": 521,
          "id": 1111,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@paused_1072": {
          "entryPoint": null,
          "id": 1072,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "abi_decode_address_fromMemory": {
          "entryPoint": 676,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256_fromMemory": {
          "entryPoint": 705,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 5
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:2094:42",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:42",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:117:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "84:22:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "99:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "93:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:13:42"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "84:5:42"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "169:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "178:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "181:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "171:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "171:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "171:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "128:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "139:5:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "154:3:42",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "159:1:42",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "150:11:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "163:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:19:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "135:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "135:31:42"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "125:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "125:42:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "118:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:50:42"
                      },
                      "nodeType": "YulIf",
                      "src": "115:70:42"
                    }
                  ]
                },
                "name": "abi_decode_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "53:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "64:5:42",
                    "type": ""
                  }
                ],
                "src": "14:177:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "345:377:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "392:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "401:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "404:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "394:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "394:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "394:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "366:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "375:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "362:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "362:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "387:3:42",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "358:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "358:33:42"
                      },
                      "nodeType": "YulIf",
                      "src": "355:53:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "417:50:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "457:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "427:29:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "427:40:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "417:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "476:59:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "520:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "531:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "516:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "516:18:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "486:29:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "486:49:42"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "476:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "544:59:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "588:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "599:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "584:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "584:18:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "554:29:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "554:49:42"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "544:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "612:59:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "656:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "667:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "652:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "652:18:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "622:29:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "622:49:42"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "612:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "680:36:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "700:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "711:3:42",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "696:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "696:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "690:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "690:26:42"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "680:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "279:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "290:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "302:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "310:6:42",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "318:6:42",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "326:6:42",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "334:6:42",
                    "type": ""
                  }
                ],
                "src": "196:526:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "828:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "838:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "850:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "861:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "846:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "846:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "838:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "880:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "895:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "911:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "916:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "907:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "907:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "920:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "903:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "903:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "891:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "891:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "873:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "873:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "873:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "797:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "808:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "819:4:42",
                    "type": ""
                  }
                ],
                "src": "727:203:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1109:223:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1126:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1137:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1119:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1119:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1119:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1160:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1171:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1156:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1156:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1176:2:42",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1149:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1149:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1149:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1199:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1210:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1195:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1195:18:42"
                          },
                          {
                            "hexValue": "706172616d657465722063616e206e6f74206265207a65726f20616464726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1215:34:42",
                            "type": "",
                            "value": "parameter can not be zero addres"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1188:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1188:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1188:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1270:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1281:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1266:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1266:18:42"
                          },
                          {
                            "hexValue": "73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1286:3:42",
                            "type": "",
                            "value": "s"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1259:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1259:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1259:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1299:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1322:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1307:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1307:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1299:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1086:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1100:4:42",
                    "type": ""
                  }
                ],
                "src": "935:397:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1511:166:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1528:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1539:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1521:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1521:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1521:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1562:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1573:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1558:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1558:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1578:2:42",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1551:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1551:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1601:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1612:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1597:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1597:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1617:18:42",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1590:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1590:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1590:46:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1645:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1657:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1668:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1653:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1653:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1645:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1488:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1502:4:42",
                    "type": ""
                  }
                ],
                "src": "1337:340:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1856:236:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1873:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1884:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1866:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1866:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1866:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1907:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1918:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1903:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1903:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1923:2:42",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1896:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1896:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1896:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1946:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1957:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1942:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1942:18:42"
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1962:34:42",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1935:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1935:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1935:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2017:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2028:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2013:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2013:18:42"
                          },
                          {
                            "hexValue": "647920696e697469616c697a6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2033:16:42",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2006:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2006:44:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2006:44:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2059:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2071:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2082:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2067:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2059:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1833:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1847:4:42",
                    "type": ""
                  }
                ],
                "src": "1682:410:42"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"parameter can not be zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n}",
          "id": 42,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2E85 CODESIZE SUB DUP1 PUSH3 0x2E85 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x2C1 JUMP JUMPDEST DUP3 DUP6 DUP3 DUP8 DUP8 DUP10 DUP8 PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH3 0x5B JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH3 0xC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2E65 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH3 0x154 PUSH3 0x209 JUMP JUMPDEST DUP1 ISZERO PUSH3 0x167 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP2 DUP3 SHL DUP2 AND PUSH1 0xA0 MSTORE SWAP3 DUP2 SHL DUP4 AND PUSH1 0xC0 MSTORE SWAP1 DUP2 SHL DUP3 AND PUSH1 0xE0 MSTORE SWAP3 SWAP1 SWAP3 SHL SWAP1 SWAP2 AND PUSH2 0x100 MSTORE PUSH2 0x120 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x1EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x2E65 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xBB JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH2 0x140 MSTORE POP PUSH3 0x328 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x251 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xBB JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH3 0x287 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x2E5 DUP7 PUSH3 0x2A4 JUMP JUMPDEST SWAP5 POP PUSH3 0x2F5 PUSH1 0x20 DUP8 ADD PUSH3 0x2A4 JUMP JUMPDEST SWAP4 POP PUSH3 0x305 PUSH1 0x40 DUP8 ADD PUSH3 0x2A4 JUMP JUMPDEST SWAP3 POP PUSH3 0x315 PUSH1 0x60 DUP8 ADD PUSH3 0x2A4 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH1 0x60 SHR PUSH2 0x2A44 PUSH3 0x421 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xDA2 ADD MSTORE DUP2 DUP2 PUSH2 0xE2D ADD MSTORE DUP2 DUP2 PUSH2 0xE91 ADD MSTORE DUP2 DUP2 PUSH2 0x1243 ADD MSTORE DUP2 DUP2 PUSH2 0x1AB8 ADD MSTORE DUP2 DUP2 PUSH2 0x1EB7 ADD MSTORE DUP2 DUP2 PUSH2 0x1F3C ADD MSTORE PUSH2 0x2392 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x290 ADD MSTORE DUP2 DUP2 PUSH2 0x1891 ADD MSTORE PUSH2 0x1C5C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x895 ADD MSTORE DUP2 DUP2 PUSH2 0xF65 ADD MSTORE PUSH2 0x1B94 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xB74 ADD MSTORE DUP2 DUP2 PUSH2 0xC50 ADD MSTORE DUP2 DUP2 PUSH2 0xCEA ADD MSTORE DUP2 DUP2 PUSH2 0x105D ADD MSTORE DUP2 DUP2 PUSH2 0x10DE ADD MSTORE DUP2 DUP2 PUSH2 0x115F ADD MSTORE PUSH2 0x2106 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xAD6 ADD MSTORE PUSH2 0x2136 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x3CB ADD MSTORE PUSH2 0x165A ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x306 ADD MSTORE PUSH2 0x1D2F ADD MSTORE PUSH2 0x2A44 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC56551B6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xD9D6BD86 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA5A6CD0B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA5A6CD0B EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xB64B3BED EQ PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x9E6371BA EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xA2E62045 EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x555D8EBB GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6FF46A6C GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6FF46A6C EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x710FE6F8 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x64FFC3F4 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x6BEAEEAE EQ PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1F9 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x96F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x267D JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0xD8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0xF32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0xFF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x102D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x11C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x328 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x1A6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x1AE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x1C96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9C SLOAD PUSH2 0x328 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F1 JUMP JUMPDEST PUSH2 0x1CCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9A SLOAD PUSH2 0x328 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x5D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x1E6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9D SLOAD PUSH2 0x328 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x1F71 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E76616C696420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x756E74206F6620736861726573 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7420736861726573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x731 DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x777 SWAP1 DUP5 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F2062616C616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x746F207769746864726177 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0x9A1 PUSH2 0x1F7A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9BC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xA02 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xA0A PUSH2 0x2088 JUMP JUMPDEST PUSH2 0xA3D DUP4 DUP4 PUSH1 0x9D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9A DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA45 PUSH2 0x20EF JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x9C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA6E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA89 DUP3 PUSH2 0x2212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x97 SLOAD PUSH2 0xAAA PUSH1 0x98 SLOAD DUP6 PUSH2 0x2246 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x99 SLOAD DUP2 GT ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1066F989 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x419BE624 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC0D JUMPI PUSH1 0x99 SLOAD PUSH2 0xC0A SWAP1 DUP4 PUSH2 0x29B6 JUMP JUMPDEST SWAP5 POP JUMPDEST POP PUSH2 0xD87 JUMP JUMPDEST DUP1 PUSH1 0x99 SLOAD GT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x0 DUP2 PUSH1 0x99 SLOAD PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 LT ISZERO PUSH2 0xD7A JUMPI DUP2 SWAP5 POP JUMPDEST POP PUSH2 0xD84 JUMP JUMPDEST DUP2 SWAP5 POP JUMPDEST POP POP JUMPDEST POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B789B7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 POP SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFEF JUMPI DUP1 PUSH2 0xFF1 JUMP JUMPDEST DUP2 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0x9A1 PUSH1 0x0 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x103A PUSH2 0xAB0 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x534A7E1D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA694FC3A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 ISZERO PUSH2 0x1143 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C2FBCF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E17DE78 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 ISZERO PUSH2 0xA6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0x9A1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1224 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4F31B8DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x9E6371BA SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x129C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2686E29D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2686E29D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1326 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134A SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2F DUP2 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x85425F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x85425F4F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x139E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8AEC8542 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1427 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x144B SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0xA5A6CD0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA5A6CD0B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14CA SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x152F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A206661696C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x746F2070726F6475636520626C6F636B PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x9D SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C7F22B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1FC8AD4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x157B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B3 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x162D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A20636F6D6D697373 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696F6E2069732067726561746572207468616E20626C6F636B20726577617264 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1639 DUP3 DUP5 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x164D SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 ISZERO PUSH2 0x1784 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1699 PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1719 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x1784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A206661696C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3A37903A3930B739B332B91031B7B6B6B4B9B9B4B7B7 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xBB9AC692E0E3001A628F86A894F03DA4CED5DF81886FEC577036664ED70A59CB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x285E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x1818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x290B JUMP JUMPDEST DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E7320617661696C61626C6520666F72207374616B696E6700000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x18BF SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696D6520686173207061737365642073696E6365206C617374206465706F73 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x1A5D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194A DUP4 PUSH2 0x1C96 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x19BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A207374616B65206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E6F75676820746F20656D69742031207368617265 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x19E7 SWAP1 DUP5 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A00 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A19 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A32 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP2 ADD PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB64B3BED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xB64B3BED SWAP1 PUSH1 0x24 ADD PUSH2 0x126E JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1B2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x290B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1B4D SWAP1 DUP5 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x99 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1B6D SWAP1 DUP5 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C18 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2810 JUMP JUMPDEST CALLER PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP4 PUSH2 0x1C81 PUSH32 0x0 TIMESTAMP PUSH2 0x295D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x963 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1CAC JUMPI PUSH2 0xA89 DUP3 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x98 SLOAD PUSH2 0x1CC7 PUSH1 0x97 SLOAD DUP6 PUSH2 0x2421 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x91D1777781884D03A6757A803996E38DE2A42967FB37EEACA72729271025A9E2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB1 SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC47F0027 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC47F0027 SWAP1 PUSH2 0x1DE0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E32 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST POP PUSH32 0x6AAA0865532D48A9A0F63CC91DF7FF2AB538C896665C864AE02D0A1E7F81CF65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E62 SWAP2 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH2 0x126E JUMP JUMPDEST PUSH2 0xF2F DUP2 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x1FC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2026 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2042 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2064 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x206C PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2074 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x20A1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x20BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x20DF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x20E7 PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2074 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x217A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x218E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21B2 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F20617070726F7665204354534920666F72207374616B69 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1B99C818DBDB9D1C9858DD PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2224 PUSH1 0x2 PUSH4 0x3B9ACA00 PUSH2 0x2975 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 PUSH2 0x2235 DUP5 DUP4 PUSH2 0x295D JUMP JUMPDEST PUSH2 0x223F SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x225F DUP4 DUP6 PUSH2 0x2997 JUMP JUMPDEST PUSH2 0x2276 PUSH1 0x2 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x2975 JUMP JUMPDEST PUSH2 0x2235 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x228E PUSH1 0x2 DUP5 PUSH2 0x2975 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x22A7 PUSH12 0x33B2E3C9FD0803CE8000000 DUP7 PUSH2 0x2997 JUMP JUMPDEST PUSH2 0x22B1 SWAP1 DUP4 PUSH2 0x295D JUMP JUMPDEST PUSH2 0x22BB SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1FF0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x2BEF4595 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA89 PUSH4 0x3B9ACA00 DUP4 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2436 DUP4 DUP6 PUSH2 0x2997 JUMP JUMPDEST PUSH2 0x2276 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2457 PUSH1 0x2 DUP5 PUSH2 0x2975 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x22A7 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2496 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x24FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH2 0xF2F DUP2 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x251D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2074 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2587 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x25A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x25C5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x25FC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x263A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2074 CALLER PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x223F DUP2 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x223F DUP2 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x269B DUP2 PUSH2 0x29F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x26AB DUP2 PUSH2 0x29F9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x223F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x271B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x272F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2741 PUSH2 0x29E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2769 JUMPI PUSH2 0x2769 PUSH2 0x29E3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27E8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x27CC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x27FA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206661696C656420746F2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x72616E7366657220746F6B656E73 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20616D6F756E74206D757374 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x2062652067726561746572207468616E203 PUSH1 0x74 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2970 JUMPI PUSH2 0x2970 PUSH2 0x29CD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2992 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x29B1 PUSH2 0x29CD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x29C8 JUMPI PUSH2 0x29C8 PUSH2 0x29CD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY MSTORE8 0x5D SWAP6 0xC7 SWAP1 0xEC PUSH9 0xBCF07E0F09FA1DE8D9 0xAC SWAP4 0xB9 CODESIZE EXTCODEHASH INVALID SDIV SWAP5 PUSH6 0x7FAA4E6D270 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER PUSH17 0x6172616D657465722063616E206E6F7420 PUSH3 0x65207A PUSH6 0x726F20616464 PUSH19 0x65730000000000000000000000000000000000 ",
      "sourceMap": "909:1311:21:-:0;;;1120:375;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1473:14;1424:5;1431:10;1379:5;1386:8;1341:5;1303:4;1409:13:9;;;;;;;;;;;:30;;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;1884:2:42;1401:89:9;;;1866:21:42;1923:2;1903:18;;;1896:30;1962:34;1942:18;;;1935:62;-1:-1:-1;;;2013:18:42;;;2006:44;2067:19;;1401:89:9;;;;;;;;;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1547:98;-1:-1:-1;;;;;1304:18:22;::::1;1296:64;;;::::0;-1:-1:-1;;;1296:64:22;;1137:2:42;1296:64:22::1;::::0;::::1;1119:21:42::0;1176:2;1156:18;;;1149:30;-1:-1:-1;;;;;;;;;;;1195:18:42;;;1188:62;-1:-1:-1;;;1266:18:42;;;1259:31;1307:19;;1296:64:22::1;935:397:42::0;1296:64:22::1;-1:-1:-1::0;;;;;;1370:15:22::1;::::0;;;;::::1;::::0;1463:8:::1;:6;:8::i;:::-;1671:14:9::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:9;;;1667:66;-1:-1:-1;;;;;;;;1075:20:23;;;;;;;;1335::24;;;;;;;1365:28;;;;;;;1129:20:25;;;;;;;;;1159;;-1:-1:-1;;;;;1040:28:26;;1019:108;;;;-1:-1:-1;;;1019:108:26;;1137:2:42;1019:108:26;;;1119:21:42;1176:2;1156:18;;;1149:30;-1:-1:-1;;;;;;;;;;;1195:18:42;;;1188:62;-1:-1:-1;;;1266:18:42;;;1259:31;1307:19;;1019:108:26;935:397:42;1019:108:26;1137:57;;-1:-1:-1;;;;;;1137:57:26;;;-1:-1:-1;909:1311:21;;-1:-1:-1;;;;909:1311:21;2075:115:10;1380:7;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;1539:2:42;1615:38:10;;;1521:21:42;1578:2;1558:18;;;1551:30;-1:-1:-1;;;1597:18:42;;;1590:46;1653:18;;1615:38:10;1337:340:42;1615:38:10;2134:7:::1;:14:::0;;-1:-1:-1;;2134:14:10::1;2144:4;2134:14;::::0;;2163:20:::1;2170:12;902:10:11::0;;823:96;2170:12:10::1;2163:20;::::0;-1:-1:-1;;;;;891:32:42;;;873:51;;861:2;846:18;2163:20:10::1;;;;;;;2075:115::o:0;14:177:42:-;93:13;;-1:-1:-1;;;;;135:31:42;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:526::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:53;;;404:1;401;394:12;355:53;427:40;457:9;427:40;:::i;:::-;417:50;;486:49;531:2;520:9;516:18;486:49;:::i;:::-;476:59;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;622:49;667:2;656:9;652:18;622:49;:::i;:::-;612:59;;711:3;700:9;696:19;690:26;680:36;;196:526;;;;;;;;:::o;1682:410::-;909:1311:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_3281": {
          "entryPoint": null,
          "id": 3281,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__Context_init_unchained_1153": {
          "entryPoint": 9476,
          "id": 1153,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__Ownable_init_878": {
          "entryPoint": 8328,
          "id": 878,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__Ownable_init_unchained_889": {
          "entryPoint": 9699,
          "id": 889,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__Pausable_init_1053": {
          "entryPoint": 8205,
          "id": 1053,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__Pausable_init_unchained_1063": {
          "entryPoint": 9582,
          "id": 1063,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__StakingPoolManagementImpl_init_2512": {
          "entryPoint": null,
          "id": 2512,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__StakingPoolProducer_init_2615": {
          "entryPoint": null,
          "id": 2615,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@__StakingPoolStaking_init_2754": {
          "entryPoint": 8431,
          "id": 2754,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@__StakingPoolWorkerImpl_update_3303": {
          "entryPoint": 9069,
          "id": 3303,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_msgSender_1162": {
          "entryPoint": null,
          "id": 1162,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_pause_1111": {
          "entryPoint": 8981,
          "id": 1111,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_setOwner_968": {
          "entryPoint": 8899,
          "id": 968,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_unpause_1127": {
          "entryPoint": 8058,
          "id": 1127,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@amountToShares_1927": {
          "entryPoint": 7318,
          "id": 1927,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@amount_1885": {
          "entryPoint": null,
          "id": 1885,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@amounts_2900": {
          "entryPoint": 2736,
          "id": 2900,
          "parameterSlots": 0,
          "returnSlots": 3
        },
        "@cancelHire_3397": {
          "entryPoint": 6767,
          "id": 3397,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@ctsi_2580": {
          "entryPoint": null,
          "id": 2580,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@deposit_2999": {
          "entryPoint": 6887,
          "id": 2999,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@ens_2471": {
          "entryPoint": null,
          "id": 2471,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@factory_2474": {
          "entryPoint": null,
          "id": 2474,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@fee_2583": {
          "entryPoint": null,
          "id": 2583,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@getWithdrawBalance_3242": {
          "entryPoint": 3890,
          "id": 3242,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@hire_3381": {
          "entryPoint": 7790,
          "id": 3381,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@initialize_2420": {
          "entryPoint": 2467,
          "id": 2420,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "@lockTime_2915": {
          "entryPoint": null,
          "id": 2915,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@owner_898": {
          "entryPoint": null,
          "id": 898,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pause_2553": {
          "entryPoint": 4552,
          "id": 2553,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@paused_1072": {
          "entryPoint": null,
          "id": 1072,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pos_1890": {
          "entryPoint": null,
          "id": 1890,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@produceBlock_2696": {
          "entryPoint": 4949,
          "id": 2696,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@ray2wad_4015": {
          "entryPoint": 8722,
          "id": 4015,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@rdiv_3994": {
          "entryPoint": 8832,
          "id": 3994,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@rebalance_2801": {
          "entryPoint": 4141,
          "id": 2801,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@renounceOwnership_926": {
          "entryPoint": 4089,
          "id": 926,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@requiredLiquidity_1887": {
          "entryPoint": null,
          "id": 1887,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@retire_3413": {
          "entryPoint": 4602,
          "id": 3413,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@rmul_3968": {
          "entryPoint": 8774,
          "id": 3968,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@selfhire_3352": {
          "entryPoint": 3469,
          "id": 3352,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@setName_2542": {
          "entryPoint": 7373,
          "id": 2542,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@sharesToAmount_1952": {
          "entryPoint": 2675,
          "id": 1952,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@shares_1883": {
          "entryPoint": null,
          "id": 1883,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@stake_3087": {
          "entryPoint": 6089,
          "id": 3087,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@transferOwnership_2453": {
          "entryPoint": 8049,
          "id": 2453,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@transferOwnership_949": {
          "entryPoint": 9324,
          "id": 949,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@unpause_2564": {
          "entryPoint": 2415,
          "id": 2564,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@unstake_3155": {
          "entryPoint": 1584,
          "id": 3155,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@update_2438": {
          "entryPoint": 4771,
          "id": 2438,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@userBalance_1902": {
          "entryPoint": null,
          "id": 1902,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@wad2ray_4027": {
          "entryPoint": 9233,
          "id": 4027,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@wdiv_3945": {
          "entryPoint": 9289,
          "id": 3945,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@withdraw_3205": {
          "entryPoint": 2006,
          "id": 3205,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@wmul_3919": {
          "entryPoint": 9249,
          "id": 3919,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 9795,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 9824,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_payable": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_address": {
          "entryPoint": 9853,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 9910,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": 9944,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_string_memory_ptr": {
          "entryPoint": 9969,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 10146,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_Fee_$3428__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IERC20_$1530__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_StakingPoolFactory_$3504__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 10171,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_3d3a4e54b74ff146e0d60e2918e0a33df941438760dc2b1788e63abd213b5e06__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_3f13b1a7bc88cf15adb7d0b01cad27220cc7f212d6a10c2ddec25f84a5bba661__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 10256,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_53d646aee149094ac0eead6b49a57a0d245426cefc1bc14fc983e382e4766ce3__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 10334,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 10376,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8e427e8a0b548882202ad2e27f47a3fb116c2c841cdc5eb652e87b85d698ced2__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 10454,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_b19c74ecf8c740f2fb5571b26a34141796e293467ab8a6af8f31490790af114c__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c1a1d00e14f7dcedcad185589cd13b73037dedbcbd018ce541963ba3240d6eb6__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 10507,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_ca764e689c84842fa4bc8a0dbe47866fb2fd0869cf89f86e0486201c6e1e4056__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 10589,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 10613,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 10647,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 10678,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 10701,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 10723,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_address": {
          "entryPoint": 10745,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:15527:42",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:42",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:177:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "94:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "155:36:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "168:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "159:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "225:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "200:24:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "200:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "200:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "240:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "250:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "240:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:42",
                    "type": ""
                  }
                ],
                "src": "14:247:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "347:170:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "393:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "402:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "405:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "395:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "395:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "395:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "368:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "377:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "364:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "364:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "389:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "357:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "418:29:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "437:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "431:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "431:16:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "422:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "481:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "456:24:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "456:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "496:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "506:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "496:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "313:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "324:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "336:6:42",
                    "type": ""
                  }
                ],
                "src": "266:251:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "600:177:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "646:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "655:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "658:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "648:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "648:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "648:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "621:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "630:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "617:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "617:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "642:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "613:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "613:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "610:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "671:36:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "697:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "684:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:23:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "675:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "741:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "716:24:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "716:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "716:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "756:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "766:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "756:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_payable",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "566:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "577:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "589:6:42",
                    "type": ""
                  }
                ],
                "src": "522:255:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "869:301:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "915:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "924:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "927:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "917:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "917:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "917:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "890:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "899:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "886:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "886:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "911:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "879:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "940:36:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "953:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:23:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "944:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1010:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "985:24:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "985:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "985:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1025:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1035:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1025:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1049:47:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1081:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1092:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1077:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1077:18:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1064:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:32:42"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "1053:7:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "1130:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "1105:24:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1105:33:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1105:33:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1147:17:42",
                      "value": {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1157:7:42"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1147:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "827:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "838:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "850:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "858:6:42",
                    "type": ""
                  }
                ],
                "src": "782:388:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1253:199:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1299:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1308:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1311:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1301:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1301:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1301:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1274:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1283:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1270:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1270:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1295:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1266:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1266:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1263:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1324:29:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1343:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1337:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1337:16:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1328:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1406:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1415:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1418:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1408:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1408:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1408:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1375:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1396:5:42"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1389:6:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1389:13:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1382:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1382:21:42"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1372:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1372:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1365:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:40:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1362:60:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1431:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1441:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1431:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1219:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1230:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1242:6:42",
                    "type": ""
                  }
                ],
                "src": "1175:277:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1538:103:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1584:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1593:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1596:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1586:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1586:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1586:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1559:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1568:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1555:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1555:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1580:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1551:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1548:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1609:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1625:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1619:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1619:16:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1609:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1504:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1515:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1527:6:42",
                    "type": ""
                  }
                ],
                "src": "1457:184:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1726:842:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1772:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1781:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1784:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1774:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1774:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1774:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1747:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1756:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1743:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1743:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1768:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1739:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1739:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1736:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1797:37:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1824:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1811:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1811:23:42"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1801:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1843:28:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1853:18:42",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1847:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1898:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1907:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1910:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1900:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1900:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1900:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1886:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1894:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1883:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1883:14:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1880:34:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1923:32:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1937:9:42"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1948:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1933:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1933:22:42"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "1927:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2003:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2012:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2015:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2005:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2005:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2005:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1982:2:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1986:4:42",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1978:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1978:13:42"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1993:7:42"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1974:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1974:27:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1967:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:35:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1964:55:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2028:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "2051:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2038:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2038:16:42"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "2032:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2077:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2079:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2079:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2079:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2069:2:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2073:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2066:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2066:10:42"
                      },
                      "nodeType": "YulIf",
                      "src": "2063:36:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2108:17:42",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2122:2:42",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:7:42"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "2112:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2134:23:42",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2154:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2148:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2148:9:42"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "2138:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2166:71:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2188:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "2212:2:42"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2216:4:42",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2208:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2208:13:42"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "2223:2:42"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2204:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2204:22:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2228:2:42",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2200:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2200:31:42"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2233:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2196:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2196:40:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2184:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2184:53:42"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "2170:10:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2296:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "2298:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2298:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2298:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2255:10:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2267:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "2252:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2252:18:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "2275:10:42"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2287:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2272:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2272:22:42"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2249:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2249:46:42"
                      },
                      "nodeType": "YulIf",
                      "src": "2246:72:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2334:2:42",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "2338:10:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2327:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2327:22:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2327:22:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2365:6:42"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2373:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2358:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2358:18:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2358:18:42"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2422:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2431:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2434:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2424:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2424:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2424:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2399:2:42"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2403:2:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2395:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2395:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2408:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2391:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2391:20:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2413:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2388:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2388:33:42"
                      },
                      "nodeType": "YulIf",
                      "src": "2385:53:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "2464:6:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2472:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2460:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2460:15:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2481:2:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2485:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2477:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2477:11:42"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2490:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "2447:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2447:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2447:46:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "2517:6:42"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2525:2:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2513:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2513:15:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2530:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2509:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2509:24:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2535:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2502:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2502:35:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2502:35:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2546:16:42",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "2556:6:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2546:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1692:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1703:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1715:6:42",
                    "type": ""
                  }
                ],
                "src": "1646:922:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2643:110:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2689:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2698:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2701:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2691:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2691:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2691:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2664:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2673:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2660:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2660:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2685:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2656:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2656:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "2653:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2714:33:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2737:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2724:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2724:23:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2714:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2609:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2620:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2632:6:42",
                    "type": ""
                  }
                ],
                "src": "2573:180:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2839:103:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2885:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2894:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2897:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2887:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2887:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2887:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2860:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2869:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2856:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2856:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2881:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2852:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2852:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "2849:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2910:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2926:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2920:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2920:16:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2910:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2805:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2816:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2828:6:42",
                    "type": ""
                  }
                ],
                "src": "2758:184:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3048:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3058:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3070:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3081:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3066:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3066:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3058:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3100:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3115:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3131:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3136:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3127:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3127:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3140:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3123:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3123:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3111:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3111:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3093:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3093:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3093:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3017:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3028:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3039:4:42",
                    "type": ""
                  }
                ],
                "src": "2947:203:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3272:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3282:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3294:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3305:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3290:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3290:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3282:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3324:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3339:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3355:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3360:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3351:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3351:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3364:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3347:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3347:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3335:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3335:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3317:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3317:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3317:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3241:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3252:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3263:4:42",
                    "type": ""
                  }
                ],
                "src": "3155:219:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3516:175:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3526:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3538:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3549:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3534:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3534:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3526:4:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3561:29:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3579:3:42",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3584:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3575:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3575:11:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3588:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3571:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3571:19:42"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3565:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3606:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3621:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3629:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3617:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3617:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3599:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3599:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3599:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3653:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3664:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3649:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3649:18:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3673:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3681:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3669:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3669:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3642:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3642:43:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3642:43:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3477:9:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3488:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3496:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3507:4:42",
                    "type": ""
                  }
                ],
                "src": "3379:312:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3825:175:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3835:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3847:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3858:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3843:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3843:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3835:4:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3870:29:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3888:3:42",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3893:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3884:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3884:11:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3897:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3880:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3880:19:42"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3874:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3915:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3930:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3938:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3926:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3926:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3908:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3908:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3908:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3962:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3973:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3958:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3958:18:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3982:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3990:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3978:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3978:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3951:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3951:43:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3951:43:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3786:9:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3797:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3805:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3816:4:42",
                    "type": ""
                  }
                ],
                "src": "3696:304:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4162:218:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4172:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4184:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4195:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4180:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4180:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4172:4:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4207:29:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4225:3:42",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4230:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "4221:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4221:11:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4234:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4217:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4217:19:42"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4211:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4252:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4267:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4275:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4263:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4263:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4245:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4245:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4245:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4299:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4310:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4295:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4295:18:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4319:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4327:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4315:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4315:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4288:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4288:43:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4288:43:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4351:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4362:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4347:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4347:18:42"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4367:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4340:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4340:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4340:34:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4115:9:42",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4126:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4134:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4142:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4153:4:42",
                    "type": ""
                  }
                ],
                "src": "4005:375:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4514:145:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4524:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4536:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4547:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4532:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4532:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4524:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4566:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4581:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4597:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4602:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "4593:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4593:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4606:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4589:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4589:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4577:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4577:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4559:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4559:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4559:51:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4630:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4641:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4626:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4626:18:42"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4646:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4619:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4619:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4619:34:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4475:9:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4486:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4494:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4505:4:42",
                    "type": ""
                  }
                ],
                "src": "4385:274:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4759:92:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4769:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4781:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4792:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4777:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4777:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4769:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4811:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4836:6:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4829:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4829:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4822:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4822:22:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4804:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4804:41:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4804:41:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4728:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4739:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4750:4:42",
                    "type": ""
                  }
                ],
                "src": "4664:187:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4957:76:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4967:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4979:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4990:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4975:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4975:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4967:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5009:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5020:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5002:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5002:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5002:25:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4926:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4937:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4948:4:42",
                    "type": ""
                  }
                ],
                "src": "4856:177:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5150:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5160:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5172:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5183:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5168:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5168:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5160:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5202:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5217:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5233:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5238:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5229:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5229:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5242:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5225:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5225:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5213:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5213:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5195:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5195:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5195:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5119:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5130:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5141:4:42",
                    "type": ""
                  }
                ],
                "src": "5038:214:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5370:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5380:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5392:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5403:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5388:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5388:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5380:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5422:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5437:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5453:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5458:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5449:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5449:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5462:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5445:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5445:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5433:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5433:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5415:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5415:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5415:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_Fee_$3428__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5339:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5350:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5361:4:42",
                    "type": ""
                  }
                ],
                "src": "5257:215:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5593:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5603:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5615:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5626:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5611:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5611:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5603:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5645:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5660:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5676:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5681:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5672:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5672:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5685:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5668:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5668:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5656:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5656:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5638:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5638:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5638:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IERC20_$1530__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5562:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5573:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5584:4:42",
                    "type": ""
                  }
                ],
                "src": "5477:218:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5812:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5822:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5834:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5845:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5830:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5830:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5822:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5864:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5879:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5895:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5900:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5891:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5891:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5904:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5887:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5887:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5875:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5875:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5857:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5857:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5857:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5781:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5792:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5803:4:42",
                    "type": ""
                  }
                ],
                "src": "5700:214:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6047:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6057:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6069:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6080:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6065:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6065:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6057:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6099:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6114:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6130:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6135:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6126:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6126:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6139:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6122:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6122:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "6110:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6110:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6092:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6092:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6092:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_StakingPoolFactory_$3504__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6016:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6027:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6038:4:42",
                    "type": ""
                  }
                ],
                "src": "5919:230:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6275:476:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6285:12:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6295:2:42",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "6289:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6313:9:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6324:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6306:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6306:21:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6336:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6356:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "6350:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6350:13:42"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "6340:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6383:9:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "6394:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6379:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6379:18:42"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6399:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6372:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6372:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6372:34:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6415:10:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6424:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "6419:1:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6484:90:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "6513:9:42"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "6524:1:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6509:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6509:17:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6528:2:42",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6505:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6505:26:42"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "6547:6:42"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "6555:1:42"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "6543:3:42"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "6543:14:42"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "6559:2:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6539:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6539:23:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "6533:5:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6533:30:42"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6498:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6498:66:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6498:66:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6445:1:42"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6448:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6442:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6442:13:42"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "6456:19:42",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "6458:15:42",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6467:1:42"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6470:2:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6463:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6463:10:42"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "6458:1:42"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "6438:3:42",
                        "statements": []
                      },
                      "src": "6434:140:42"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6608:66:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "6637:9:42"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "6648:6:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "6633:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6633:22:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6657:2:42",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6629:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6629:31:42"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6662:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6622:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6622:42:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6622:42:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6589:1:42"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6592:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6586:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6586:13:42"
                      },
                      "nodeType": "YulIf",
                      "src": "6583:91:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6683:62:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6699:9:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "6718:6:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6726:2:42",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6714:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6714:15:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6735:2:42",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "6731:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6731:7:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6710:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6710:29:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6695:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6695:45:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6742:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6691:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6691:54:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6683:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6244:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6255:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6266:4:42",
                    "type": ""
                  }
                ],
                "src": "6154:597:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6930:170:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6947:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6958:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6940:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6940:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6940:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6981:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6992:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6977:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6977:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6997:2:42",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6970:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6970:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6970:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7020:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7031:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7016:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7016:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a206e6f7420706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7036:22:42",
                            "type": "",
                            "value": "Pausable: not paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7009:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7009:50:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7009:50:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7068:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7080:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7091:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7076:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7076:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7068:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6907:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6921:4:42",
                    "type": ""
                  }
                ],
                "src": "6756:344:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7279:235:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7296:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7307:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7289:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7289:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7289:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7330:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7341:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7326:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7326:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7346:2:42",
                            "type": "",
                            "value": "45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7319:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7319:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7319:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7369:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7380:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7365:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7365:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7385:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: invalid amo"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7358:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7358:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7358:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7440:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7451:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7436:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7436:18:42"
                          },
                          {
                            "hexValue": "756e74206f6620736861726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7456:15:42",
                            "type": "",
                            "value": "unt of shares"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7429:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7429:43:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7429:43:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7481:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7493:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7504:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7489:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7489:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7481:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7256:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7270:4:42",
                    "type": ""
                  }
                ],
                "src": "7105:409:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7693:228:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7710:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7721:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7703:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7703:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7703:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7744:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7755:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7740:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7740:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7760:2:42",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7733:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7733:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7733:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7783:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7794:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7779:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7779:18:42"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7799:34:42",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7772:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7772:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7772:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7854:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7865:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7850:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7850:18:42"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7870:8:42",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7843:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7843:36:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7843:36:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7888:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7900:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7911:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7896:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7896:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7888:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7670:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7684:4:42",
                    "type": ""
                  }
                ],
                "src": "7519:402:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8100:243:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8117:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8128:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8110:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8110:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8110:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8151:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8162:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8147:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8147:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8167:2:42",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8140:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8140:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8140:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8190:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8201:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8186:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8186:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a207374616b65206e6f742065",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8206:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: stake not e"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8179:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8179:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8179:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8261:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8272:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8257:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8257:18:42"
                          },
                          {
                            "hexValue": "6e6f75676820746f20656d69742031207368617265",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8277:23:42",
                            "type": "",
                            "value": "nough to emit 1 share"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8250:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8250:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8250:51:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8310:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8322:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8333:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8318:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8318:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8310:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_3d3a4e54b74ff146e0d60e2918e0a33df941438760dc2b1788e63abd213b5e06__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8077:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8091:4:42",
                    "type": ""
                  }
                ],
                "src": "7926:417:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8522:238:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8539:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8550:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8532:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8532:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8532:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8573:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8584:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8569:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8569:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8589:2:42",
                            "type": "",
                            "value": "48"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8562:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8562:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8562:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8612:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8623:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8608:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8608:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c656420",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8628:34:42",
                            "type": "",
                            "value": "StakingPoolProducerImpl: failed "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8601:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8601:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8601:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8683:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8694:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8679:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8679:18:42"
                          },
                          {
                            "hexValue": "746f2070726f6475636520626c6f636b",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8699:18:42",
                            "type": "",
                            "value": "to produce block"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8672:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8672:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8672:46:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8727:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8739:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8750:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8735:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8735:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8727:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_3f13b1a7bc88cf15adb7d0b01cad27220cc7f212d6a10c2ddec25f84a5bba661__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8499:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8513:4:42",
                    "type": ""
                  }
                ],
                "src": "8348:412:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8939:236:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8956:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8967:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8949:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8949:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8949:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8990:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9001:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8986:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8986:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9006:2:42",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8979:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8979:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8979:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9029:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9040:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9025:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9025:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f2074",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9045:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: failed to t"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9018:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9018:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9018:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9100:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9111:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9096:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9096:18:42"
                          },
                          {
                            "hexValue": "72616e7366657220746f6b656e73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9116:16:42",
                            "type": "",
                            "value": "ransfer tokens"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9089:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9089:44:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9089:44:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9142:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9154:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9165:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9150:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9150:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9142:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8916:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8930:4:42",
                    "type": ""
                  }
                ],
                "src": "8765:410:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9354:296:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9371:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9382:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9364:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9364:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9364:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9405:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9416:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9401:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9401:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9421:2:42",
                            "type": "",
                            "value": "66"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9394:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9394:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9394:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9444:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9455:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9440:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9440:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f75676820",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9460:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: not enough "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9433:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9433:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9433:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9515:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9526:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9511:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9511:18:42"
                          },
                          {
                            "hexValue": "74696d6520686173207061737365642073696e6365206c617374206465706f73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9531:34:42",
                            "type": "",
                            "value": "time has passed since last depos"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9504:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9504:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9504:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9586:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9597:3:42",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9582:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9582:19:42"
                          },
                          {
                            "hexValue": "6974",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9603:4:42",
                            "type": "",
                            "value": "it"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9575:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9575:33:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9575:33:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9617:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9629:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9640:3:42",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9625:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9625:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9617:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_53d646aee149094ac0eead6b49a57a0d245426cefc1bc14fc983e382e4766ce3__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9331:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9345:4:42",
                    "type": ""
                  }
                ],
                "src": "9180:470:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9829:166:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9846:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9857:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9839:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9839:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9839:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9880:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9891:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9876:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9876:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9896:2:42",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9869:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9869:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9869:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9919:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9930:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9915:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9915:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9935:18:42",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9908:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9908:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9908:46:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9963:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9975:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9986:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9971:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9971:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9963:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9806:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9820:4:42",
                    "type": ""
                  }
                ],
                "src": "9655:340:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10174:233:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10191:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10202:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10184:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10184:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10184:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10225:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10236:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10221:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10221:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10241:2:42",
                            "type": "",
                            "value": "43"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10214:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10214:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10214:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10264:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10275:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10260:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10260:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e636520",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10280:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: no balance "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10253:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10253:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10253:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10335:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10346:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10331:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10331:18:42"
                          },
                          {
                            "hexValue": "746f207769746864726177",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10351:13:42",
                            "type": "",
                            "value": "to withdraw"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10324:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10324:41:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10324:41:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10374:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10386:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10397:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10382:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10382:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10374:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10151:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10165:4:42",
                    "type": ""
                  }
                ],
                "src": "10000:407:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10586:236:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10603:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10614:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10596:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10596:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10596:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10637:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10648:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10633:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10633:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10653:2:42",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10626:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10626:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10626:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10676:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10687:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10672:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10672:18:42"
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10692:34:42",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10665:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10665:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10665:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10747:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10758:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10743:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10743:18:42"
                          },
                          {
                            "hexValue": "647920696e697469616c697a6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10763:16:42",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10736:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10736:44:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10736:44:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10789:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10801:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10812:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10797:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10797:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10789:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10563:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10577:4:42",
                    "type": ""
                  }
                ],
                "src": "10412:410:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11001:254:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11018:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11029:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11011:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11011:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11011:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11052:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11063:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11048:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11048:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11068:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11041:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11041:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11041:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11091:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11102:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11087:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11087:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c50726f6475636572496d706c3a20636f6d6d697373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11107:34:42",
                            "type": "",
                            "value": "StakingPoolProducerImpl: commiss"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11080:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11080:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11080:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11162:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11173:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11158:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11158:18:42"
                          },
                          {
                            "hexValue": "696f6e2069732067726561746572207468616e20626c6f636b20726577617264",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11178:34:42",
                            "type": "",
                            "value": "ion is greater than block reward"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11151:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11151:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11151:62:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11222:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11234:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11245:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11230:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11230:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11222:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8e427e8a0b548882202ad2e27f47a3fb116c2c841cdc5eb652e87b85d698ced2__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10978:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10992:4:42",
                    "type": ""
                  }
                ],
                "src": "10827:428:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11434:182:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11451:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11462:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11444:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11444:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11444:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11485:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11496:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11481:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11481:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11501:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11474:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11474:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11474:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11524:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11535:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11520:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11520:18:42"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11540:34:42",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11513:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11513:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11513:62:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11584:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11596:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11607:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11592:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11592:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11584:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11411:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11425:4:42",
                    "type": ""
                  }
                ],
                "src": "11260:356:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11795:230:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11812:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11823:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11805:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11805:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11805:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11846:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11857:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11842:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11842:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11862:2:42",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11835:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11835:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11835:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11885:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11896:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11881:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11881:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11901:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: insufficien"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11874:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11874:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11874:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11956:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11967:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11952:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11952:18:42"
                          },
                          {
                            "hexValue": "7420736861726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11972:10:42",
                            "type": "",
                            "value": "t shares"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11945:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11945:38:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11945:38:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11992:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12004:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12015:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12000:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12000:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11992:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11772:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11786:4:42",
                    "type": ""
                  }
                ],
                "src": "11621:404:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12204:233:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12221:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12232:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12214:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12214:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12214:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12255:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12266:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12251:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12251:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12271:2:42",
                            "type": "",
                            "value": "43"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12244:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12244:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12244:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12294:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12305:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12290:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12290:18:42"
                          },
                          {
                            "hexValue": "4661696c656420746f20617070726f7665204354534920666f72207374616b69",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12310:34:42",
                            "type": "",
                            "value": "Failed to approve CTSI for staki"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12283:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12283:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12283:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12365:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12376:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12361:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12361:18:42"
                          },
                          {
                            "hexValue": "6e6720636f6e7472616374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12381:13:42",
                            "type": "",
                            "value": "ng contract"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12354:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12354:41:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12354:41:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12404:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12416:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12427:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12412:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12412:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12404:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_b19c74ecf8c740f2fb5571b26a34141796e293467ab8a6af8f31490790af114c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12181:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12195:4:42",
                    "type": ""
                  }
                ],
                "src": "12030:407:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12616:250:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12633:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12644:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12626:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12626:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12626:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12667:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12678:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12663:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12663:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12683:2:42",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12656:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12656:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12656:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12706:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12717:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12702:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12702:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f75676820",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12722:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: not enough "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12695:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12695:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12695:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12777:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12788:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12773:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12773:18:42"
                          },
                          {
                            "hexValue": "746f6b656e7320617661696c61626c6520666f72207374616b696e67",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12793:30:42",
                            "type": "",
                            "value": "tokens available for staking"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12766:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12766:58:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12766:58:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12833:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12845:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12856:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12841:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12841:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12833:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c1a1d00e14f7dcedcad185589cd13b73037dedbcbd018ce541963ba3240d6eb6__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12593:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12607:4:42",
                    "type": ""
                  }
                ],
                "src": "12442:424:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13045:240:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13062:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13073:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13055:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13055:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13055:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13096:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13107:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13092:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13092:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13112:2:42",
                            "type": "",
                            "value": "50"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13085:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13085:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13085:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13135:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13146:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13131:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13131:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d757374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13151:34:42",
                            "type": "",
                            "value": "StakingPoolUserImpl: amount must"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13124:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13124:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13124:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13206:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13217:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13202:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13202:18:42"
                          },
                          {
                            "hexValue": "2062652067726561746572207468616e2030",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13222:20:42",
                            "type": "",
                            "value": " be greater than 0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13195:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13195:48:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13195:48:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13252:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13264:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13275:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13260:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13260:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13252:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13022:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13036:4:42",
                    "type": ""
                  }
                ],
                "src": "12871:414:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13464:244:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13481:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13492:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13474:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13474:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13474:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13515:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13526:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13511:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13511:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13531:2:42",
                            "type": "",
                            "value": "54"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13504:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13504:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13504:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13554:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13565:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13550:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13550:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c656420",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13570:34:42",
                            "type": "",
                            "value": "StakingPoolProducerImpl: failed "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13543:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13543:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13543:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13625:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13636:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13621:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13621:18:42"
                          },
                          {
                            "hexValue": "746f207472616e7366657220636f6d6d697373696f6e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13641:24:42",
                            "type": "",
                            "value": "to transfer commission"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13614:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13614:52:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13614:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13675:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13687:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13698:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13683:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13683:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13675:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_ca764e689c84842fa4bc8a0dbe47866fb2fd0869cf89f86e0486201c6e1e4056__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13441:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13455:4:42",
                    "type": ""
                  }
                ],
                "src": "13290:418:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13814:76:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "13824:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13836:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13847:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13832:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13832:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13824:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13866:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13877:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13859:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13859:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13859:25:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13783:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "13794:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13805:4:42",
                    "type": ""
                  }
                ],
                "src": "13713:177:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14024:119:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "14034:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14046:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14057:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14042:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14042:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14034:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14076:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14087:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14069:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14069:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14069:25:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14114:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14125:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14110:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14110:18:42"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14130:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14103:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14103:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14103:34:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13985:9:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "13996:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "14004:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "14015:4:42",
                    "type": ""
                  }
                ],
                "src": "13895:248:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14305:162:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "14315:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14327:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14338:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14323:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14323:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14315:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14357:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14368:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14350:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14350:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14350:25:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14395:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14406:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14391:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14391:18:42"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "14411:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14384:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14384:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14384:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14438:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14449:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14434:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14434:18:42"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "14454:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14427:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14427:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14427:34:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "14258:9:42",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "14269:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "14277:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "14285:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "14296:4:42",
                    "type": ""
                  }
                ],
                "src": "14148:319:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14520:80:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14547:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "14549:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14549:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14549:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14536:1:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "14543:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "14539:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14539:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14533:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14533:13:42"
                      },
                      "nodeType": "YulIf",
                      "src": "14530:39:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14578:16:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14589:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14592:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14585:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14585:9:42"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "14578:3:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "14503:1:42",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "14506:1:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "14512:3:42",
                    "type": ""
                  }
                ],
                "src": "14472:128:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14651:171:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14682:111:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14703:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "14710:3:42",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "14715:10:42",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "14706:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14706:20:42"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "14696:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14696:31:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14696:31:42"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14747:1:42",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14750:4:42",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "14740:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14740:15:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14740:15:42"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14775:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14778:4:42",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "14768:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14768:15:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14768:15:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14671:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14664:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14664:9:42"
                      },
                      "nodeType": "YulIf",
                      "src": "14661:132:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14802:14:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14811:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14814:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "14807:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14807:9:42"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "14802:1:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "14636:1:42",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "14639:1:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "14645:1:42",
                    "type": ""
                  }
                ],
                "src": "14605:217:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14879:116:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14938:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "14940:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14940:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14940:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14910:1:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "14903:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14903:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "14896:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14896:17:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "14918:1:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14929:1:42",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "14925:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14925:6:42"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "14933:1:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "14921:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14921:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "14915:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14915:21:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14892:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14892:45:42"
                      },
                      "nodeType": "YulIf",
                      "src": "14889:71:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14969:20:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14984:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14987:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "14980:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14980:9:42"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "14969:7:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "14858:1:42",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "14861:1:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "14867:7:42",
                    "type": ""
                  }
                ],
                "src": "14827:168:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15049:76:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15071:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "15073:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15073:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15073:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "15065:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15068:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15062:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15062:8:42"
                      },
                      "nodeType": "YulIf",
                      "src": "15059:34:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15102:17:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "15114:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15117:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15110:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15110:9:42"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "15102:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "15031:1:42",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "15034:1:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "15040:4:42",
                    "type": ""
                  }
                ],
                "src": "15000:125:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15162:95:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15179:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15186:3:42",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15191:10:42",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15182:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15182:20:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15172:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15172:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15172:31:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15219:1:42",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15222:4:42",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15212:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15212:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15212:15:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15243:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15246:4:42",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "15236:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15236:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15236:15:42"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "15130:127:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15294:95:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15311:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15318:3:42",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15323:10:42",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15314:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15314:20:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15304:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15304:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15304:31:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15351:1:42",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15354:4:42",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15344:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15344:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15344:15:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15375:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15378:4:42",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "15368:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15368:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15368:15:42"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "15262:127:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15439:86:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15503:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15512:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15515:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "15505:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15505:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15505:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "15462:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "15473:5:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15488:3:42",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15493:1:42",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "15484:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15484:11:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15497:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15480:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15480:19:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "15469:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15469:31:42"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "15459:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15459:42:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15452:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15452:50:42"
                      },
                      "nodeType": "YulIf",
                      "src": "15449:70:42"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "15428:5:42",
                    "type": ""
                  }
                ],
                "src": "15394:131:42"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_Fee_$3428__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1530__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_StakingPoolFactory_$3504__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: invalid amo\")\n        mstore(add(headStart, 96), \"unt of shares\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3d3a4e54b74ff146e0d60e2918e0a33df941438760dc2b1788e63abd213b5e06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: stake not e\")\n        mstore(add(headStart, 96), \"nough to emit 1 share\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3f13b1a7bc88cf15adb7d0b01cad27220cc7f212d6a10c2ddec25f84a5bba661__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"StakingPoolProducerImpl: failed \")\n        mstore(add(headStart, 96), \"to produce block\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: failed to t\")\n        mstore(add(headStart, 96), \"ransfer tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_53d646aee149094ac0eead6b49a57a0d245426cefc1bc14fc983e382e4766ce3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: not enough \")\n        mstore(add(headStart, 96), \"time has passed since last depos\")\n        mstore(add(headStart, 128), \"it\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: no balance \")\n        mstore(add(headStart, 96), \"to withdraw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8e427e8a0b548882202ad2e27f47a3fb116c2c841cdc5eb652e87b85d698ced2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"StakingPoolProducerImpl: commiss\")\n        mstore(add(headStart, 96), \"ion is greater than block reward\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: insufficien\")\n        mstore(add(headStart, 96), \"t shares\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b19c74ecf8c740f2fb5571b26a34141796e293467ab8a6af8f31490790af114c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Failed to approve CTSI for staki\")\n        mstore(add(headStart, 96), \"ng contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c1a1d00e14f7dcedcad185589cd13b73037dedbcbd018ce541963ba3240d6eb6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: not enough \")\n        mstore(add(headStart, 96), \"tokens available for staking\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: amount must\")\n        mstore(add(headStart, 96), \" be greater than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ca764e689c84842fa4bc8a0dbe47866fb2fd0869cf89f86e0486201c6e1e4056__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"StakingPoolProducerImpl: failed \")\n        mstore(add(headStart, 96), \"to transfer commission\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
          "id": 42,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "2471": [
          {
            "length": 32,
            "start": 774
          },
          {
            "length": 32,
            "start": 7471
          }
        ],
        "2580": [
          {
            "length": 32,
            "start": 971
          },
          {
            "length": 32,
            "start": 5722
          }
        ],
        "2711": [
          {
            "length": 32,
            "start": 2774
          },
          {
            "length": 32,
            "start": 8502
          }
        ],
        "2714": [
          {
            "length": 32,
            "start": 2932
          },
          {
            "length": 32,
            "start": 3152
          },
          {
            "length": 32,
            "start": 3306
          },
          {
            "length": 32,
            "start": 4189
          },
          {
            "length": 32,
            "start": 4318
          },
          {
            "length": 32,
            "start": 4447
          },
          {
            "length": 32,
            "start": 8454
          }
        ],
        "2913": [
          {
            "length": 32,
            "start": 2197
          },
          {
            "length": 32,
            "start": 3941
          },
          {
            "length": 32,
            "start": 7060
          }
        ],
        "2915": [
          {
            "length": 32,
            "start": 656
          },
          {
            "length": 32,
            "start": 6289
          },
          {
            "length": 32,
            "start": 7260
          }
        ],
        "3255": [
          {
            "length": 32,
            "start": 3490
          },
          {
            "length": 32,
            "start": 3629
          },
          {
            "length": 32,
            "start": 3729
          },
          {
            "length": 32,
            "start": 4675
          },
          {
            "length": 32,
            "start": 6840
          },
          {
            "length": 32,
            "start": 7863
          },
          {
            "length": 32,
            "start": 7996
          },
          {
            "length": 32,
            "start": 9106
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1F2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC56551B6 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xD9D6BD86 EQ PUSH2 0x5C7 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x5DA JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x5FA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x610 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x547 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x587 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA5A6CD0B GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xA5A6CD0B EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xB64B3BED EQ PUSH2 0x507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x9E6371BA EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0xA2E62045 EQ PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x555D8EBB GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x6FF46A6C GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x6FF46A6C EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x710FE6F8 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41F JUMPI DUP1 PUSH4 0x7D7C2A1C EQ PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0x64FFC3F4 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0x6BEAEEAE EQ PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x2B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1F9 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x630 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x300 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x96F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x267D JUMP JUMPDEST PUSH2 0x9A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x251 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x328 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0xAB0 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0xD8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0xF32 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0xFF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x440 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x102D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x11C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x328 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x497 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x11FA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x12A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A9 PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x1355 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x17C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x522 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x1A6F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x533 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x542 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x1AE7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH2 0x562 CALLDATASIZE PUSH1 0x4 PUSH2 0x27A2 JUMP JUMPDEST PUSH2 0x1C96 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x573 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9C SLOAD PUSH2 0x328 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x593 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x5A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F1 JUMP JUMPDEST PUSH2 0x1CCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9A SLOAD PUSH2 0x328 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D2 PUSH2 0x5D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x1E6E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9D SLOAD PUSH2 0x328 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x270 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D2 PUSH2 0x62B CALLDATASIZE PUSH1 0x4 PUSH2 0x2643 JUMP JUMPDEST PUSH2 0x1F71 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x6A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E76616C696420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x756E74206F6620736861726573 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7420736861726573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x720 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x731 DUP4 PUSH2 0xA73 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x745 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x777 SWAP1 DUP5 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x790 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F2062616C616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x746F207769746864726177 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x874 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x919 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x935 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2810 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x999 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0x9A1 PUSH2 0x1F7A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x9BC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0xA02 PUSH2 0x200D JUMP JUMPDEST PUSH2 0xA0A PUSH2 0x2088 JUMP JUMPDEST PUSH2 0xA3D DUP4 DUP4 PUSH1 0x9D DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x9A DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xA45 PUSH2 0x20EF JUMP JUMPDEST PUSH2 0xA5C PUSH1 0x9C DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA6E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xA8F JUMPI PUSH2 0xA89 DUP3 PUSH2 0x2212 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x97 SLOAD PUSH2 0xAAA PUSH1 0x98 SLOAD DUP6 PUSH2 0x2246 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB50 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x99 SLOAD DUP2 GT ISZERO PUSH2 0xC13 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1066F989 PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x419BE624 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xC0D JUMPI PUSH1 0x99 SLOAD PUSH2 0xC0A SWAP1 DUP4 PUSH2 0x29B6 JUMP JUMPDEST SWAP5 POP JUMPDEST POP PUSH2 0xD87 JUMP JUMPDEST DUP1 PUSH1 0x99 SLOAD GT ISZERO PUSH2 0xD87 JUMPI PUSH1 0x0 DUP2 PUSH1 0x99 SLOAD PUSH2 0xC2D SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8E9F04B5 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x8E9F04B5 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCA SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x67BA9B91 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x67BA9B91 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD48 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6C SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP TIMESTAMP DUP2 LT ISZERO PUSH2 0xD7A JUMPI DUP2 SWAP5 POP JUMPDEST POP PUSH2 0xD84 JUMP JUMPDEST DUP2 SWAP5 POP JUMPDEST POP POP JUMPDEST POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE03 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9B789B7E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 POP SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xF2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFDF SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xFEF JUMPI DUP1 PUSH2 0xFF1 JUMP JUMPDEST DUP2 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1023 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0x9A1 PUSH1 0x0 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x103A PUSH2 0xAB0 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x534A7E1D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA694FC3A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x10BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 ISZERO PUSH2 0x1143 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5C2FBCF PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E17DE78 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x112A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x113E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP1 ISZERO PUSH2 0xA6E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH2 0x9A1 PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1224 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x4F31B8DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x9E6371BA SWAP1 PUSH1 0x24 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x129C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x9C SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2686E29D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x2686E29D SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1326 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134A SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST SWAP1 POP PUSH2 0xF2F DUP2 PUSH2 0x236D JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x85425F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x85425F4F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x139E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x13B2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D6 SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8AEC8542 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1413 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1427 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x144B SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0xA5A6CD0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA5A6CD0B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14CA SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x152F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A206661696C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x746F2070726F6475636520626C6F636B PUSH1 0x80 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x9D SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C7F22B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1FC8AD4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x157B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x158F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B3 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x162D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A20636F6D6D697373 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696F6E2069732067726561746572207468616E20626C6F636B20726577617264 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1639 DUP3 DUP5 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x164D SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 ISZERO PUSH2 0x1784 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x1699 PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1719 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x1784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A206661696C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3A37903A3930B739B332B91031B7B6B6B4B9B9B4B7B7 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xBB9AC692E0E3001A628F86A894F03DA4CED5DF81886FEC577036664ED70A59CB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x285E JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x1818 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x290B JUMP JUMPDEST DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x188F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E7320617661696C61626C6520666F72207374616B696E6700000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x18BF SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x193F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696D6520686173207061737365642073696E6365206C617374206465706F73 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x1A5D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194A DUP4 PUSH2 0x1C96 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x19BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A207374616B65206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E6F75676820746F20656D69742031207368617265 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x19E7 SWAP1 DUP5 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A00 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A19 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A32 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP2 ADD PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB64B3BED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xB64B3BED SWAP1 PUSH1 0x24 ADD PUSH2 0x126E JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1B2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x290B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9B PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0x1B4D SWAP1 DUP5 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x99 DUP1 SLOAD DUP4 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1B6D SWAP1 DUP5 SWAP1 PUSH2 0x295D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BF4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C18 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x1C34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2810 JUMP JUMPDEST CALLER PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP4 PUSH2 0x1C81 PUSH32 0x0 TIMESTAMP PUSH2 0x295D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x963 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1CAC JUMPI PUSH2 0xA89 DUP3 PUSH2 0x2411 JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x98 SLOAD PUSH2 0x1CC7 PUSH1 0x97 SLOAD DUP6 PUSH2 0x2421 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x2449 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x91D1777781884D03A6757A803996E38DE2A42967FB37EEACA72729271025A9E2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB1 SWAP2 SWAP1 PUSH2 0x2660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC47F0027 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC47F0027 SWAP1 PUSH2 0x1DE0 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E0E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E32 SWAP2 SWAP1 PUSH2 0x26D8 JUMP JUMPDEST POP PUSH32 0x6AAA0865532D48A9A0F63CC91DF7FF2AB538C896665C864AE02D0A1E7F81CF65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1E62 SWAP2 SWAP1 PUSH2 0x27BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E98 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6CEB5EC3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xD9D6BD86 SWAP1 CALLVALUE SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9A SLOAD PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP4 POP PUSH4 0x2BEF4595 SWAP3 POP PUSH1 0x44 ADD SWAP1 POP PUSH2 0x126E JUMP JUMPDEST PUSH2 0xF2F DUP2 PUSH2 0x246C JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x1FC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2026 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2042 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2064 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x206C PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2074 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x20A1 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x20BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x20DF JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x20E7 PUSH2 0x2504 JUMP JUMPDEST PUSH2 0x2074 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x217A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x218E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21B2 SWAP2 SWAP1 PUSH2 0x26B6 JUMP JUMPDEST PUSH2 0x9A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4661696C656420746F20617070726F7665204354534920666F72207374616B69 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1B99C818DBDB9D1C9858DD PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2224 PUSH1 0x2 PUSH4 0x3B9ACA00 PUSH2 0x2975 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 PUSH2 0x2235 DUP5 DUP4 PUSH2 0x295D JUMP JUMPDEST PUSH2 0x223F SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x225F DUP4 DUP6 PUSH2 0x2997 JUMP JUMPDEST PUSH2 0x2276 PUSH1 0x2 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x2975 JUMP JUMPDEST PUSH2 0x2235 SWAP2 SWAP1 PUSH2 0x295D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x228E PUSH1 0x2 DUP5 PUSH2 0x2975 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x22A7 PUSH12 0x33B2E3C9FD0803CE8000000 DUP7 PUSH2 0x2997 JUMP JUMPDEST PUSH2 0x22B1 SWAP1 DUP4 PUSH2 0x295D JUMP JUMPDEST PUSH2 0x22BB SWAP2 SWAP1 PUSH2 0x2975 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x285E JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1FF0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2BEF4595 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x2BEF4595 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x9A DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA89 PUSH4 0x3B9ACA00 DUP4 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2436 DUP4 DUP6 PUSH2 0x2997 JUMP JUMPDEST PUSH2 0x2276 PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2975 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2457 PUSH1 0x2 DUP5 PUSH2 0x2975 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x22A7 PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x2997 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2496 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x28D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x24FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x69E JUMP JUMPDEST PUSH2 0xF2F DUP2 PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x251D JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2539 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2074 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x2587 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x25A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x25C5 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 ISZERO PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x25FC JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2618 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x69E SWAP1 PUSH2 0x2888 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x263A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x2074 CALLER PUSH2 0x22C3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x223F DUP2 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x223F DUP2 PUSH2 0x29F9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2690 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x269B DUP2 PUSH2 0x29F9 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x26AB DUP2 PUSH2 0x29F9 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x223F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x271B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x272F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2741 JUMPI PUSH2 0x2741 PUSH2 0x29E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2769 JUMPI PUSH2 0x2769 PUSH2 0x29E3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2782 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27E8 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x27CC JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x27FA JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206661696C656420746F2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x72616E7366657220746F6B656E73 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20616D6F756E74206D757374 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x2062652067726561746572207468616E203 PUSH1 0x74 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2970 JUMPI PUSH2 0x2970 PUSH2 0x29CD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2992 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29B1 JUMPI PUSH2 0x29B1 PUSH2 0x29CD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x29C8 JUMPI PUSH2 0x29C8 PUSH2 0x29CD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF2F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY MSTORE8 0x5D SWAP6 0xC7 SWAP1 0xEC PUSH9 0xBCF07E0F09FA1DE8D9 0xAC SWAP4 0xB9 CODESIZE EXTCODEHASH INVALID SDIV SWAP5 PUSH6 0x7FAA4E6D270 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
      "sourceMap": "909:1311:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1587:50:19;;;;;;;;;;-1:-1:-1;1587:50:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14350:25:42;;;14406:2;14391:18;;14384:34;;;;14434:18;;;14427:34;14338:2;14323:18;1587:50:19;;;;;;;;1085:21;;;;;;;;;;;;;;;;;;;5002:25:42;;;4990:2;4975:18;1085:21:19;4856:177:42;881:33:25;;;;;;;;;;;;;;;4139:964;;;;;;;;;;-1:-1:-1;4139:964:25;;;;;:::i;:::-;;:::i;:::-;;5238:799;;;;;;;;;;-1:-1:-1;5238:799:25;;;;;:::i;:::-;;:::i;1119:24:22:-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3111:32:42;;;3093:51;;3081:2;3066:18;1119:24:22;2947:203:42;2230:74:22;;;;;;;;;;;;;:::i;1501:295:21:-;;;;;;;;;;-1:-1:-1;1501:295:21;;;;;:::i;:::-;;:::i;1903:253:19:-;;;;;;;;;;-1:-1:-1;1903:253:19;;;;;:::i;:::-;;:::i;1310:84:10:-;;;;;;;;;;-1:-1:-1;1380:7:10;;;;1310:84;;;4829:14:42;;4822:22;4804:41;;4792:2;4777:18;1310:84:10;4664:187:42;983:28:23;;;;;;;;;;;;;;;2111:1881:24;;;;;;;;;;;;;:::i;1482:318:26:-;;;:::i;6043:473:25:-;;;;;;;;;;;;;:::i;1871:92:8:-;;;;;;;;;;;;;:::i;1614:491:24:-;;;;;;;;;;;;;:::i;2105:70:22:-;;;;;;;;;;;;;:::i;1239:85:8:-;;;;;;;;;;-1:-1:-1;1311:6:8;;-1:-1:-1;;;;;1311:6:8;1239:85;;2624:127:26;;;;;;;;;;-1:-1:-1;2624:127:26;;;;;:::i;:::-;;:::i;1895:140:21:-;;;;;;;;;;;;;:::i;1392:1385:23:-;;;;;;;;;;-1:-1:-1;1392:1385:23;;;;;:::i;:::-;;:::i;2365:1622:25:-;;;;;;;;;;-1:-1:-1;2365:1622:25;;;;;:::i;:::-;;:::i;1138:21:19:-;;;;;;;;;;;;;;;;2310:127:26;;;;;;;;;;-1:-1:-1;2310:127:26;;;;;:::i;:::-;;:::i;1192:1010:25:-;;;;;;;;;;-1:-1:-1;1192:1010:25;;;;;:::i;:::-;;:::i;1644:253:19:-;;;;;;;;;;-1:-1:-1;1644:253:19;;;;;:::i;:::-;;:::i;1149:33:22:-;;;;;;;;;;-1:-1:-1;1149:33:22;;;;-1:-1:-1;;;;;1149:33:22;;;1659:393;;;;;;;;;;-1:-1:-1;1659:393:22;;;;;:::i;:::-;;:::i;1306:15:19:-;;;;;;;;;;-1:-1:-1;1306:15:19;;;;-1:-1:-1;;;;;1306:15:19;;;1944:247:26;;;;;;:::i;:::-;;:::i;1017:14:23:-;;;;;;;;;;-1:-1:-1;1017:14:23;;;;-1:-1:-1;;;;;1017:14:23;;;1216:32:19;;;;;;;;;;;;;;;;2041:177:21;;;;;;;;;;-1:-1:-1;2041:177:21;;;;;:::i;:::-;;:::i;4139:964:25:-;4240:10;4201:24;4228:23;;;:11;:23;;;;;4312:11;4304:69;;;;-1:-1:-1;;;4304:69:25;;7307:2:42;4304:69:25;;;7289:21:42;7346:2;7326:18;;;7319:30;7385:34;7365:18;;;7358:62;-1:-1:-1;;;7436:18:42;;;7429:43;7489:19;;4304:69:25;;;;;;;;;4474:7;4459:4;:11;;;:22;;4438:109;;;;-1:-1:-1;;;4438:109:25;;11823:2:42;4438:109:25;;;11805:21:42;11862:2;11842:18;;;11835:30;11901:34;11881:18;;;11874:62;-1:-1:-1;;;11952:18:42;;;11945:38;12000:19;;4438:109:25;11621:404:42;4438:109:25;4613:7;4598:4;:11;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;4681:15:25;;-1:-1:-1;4699:23:25;4714:7;4699:14;:23::i;:::-;4681:41;;4785:7;4775:6;;:17;;;;;;;:::i;:::-;;;;;;;;4812:7;4802:6;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;4885:23:25;;4901:7;;4885:4;;:12;;:23;;4901:7;;4885:23;:::i;:::-;;;;;;;;4979:7;4958:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;5059:37:25;;;14069:25:42;;;14125:2;14110:18;;14103:34;;;5067:10:25;;5059:37;;14042:18:42;5059:37:25;;;;;;;;4191:912;;4139:964;:::o;5238:799::-;5340:10;5301:24;5328:23;;;:11;:23;;;;;5420:12;;5399:106;;;;-1:-1:-1;;;5399:106:25;;10202:2:42;5399:106:25;;;10184:21:42;10241:2;10221:18;;;10214:30;10280:34;10260:18;;;10253:62;-1:-1:-1;;;10331:18:42;;;10324:41;10382:19;;5399:106:25;10000:407:42;5399:106:25;5569:7;5553:4;:12;;;:23;;;;;;;:::i;:::-;;;;;;;;5694:7;5673:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;5824:34:25;;-1:-1:-1;;;5824:34:25;;5838:10;5824:34;;;4559:51:42;4626:18;;;4619:34;;;5824:4:25;-1:-1:-1;;;;;5824:13:25;;;;4532:18:42;;5824:34:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5803:127;;;;-1:-1:-1;;;5803:127:25;;;;;;;:::i;:::-;6001:29;;5002:25:42;;;6010:10:25;;6001:29;;4990:2:42;4975:18;6001:29:25;;;;;;;;5291:746;5238:799;:::o;2230:74:22:-;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;2287:10:22::1;:8;:10::i;:::-;2230:74::o:0;1501:295:21:-;1409:13:9;;;;;;;;:30;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1547:98;1617:17:21::1;:15;:17::i;:::-;1644:16;:14;:16::i;:::-;1670:38;1697:4;1703;1191:3:23::0;:15;;-1:-1:-1;;;;;1191:15:23;;;-1:-1:-1;;;;;;1191:15:23;;;;;;;1216:3;:16;;;;;;;;;;;1108:131;1670:38:21::1;1718:27;:25;:27::i;:::-;1755:34;1547:7:22::0;:40;;-1:-1:-1;;;;;;1547:40:22;1576:10;1547:40;;;1484:110;1755:34:21::1;1671:14:9::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:9;;;1667:66;1391:348;1501:295:21;;:::o;1903:253:19:-;1965:7;1988:6;;1998:1;1988:11;1984:116;;;2072:17;:7;:15;:17::i;:::-;2065:24;1903:253;-1:-1:-1;;1903:253:19:o;1984:116::-;2116:33;2142:6;;2116:20;2129:6;;2116:7;:12;;:20;;;;:::i;:::-;:25;;:33::i;2111:1881:24:-;2363:29;;-1:-1:-1;;;2363:29:24;;2386:4;2363:29;;;3093:51:42;2205:13:24;;;;;;;;-1:-1:-1;;;;;2363:4:24;:14;;;;3066:18:42;;2363:29:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2345:47;;2417:17;;2407:7;:27;2403:1583;;;2614:41;;-1:-1:-1;;;2614:41:24;;2649:4;2614:41;;;3093:51:42;2595:16:24;;2614:7;-1:-1:-1;;;;;2614:26:24;;;;3066:18:42;;2614:41:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2595:60;-1:-1:-1;2673:13:24;2669:178;;2815:17;;2805:27;;:7;:27;:::i;:::-;2797:35;;2669:178;2436:421;2403:1583;;;2887:7;2867:17;;:27;2863:1123;;;2974:24;3021:7;3001:17;;:27;;;;:::i;:::-;3114:42;;-1:-1:-1;;;3114:42:24;;3150:4;3114:42;;;3093:51:42;2974:54:24;;-1:-1:-1;3094:17:24;;-1:-1:-1;;;;;3114:7:24;:27;;;;3066:18:42;;3114:42:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3094:62;-1:-1:-1;3174:13:24;;3170:703;;3344:82;;-1:-1:-1;;;3344:82:24;;3403:4;3344:82;;;3093:51:42;3324:17:24;;3344:7;-1:-1:-1;;;;;3344:29:24;;;;3066:18:42;;3344:82:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3324:102;;3460:15;3448:9;:27;3444:144;;;3560:9;3549:20;;3444:144;3189:562;3170:703;;;3842:16;3832:26;;3170:703;2896:987;;2863:1123;2292:1700;2111:1881;;;:::o;1482:318:26:-;1587:60;;-1:-1:-1;;;1587:60:26;;1640:4;1587:60;;;3093:51:42;1587:13:26;-1:-1:-1;;;;;1587:18:26;;;;1613:9;;3066:18:42;;1587:60:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1704:3:26;;1657:52;;-1:-1:-1;;;1657:52:26;;1689:4;1657:52;;;3599:34:42;-1:-1:-1;;;;;1704:3:26;;;3649:18:42;;;3642:43;1657:13:26;:23;;;;-1:-1:-1;1657:23:26;;-1:-1:-1;3534:18:42;;;-1:-1:-1;1657:52:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1719:13;-1:-1:-1;;;;;1719:23:26;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1754:39:26;;1762:10;;-1:-1:-1;1783:9:26;1754:39;;;;;-1:-1:-1;1783:9:26;1754:39;;;;1783:9;1762:10;1754:39;;;;;;;;;;;;;;;;;;;;;1482:318::o;6043:473:25:-;6163:10;6105:7;6151:23;;;:11;:23;;;;;;6265:12;;6340:29;;-1:-1:-1;;;6340:29:25;;6363:4;6340:29;;;3093:51:42;6151:23:25;;6265:12;6105:7;;-1:-1:-1;;;;;6340:4:25;:14;;;;3066:18:42;;6340:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6322:47;;6482:7;6471;:18;;:38;;6502:7;6471:38;;;6492:7;6471:38;6464:45;;;;;6043:473;:::o;1871:92:8:-;1311:6;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;1935:21:::1;1953:1;1935:9;:21::i;1614:491:24:-:0;1687:14;1703:16;1721:17;1742:9;:7;:9::i;:::-;1686:65;;-1:-1:-1;1686:65:24;-1:-1:-1;1686:65:24;-1:-1:-1;1766:10:24;;1762:90;;1820:21;;-1:-1:-1;;;1820:21:24;;;;;5002:25:42;;;1820:7:24;-1:-1:-1;;;;;1820:13:24;;;;4975:18:42;;1820:21:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:90;1866:12;;1862:112;;1938:25;;-1:-1:-1;;;1938:25:24;;;;;5002::42;;;1938:7:24;-1:-1:-1;;;;;1938:15:24;;;;4975:18:42;;1938:25:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:112;1988:13;;1984:115;;2061:27;;-1:-1:-1;;;2061:27:24;;;;;5002:25:42;;;2061:7:24;-1:-1:-1;;;;;2061:16:24;;;;4975:18:42;;2061:27:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1653:452;;;1614:491::o;2105:70:22:-;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;2160:8:22::1;:6;:8::i;2624:127:26:-:0;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;2709:35:26::1;::::0;-1:-1:-1;;;2709:35:26;;-1:-1:-1;;;;;3111:32:42;;;2709:35:26::1;::::0;::::1;3093:51:42::0;2709:13:26::1;:20;::::0;::::1;::::0;3066:18:42;;2709:35:26::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2624:127:::0;:::o;1895:140:21:-;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;1966:7:21::1;::::0;:16:::1;::::0;;-1:-1:-1;;;1966:16:21;;;;1951:12:::1;::::0;-1:-1:-1;;;;;1966:7:21::1;::::0;:14:::1;::::0;:16:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:7;:16;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1951:31;;1992:36;2023:4;1992:30;:36::i;1392:1385:23:-:0;1532:3;;:35;;-1:-1:-1;;;1532:35:23;;;;;5002:25:42;;;1457:4:23;;;;-1:-1:-1;;;;;1532:3:23;;;;:27;;4975:18:42;;1532:35:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1473:104;;1616:14;1633:13;-1:-1:-1;;;;;1633:30:23;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1733:3;;:24;;-1:-1:-1;;;1733:24:23;;;;;5002:25:42;;;1616:49:23;;-1:-1:-1;;;;;;1733:3:23;;:16;;4975:18:42;;1733:24:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1712:119;;;;-1:-1:-1;;;1712:119:23;;8550:2:42;1712:119:23;;;8532:21:42;8589:2;8569:18;;;8562:30;8628:34;8608:18;;;8601:62;-1:-1:-1;;;8679:18:42;;;8672:46;8735:19;;1712:119:23;8348:412:42;1712:119:23;1900:3;;:33;;-1:-1:-1;;;1900:33:23;;;;;14069:25:42;;;14110:18;;;14103:34;;;1879:18:23;;-1:-1:-1;;;;;1900:3:23;;:17;;14042:18:42;;1900:33:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1879:54;;1978:6;1964:10;:20;;1943:131;;;;;-1:-1:-1;;;1943:131:23;;11029:2:42;1943:131:23;;;11011:21:42;11048:18;;;11041:30;;;;11107:34;11087:18;;;11080:62;11178:34;11158:18;;;11151:62;11230:19;;1943:131:23;10827:428:42;1943:131:23;2085:23;2111:19;2120:10;2111:6;:19;:::i;:::-;2085:45;;2320:15;2310:6;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;2400:14:23;;2396:192;;2455:4;-1:-1:-1;;;;;2455:13:23;;2469:7;1311:6:8;;-1:-1:-1;;;;;1311:6:8;;1239:85;2469:7:23;2455:34;;-1:-1:-1;;;;;;2455:34:23;;;;;;;-1:-1:-1;;;;;4577:32:42;;;2455:34:23;;;4559:51:42;4626:18;;;4619:34;;;4532:18;;2455:34:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2430:147;;;;-1:-1:-1;;;2430:147:23;;13492:2:42;2430:147:23;;;13474:21:42;13531:2;13511:18;;;13504:30;13570:34;13550:18;;;13543:62;-1:-1:-1;;;13621:18:42;;;13614:52;13683:19;;2430:147:23;13290:418:42;2430:147:23;2715:33;;;14069:25:42;;;14125:2;14110:18;;14103:34;;;2715:33:23;;14042:18:42;2715:33:23;;;;;;;-1:-1:-1;2766:4:23;;1392:1385;-1:-1:-1;;;;;1392:1385:23:o;2365:1622:25:-;1380:7:10;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;;;;;;:::i;:::-;2506:10:25::1;2467:24;2494:23:::0;;;:11:::1;:23;::::0;;;;2754:11;2733:108:::1;;;;-1:-1:-1::0;;;2733:108:25::1;;;;;;;:::i;:::-;2883:12:::0;;2872:23;::::1;;2851:130;;;::::0;-1:-1:-1;;;2851:130:25;;12644:2:42;2851:130:25::1;::::0;::::1;12626:21:42::0;12683:2;12663:18;;;12656:30;12722:34;12702:18;;;12695:62;12793:30;12773:18;;;12766:58;12841:19;;2851:130:25::1;12442:424:42::0;2851:130:25::1;3120:8;3096:4;:21;;;:32;;;;:::i;:::-;3077:15;:51;;3056:164;;;::::0;-1:-1:-1;;;3056:164:25;;9382:2:42;3056:164:25::1;::::0;::::1;9364:21:42::0;9421:2;9401:18;;;9394:30;9460:34;9440:18;;;9433:62;9531:34;9511:18;;;9504:62;-1:-1:-1;;;9582:19:42;;;9575:33;9625:19;;3056:164:25::1;9180:470:42::0;3056:164:25::1;3279:15;3297:23;3312:7;3297:14;:23::i;:::-;3279:41;;3427:1;3417:7;:11;3396:111;;;::::0;-1:-1:-1;;;3396:111:25;;8128:2:42;3396:111:25::1;::::0;::::1;8110:21:42::0;8167:2;8147:18;;;8140:30;8206:34;8186:18;;;8179:62;-1:-1:-1;;;8257:18:42;;;8250:51;8318:19;;3396:111:25::1;7926:417:42::0;3396:111:25::1;3585:7;3570:4;:11;;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3602:23:25;;3618:7;;3602:4;;:12:::1;::::0;:23:::1;::::0;3618:7;;3602:23:::1;:::i;:::-;;;;;;;;3717:7;3707:6;;:17;;;;;;;:::i;:::-;;;;;;;;3744:7;3734:6;;:17;;;;;;;:::i;:::-;;;;;;;;3852:7;3831:17;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3945:35:25::1;::::0;;14069:25:42;;;14125:2;14110:18;;14103:34;;;3951:10:25::1;::::0;3945:35:::1;::::0;14042:18:42;3945:35:25::1;13895:248:42::0;2310:127:26;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;2391:39:26::1;::::0;-1:-1:-1;;;2391:39:26;;-1:-1:-1;;;;;3111:32:42;;;2391:39:26::1;::::0;::::1;3093:51:42::0;2391:13:26::1;:24;::::0;::::1;::::0;3066:18:42;;2391:39:26::1;2947:203:42::0;1192:1010:25;1380:7:10;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;;;;;;:::i;:::-;1504:1:25::1;1494:7;:11;1473:108;;;;-1:-1:-1::0;;;1473:108:25::1;;;;;;;:::i;:::-;1671:10;1632:24;1659:23:::0;;;:11:::1;:23;::::0;;;;1692;;1659;;1708:7;;1659:23;;1632:24;1692:23:::1;::::0;1708:7;;1692:23:::1;:::i;:::-;::::0;;;-1:-1:-1;;1785:15:25::1;1761:21;::::0;::::1;:39:::0;1889:17:::1;:28:::0;;1910:7;;1889:17;::::1;::::0;:28:::1;::::0;1910:7;;1889:28:::1;:::i;:::-;::::0;;;-1:-1:-1;;1949:53:25::1;::::0;-1:-1:-1;;;1949:53:25;;1967:10:::1;1949:53;::::0;::::1;4245:34:42::0;1987:4:25::1;4295:18:42::0;;;4288:43;4347:18;;;4340:34;;;1949:4:25::1;-1:-1:-1::0;;;;;1949:17:25::1;::::0;::::1;::::0;4180:18:42;;1949:53:25::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1928:146;;;;-1:-1:-1::0;;;1928:146:25::1;;;;;;;:::i;:::-;2147:10;2139:56;2159:7:::0;2168:26:::1;2186:8;2168:15;:26;:::i;:::-;2139:56;::::0;;14069:25:42;;;14125:2;14110:18;;14103:34;;;;14042:18;2139:56:25::1;13895:248:42::0;1644:253:19;1706:7;1729:6;;1739:1;1729:11;1725:116;;;1813:17;:7;:15;:17::i;1725:116::-;1857:33;1883:6;;1857:20;1870:6;;1857:7;:12;;:20;;;;:::i;:::-;:25;;:33::i;1659:393:22:-;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;1803:28:22::1;::::0;-1:-1:-1;;;1803:28:22;;1046:66:::1;1803:28;::::0;::::1;5002:25:42::0;1734:36:22::1;::::0;1803:3:::1;-1:-1:-1::0;;;;;1803:9:22::1;::::0;::::1;::::0;4975:18:42;;1803:28:22::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1925:33;::::0;-1:-1:-1;;;1925:33:22;;1734:107;;-1:-1:-1;;;;;;1925:27:22;::::1;::::0;::::1;::::0;:33:::1;::::0;1953:4;;1925:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2021:24;2040:4;2021:24;;;;;;:::i;:::-;;;;;;;;1724:328;1659:393:::0;:::o;1944:247:26:-;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;2071:51:26::1;::::0;-1:-1:-1;;;2071:51:26;;-1:-1:-1;;;;;3111:32:42;;;2071:51:26::1;::::0;::::1;3093::42::0;2071:13:26::1;:18;::::0;::::1;::::0;2097:9:::1;::::0;3066:18:42;;2071:51:26::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2179:3:26::1;::::0;2132:52:::1;::::0;-1:-1:-1;;;2132:52:26;;-1:-1:-1;;;;;3617:15:42;;;2132:52:26::1;::::0;::::1;3599:34:42::0;2179:3:26;;::::1;3649:18:42::0;;;3642:43;2132:13:26::1;:23:::0;;::::1;::::0;-1:-1:-1;2132:23:26::1;::::0;-1:-1:-1;3534:18:42;;;-1:-1:-1;2132:52:26::1;3379:312:42::0;2041:177:21;2165:46;2202:8;2165:36;:46::i;2322:117:10:-;1380:7;;;;1881:41;;;;-1:-1:-1;;;1881:41:10;;6958:2:42;1881:41:10;;;6940:21:42;6997:2;6977:18;;;6970:30;-1:-1:-1;;;7016:18:42;;;7009:50;7076:18;;1881:41:10;6756:344:42;1881:41:10;2380:7:::1;:15:::0;;-1:-1:-1;;2380:15:10::1;::::0;;2410:22:::1;902:10:11::0;2419:12:10::1;2410:22;::::0;-1:-1:-1;;;;;3111:32:42;;;3093:51;;3081:2;3066:18;2410:22:10::1;;;;;;;2322:117::o:0;991:128::-;1409:13:9;;;;;;;;:30;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1547:98;1049:26:10::1;:24;:26::i;:::-;1085:27;:25;:27::i;:::-;1671:14:9::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:9;;;1391:348;991:128:10:o;934:126:8:-;1409:13:9;;;;;;;;:30;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1547:98;991:26:8::1;:24;:26::i;:::-;1027;:24;:26::i;1406:202:24:-:0;1483:49;;-1:-1:-1;;;1483:49:24;;-1:-1:-1;;;;;1504:7:24;4577:32:42;;1483:49:24;;;4559:51:42;-1:-1:-1;;4626:18:42;;;4619:34;1483:4:24;:12;;;;4532:18:42;;1483:49:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1462:139;;;;-1:-1:-1;;;1462:139:24;;12232:2:42;1462:139:24;;;12214:21:42;12271:2;12251:18;;;12244:30;12310:34;12290:18;;;12283:62;-1:-1:-1;;;12361:18:42;;;12354:41;12412:19;;1462:139:24;12030:407:42;1487:146:41;1538:7;;1577:9;1585:1;923:3;1577:9;:::i;:::-;1557:29;-1:-1:-1;923:3:41;1604:13;1616:1;1557:29;1604:13;:::i;:::-;1603:23;;;;:::i;:::-;1596:30;1487:146;-1:-1:-1;;;1487:146:41:o;1210:119::-;1269:7;879:4;1309:5;1313:1;1309;:5;:::i;:::-;1297:7;1303:1;879:4;1297:7;:::i;:::-;1296:19;;;;:::i;1335:146::-;1394:7;;1429:5;1433:1;1429;:5;:::i;:::-;1413:21;-1:-1:-1;1473:1:41;1461:7;879:4;1461:1;:7;:::i;:::-;1452:17;;:5;:17;:::i;:::-;1451:23;;;;:::i;:::-;1444:30;1335:146;-1:-1:-1;;;;1335:146:41:o;2307:169:8:-;2381:6;;;-1:-1:-1;;;;;2397:17:8;;;-1:-1:-1;;;;;;2397:17:8;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;2362:16;;2429:40;2352:124;2307:169;:::o;2075:115:10:-;1380:7;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;;;;;;:::i;:::-;2134:7:::1;:14:::0;;-1:-1:-1;;2134:14:10::1;2144:4;2134:14;::::0;;2163:20:::1;2170:12;902:10:11::0;;823:96;1242:150:26;1315:44;;-1:-1:-1;;;1315:44:26;;1347:4;1315:44;;;3599:34:42;-1:-1:-1;;;;;3669:15:42;;;3649:18;;;3642:43;1315:13:26;:23;;;;3534:18:42;;1315:44:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1369:3:26;:16;;-1:-1:-1;;;;;;1369:16:26;-1:-1:-1;;;;;1369:16:26;;;;;;;;;;;-1:-1:-1;;1242:150:26:o;1639:93:41:-;1690:7;1716:9;923:3;1716:1;:9;:::i;933:119::-;992:7;837:4;1032:5;1036:1;1032;:5;:::i;:::-;1020:7;1026:1;837:4;1020:7;:::i;1058:146::-;1117:7;;1152:5;1156:1;1152;:5;:::i;:::-;1136:21;-1:-1:-1;1196:1:41;1184:7;837:4;1184:1;:7;:::i;2112:189:8:-;1311:6;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2200:22:8;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:8;;7721:2:42;2192:73:8::1;::::0;::::1;7703:21:42::0;7760:2;7740:18;;;7733:30;7799:34;7779:18;;;7772:62;-1:-1:-1;;;7850:18:42;;;7843:36;7896:19;;2192:73:8::1;7519:402:42::0;2192:73:8::1;2275:19;2285:8;2275:9;:19::i;754:64:11:-:0;1409:13:9;;;;;;;;:30;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1667:66;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:9;;;1391:348;754:64:11:o;1125:90:10:-;1409:13:9;;;;;;;;:30;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1547:98;1193:7:10::1;:15:::0;;-1:-1:-1;;1193:15:10::1;::::0;;1667:66:9;;;;1717:5;1701:21;;-1:-1:-1;;1701:21:9;;;1391:348;1125:90:10:o;1066:97:8:-;1409:13:9;;;;;;;;:30;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;;;;;;:::i;:::-;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1547:98;1133:23:8::1;902:10:11::0;1133:9:8::1;:23::i;14:247:42:-:0;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:52;;;405:1;402;395:12;357:52;437:9;431:16;456:31;481:5;456:31;:::i;782:388::-;850:6;858;911:2;899:9;890:7;886:23;882:32;879:52;;;927:1;924;917:12;879:52;966:9;953:23;985:31;1010:5;985:31;:::i;:::-;1035:5;-1:-1:-1;1092:2:42;1077:18;;1064:32;1105:33;1064:32;1105:33;:::i;:::-;1157:7;1147:17;;;782:388;;;;;:::o;1175:277::-;1242:6;1295:2;1283:9;1274:7;1270:23;1266:32;1263:52;;;1311:1;1308;1301:12;1263:52;1343:9;1337:16;1396:5;1389:13;1382:21;1375:5;1372:32;1362:60;;1418:1;1415;1408:12;1457:184;1527:6;1580:2;1568:9;1559:7;1555:23;1551:32;1548:52;;;1596:1;1593;1586:12;1548:52;-1:-1:-1;1619:16:42;;1457:184;-1:-1:-1;1457:184:42:o;1646:922::-;1715:6;1768:2;1756:9;1747:7;1743:23;1739:32;1736:52;;;1784:1;1781;1774:12;1736:52;1824:9;1811:23;1853:18;1894:2;1886:6;1883:14;1880:34;;;1910:1;1907;1900:12;1880:34;1948:6;1937:9;1933:22;1923:32;;1993:7;1986:4;1982:2;1978:13;1974:27;1964:55;;2015:1;2012;2005:12;1964:55;2051:2;2038:16;2073:2;2069;2066:10;2063:36;;;2079:18;;:::i;:::-;2154:2;2148:9;2122:2;2208:13;;-1:-1:-1;;2204:22:42;;;2228:2;2200:31;2196:40;2184:53;;;2252:18;;;2272:22;;;2249:46;2246:72;;;2298:18;;:::i;:::-;2338:10;2334:2;2327:22;2373:2;2365:6;2358:18;2413:7;2408:2;2403;2399;2395:11;2391:20;2388:33;2385:53;;;2434:1;2431;2424:12;2385:53;2490:2;2485;2481;2477:11;2472:2;2464:6;2460:15;2447:46;2535:1;2513:15;;;2530:2;2509:24;2502:35;;;;-1:-1:-1;2517:6:42;1646:922;-1:-1:-1;;;;;1646:922:42:o;2573:180::-;2632:6;2685:2;2673:9;2664:7;2660:23;2656:32;2653:52;;;2701:1;2698;2691:12;2653:52;-1:-1:-1;2724:23:42;;2573:180;-1:-1:-1;2573:180:42:o;6154:597::-;6266:4;6295:2;6324;6313:9;6306:21;6356:6;6350:13;6399:6;6394:2;6383:9;6379:18;6372:34;6424:1;6434:140;6448:6;6445:1;6442:13;6434:140;;;6543:14;;;6539:23;;6533:30;6509:17;;;6528:2;6505:26;6498:66;6463:10;;6434:140;;;6592:6;6589:1;6586:13;6583:91;;;6662:1;6657:2;6648:6;6637:9;6633:22;6629:31;6622:42;6583:91;-1:-1:-1;6735:2:42;6714:15;-1:-1:-1;;6710:29:42;6695:45;;;;6742:2;6691:54;;6154:597;-1:-1:-1;;;6154:597:42:o;8765:410::-;8967:2;8949:21;;;9006:2;8986:18;;;8979:30;9045:34;9040:2;9025:18;;9018:62;-1:-1:-1;;;9111:2:42;9096:18;;9089:44;9165:3;9150:19;;8765:410::o;9655:340::-;9857:2;9839:21;;;9896:2;9876:18;;;9869:30;-1:-1:-1;;;9930:2:42;9915:18;;9908:46;9986:2;9971:18;;9655:340::o;10412:410::-;10614:2;10596:21;;;10653:2;10633:18;;;10626:30;10692:34;10687:2;10672:18;;10665:62;-1:-1:-1;;;10758:2:42;10743:18;;10736:44;10812:3;10797:19;;10412:410::o;11260:356::-;11462:2;11444:21;;;11481:18;;;11474:30;11540:34;11535:2;11520:18;;11513:62;11607:2;11592:18;;11260:356::o;12871:414::-;13073:2;13055:21;;;13112:2;13092:18;;;13085:30;13151:34;13146:2;13131:18;;13124:62;-1:-1:-1;;;13217:2:42;13202:18;;13195:48;13275:3;13260:19;;12871:414::o;14472:128::-;14512:3;14543:1;14539:6;14536:1;14533:13;14530:39;;;14549:18;;:::i;:::-;-1:-1:-1;14585:9:42;;14472:128::o;14605:217::-;14645:1;14671;14661:132;;14715:10;14710:3;14706:20;14703:1;14696:31;14750:4;14747:1;14740:15;14778:4;14775:1;14768:15;14661:132;-1:-1:-1;14807:9:42;;14605:217::o;14827:168::-;14867:7;14933:1;14929;14925:6;14921:14;14918:1;14915:21;14910:1;14903:9;14896:17;14892:45;14889:71;;;14940:18;;:::i;:::-;-1:-1:-1;14980:9:42;;14827:168::o;15000:125::-;15040:4;15068:1;15065;15062:8;15059:34;;;15073:18;;:::i;:::-;-1:-1:-1;15110:9:42;;15000:125::o;15130:127::-;15191:10;15186:3;15182:20;15179:1;15172:31;15222:4;15219:1;15212:15;15246:4;15243:1;15236:15;15262:127;15323:10;15318:3;15314:20;15311:1;15304:31;15354:4;15351:1;15344:15;15378:4;15375:1;15368:15;15394:131;-1:-1:-1;;;;;15469:31:42;;15459:42;;15449:70;;15515:1;15512;15505:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2164000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "amount()": "2384",
        "amountToShares(uint256)": "infinite",
        "amounts()": "infinite",
        "cancelHire(address)": "infinite",
        "ctsi()": "infinite",
        "deposit(uint256)": "infinite",
        "ens()": "infinite",
        "factory()": "2426",
        "fee()": "2425",
        "getWithdrawBalance()": "infinite",
        "hire(address)": "infinite",
        "initialize(address,address)": "infinite",
        "lockTime()": "infinite",
        "owner()": "2399",
        "pause()": "29796",
        "paused()": "2361",
        "pos()": "2381",
        "produceBlock(uint256)": "infinite",
        "rebalance()": "infinite",
        "renounceOwnership()": "28206",
        "requiredLiquidity()": "2405",
        "retire(address)": "infinite",
        "selfhire()": "infinite",
        "setName(string)": "infinite",
        "shares()": "2364",
        "sharesToAmount(uint256)": "infinite",
        "stake(uint256)": "infinite",
        "transferOwnership(address)": "infinite",
        "unpause()": "29817",
        "unstake(uint256)": "infinite",
        "update()": "infinite",
        "userBalance(address)": "6824",
        "withdraw(uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "amount()": "aa8c217c",
      "amountToShares(uint256)": "b811540e",
      "amounts()": "6beaeeae",
      "cancelHire(address)": "b64b3bed",
      "ctsi()": "64ffc3f4",
      "deposit(uint256)": "b6b55f25",
      "ens()": "3f15457f",
      "factory()": "c45a0155",
      "fee()": "ddca3f43",
      "getWithdrawBalance()": "710fe6f8",
      "hire(address)": "d9d6bd86",
      "initialize(address,address)": "485cc955",
      "lockTime()": "0d668087",
      "owner()": "8da5cb5b",
      "pause()": "8456cb59",
      "paused()": "5c975abb",
      "pos()": "c56551b6",
      "produceBlock(uint256)": "a5a6cd0b",
      "rebalance()": "7d7c2a1c",
      "renounceOwnership()": "715018a6",
      "requiredLiquidity()": "e366b7bb",
      "retire(address)": "9e6371ba",
      "selfhire()": "6ff46a6c",
      "setName(string)": "c47f0027",
      "shares()": "03314efa",
      "sharesToAmount(uint256)": "555d8ebb",
      "stake(uint256)": "a694fc3a",
      "transferOwnership(address)": "f2fde38b",
      "unpause()": "3f4ba83a",
      "unstake(uint256)": "2e17de78",
      "update()": "a2e62045",
      "userBalance(address)": "0103c92b",
      "withdraw(uint256)": "2e1a7d4d"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ctsi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_staking\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_workerManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_stakeLock\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"BlockProduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeTimestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"StakingPoolRenamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"amountToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstake\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdraw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"cancelHire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ctsi\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract StakingPoolFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"contract Fee\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"hire\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pos\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pos\",\"outputs\":[{\"internalType\":\"contract IPoS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"produceBlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"workerAddress\",\"type\":\"address\"}],\"name\":\"retire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfhire\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"sharesToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"amounts()\":{\"returns\":{\"stake\":\"amount of tokens that can be staked\",\"unstake\":\"amount of tokens that must be unstaked to add liquidity\",\"withdraw\":\"amount of tokens that can be withdrawn to add liquidity\"}},\"cancelHire(address)\":{\"params\":{\"workerAddress\":\"address of the worker node\"}},\"getWithdrawBalance()\":{\"details\":\"there is no way to know the exact time in the future the requested tokens will be available\",\"returns\":{\"_0\":\"the amount of tokens that can be immediately withdrawn by the calling user\"}},\"hire(address)\":{\"params\":{\"workerAddress\":\"address of the worker\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"produceBlock(uint256)\":{\"returns\":{\"_0\":\"true when everything went fine\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retire(address)\":{\"details\":\"this also removes all authorizations in place\",\"params\":{\"workerAddress\":\"address of the worker to be retired\"}},\"stake(uint256)\":{\"params\":{\"_amount\":\"amount of tokens to convert from user's balance\"}},\"withdraw(uint256)\":{\"details\":\"this will transfer all free tokens for the calling user\"}},\"version\":1},\"userdoc\":{\"events\":{\"BlockProduced(uint256,uint256)\":{\"notice\":\"this event is emitted at every produceBlock call reward is the block reward commission is how much CTSI is directed to the pool owner\"},\"Deposit(address,uint256,uint256)\":{\"notice\":\"Tokens were deposited, available for staking or withdrawal\"},\"Stake(address,uint256,uint256)\":{\"notice\":\"Tokens were deposited, they count as shares immediatly\"},\"StakingPoolRenamed(string)\":{\"notice\":\"Event emmited when a pool is rename\"},\"Unstake(address,uint256,uint256)\":{\"notice\":\"Request to unstake tokens. Additional liquidity requested for the pool\"},\"Withdraw(address,uint256)\":{\"notice\":\"Withdraw performed by a user\"}},\"kind\":\"user\",\"methods\":{\"amounts()\":{\"notice\":\"provide information for offchain about the amount for each staking operation on the main Staking contract\"},\"cancelHire(address)\":{\"notice\":\"Called by the user to cancel a job offer\"},\"getWithdrawBalance()\":{\"notice\":\"Returns the amount of tokens that can be immediately withdrawn by the calling user\"},\"hire(address)\":{\"notice\":\"Asks the worker to work for the sender. Sender needs to pay something.\"},\"pause()\":{\"notice\":\"pauses new staking on the pool\"},\"produceBlock(uint256)\":{\"notice\":\"routes produceBlock to POS contract and updates internal states of the pool\"},\"rebalance()\":{\"notice\":\"Move tokens from pool to staking or vice-versa, according to required liquidity. If the pool has more liquidity then necessary, it stakes tokens. If the pool has less liquidity then necessary, and has not started an unstake, it unstakes. If the pool has less liquity than necessary, and has started an unstake, it withdraws if possible.\"},\"retire(address)\":{\"notice\":\"Called by the user to retire his worker.\"},\"selfhire()\":{\"notice\":\"allows for the pool to act on its own behalf when producing blocks.\"},\"setName(string)\":{\"notice\":\"sets a name for the pool using ENS service\"},\"stake(uint256)\":{\"notice\":\"Stake an amount of tokens, immediately earning pool shares in returns\"},\"unpause()\":{\"notice\":\"unpauses new staking on the pool\"},\"unstake(uint256)\":{\"notice\":\"allow for users to defined exactly how many shares they want to unstake. Estimated value is then emitted on Unstake event\"},\"update()\":{\"notice\":\"updates the internal settings for important pieces of the Cartesi PoS system\"},\"withdraw(uint256)\":{\"notice\":\"Transfer tokens back to calling user wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolImpl.sol\":\"StakingPoolImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/pos/contracts/IPoS.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface PoS\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IPoS {\\n    /// @notice Produce a block\\n    /// @param _index the index of the instance of pos you want to interact with\\n    /// @dev this function can only be called by a worker, user never calls it directly\\n    function produceBlock(uint256 _index) external returns (bool);\\n\\n    /// @notice Get reward manager address\\n    /// @param _index index of instance\\n    /// @return address of instance's RewardManager\\n    function getRewardManagerAddress(uint256 _index)\\n        external\\n        view\\n        returns (address);\\n\\n    /// @notice Get block selector address\\n    /// @param _index index of instance\\n    /// @return address of instance's block selector\\n    function getBlockSelectorAddress(uint256 _index)\\n        external\\n        view\\n        returns (address);\\n\\n    /// @notice Get block selector index\\n    /// @param _index index of instance\\n    /// @return index of instance's block selector\\n    function getBlockSelectorIndex(uint256 _index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Get staking address\\n    /// @param _index index of instance\\n    /// @return address of instance's staking contract\\n    function getStakingAddress(uint256 _index) external view returns (address);\\n\\n    /// @notice Get state of a particular instance\\n    /// @param _index index of instance\\n    /// @param _user address of user\\n    /// @return bool if user is eligible to produce next block\\n    /// @return address of user that was chosen to build the block\\n    /// @return current reward paid by the network for that block\\n    function getState(uint256 _index, address _user)\\n        external\\n        view\\n        returns (\\n            bool,\\n            address,\\n            uint256\\n        );\\n\\n    function terminate(uint256 _index) external;\\n}\\n\",\"keccak256\":\"0xf22d440f723b8d80ef60a20bf38f5a3ea16fd604a2c485e1c969bec0b24e8889\",\"license\":\"Apache-2.0\"},\"@cartesi/pos/contracts/IRewardManager.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface RewardManager\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IRewardManager {\\n    /// @notice Rewards address\\n    /// @param _address address be rewarded\\n    /// @param _amount reward\\n    /// @dev only the pos contract can call this\\n    function reward(address _address, uint256 _amount) external;\\n\\n    /// @notice Get RewardManager's balance\\n    function getBalance() external view returns (uint256);\\n\\n    /// @notice Get current reward amount\\n    function getCurrentReward() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf3d3fb9853d55c0658f45dfd072032291c975138e99cd8cedb0d6550848e2813\",\"license\":\"Apache-2.0\"},\"@cartesi/pos/contracts/IStaking.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface Staking\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IStaking {\\n    /// @notice Returns total amount of tokens counted as stake\\n    /// @param _userAddress user to retrieve staked balance from\\n    /// @return finalized staked of _userAddress\\n    function getStakedBalance(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the timestamp when next deposit can be finalized\\n    /// @return timestamp of when finalizeStakes() is callable\\n    function getMaturingTimestamp(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the timestamp when next withdraw can be finalized\\n    /// @return timestamp of when finalizeWithdraw() is callable\\n    function getReleasingTimestamp(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the balance waiting/ready to be matured\\n    /// @return amount that will get staked after finalization\\n    function getMaturingBalance(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Returns the balance waiting/ready to be released\\n    /// @return amount that will get withdrew after finalization\\n    function getReleasingBalance(address _userAddress)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Deposit CTSI to be staked. The money will turn into staked\\n    ///         balance after timeToStake days\\n    /// @param _amount The amount of tokens that are gonna be deposited.\\n    function stake(uint256 _amount) external;\\n\\n    /// @notice Remove tokens from staked balance. The money can\\n    ///         be released after timeToRelease seconds, if the\\n    ///         function withdraw is called.\\n    /// @param _amount The amount of tokens that are gonna be unstaked.\\n    function unstake(uint256 _amount) external;\\n\\n    /// @notice Transfer tokens to user's wallet.\\n    /// @param _amount The amount of tokens that are gonna be transferred.\\n    function withdraw(uint256 _amount) external;\\n\\n    // events\\n    /// @notice CTSI tokens were deposited, they count as stake after _maturationDate\\n    /// @param user address of msg.sender\\n    /// @param amount amount deposited for staking\\n    /// @param maturationDate date when the stake can be finalized\\n    event Stake(address indexed user, uint256 amount, uint256 maturationDate);\\n\\n    /// @notice Unstake tokens, moving them to releasing structure\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens to be released\\n    /// @param maturationDate date when the tokens can be withdrew\\n    event Unstake(address indexed user, uint256 amount, uint256 maturationDate);\\n\\n    /// @notice Withdraw process was finalized\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens withdrawn\\n    event Withdraw(address indexed user, uint256 amount);\\n}\\n\",\"keccak256\":\"0xda69ecab096249069100cd857133f717045d19422061ea06d87eca606ac62dd3\",\"license\":\"Apache-2.0\"},\"@cartesi/pos/contracts/IWorkerManagerAuthManager.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface WorkerManager\\n/// @author Danilo Tuler\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IWorkerManagerAuthManager {\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress) external payable;\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external;\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external;\\n\\n    /// @notice Gives worker permission to act on a DApp\\n    /// @param _workerAddress address of the worker node to given permission\\n    /// @param _dappAddress address of the dapp that permission will be given to\\n    function authorize(address _workerAddress, address _dappAddress) external;\\n\\n    /// @notice Called by the worker to accept the job\\n    function acceptJob() external;\\n\\n    /// @notice Called by the worker to reject a job offer\\n    function rejectJob() external payable;\\n}\\n\",\"keccak256\":\"0x81c78ff7141cedf3cb3c70537b557baf88070a4d374a5967c5a65e0b865e9b46\",\"license\":\"Apache-2.0\"},\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    function setRecord(bytes32 node, address owner, address resolver, uint64 ttl) external virtual;\\n    function setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external virtual;\\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external virtual returns(bytes32);\\n    function setResolver(bytes32 node, address resolver) external virtual;\\n    function setOwner(bytes32 node, address owner) external virtual;\\n    function setTTL(bytes32 node, uint64 ttl) external virtual;\\n    function setApprovalForAll(address operator, bool approved) external virtual;\\n    function owner(bytes32 node) external virtual view returns (address);\\n    function resolver(bytes32 node) external virtual view returns (address);\\n    function ttl(bytes32 node) external virtual view returns (uint64);\\n    function recordExists(bytes32 node) external virtual view returns (bool);\\n    function isApprovedForAll(address owner, address operator) external virtual view returns (bool);\\n}\\n\",\"keccak256\":\"0x942ef29bd7c0f62228aeb91879ddd1ba101f52a2162970d3e48adffa498f4483\"},\"@ensdomains/ens-contracts/contracts/registry/ReverseRegistrar.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\nimport \\\"./ENS.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../root/Controllable.sol\\\";\\n\\nabstract contract NameResolver {\\n    function setName(bytes32 node, string memory name) public virtual;\\n}\\n\\nbytes32 constant lookup = 0x3031323334353637383961626364656600000000000000000000000000000000;\\n\\nbytes32 constant ADDR_REVERSE_NODE = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n// namehash('addr.reverse')\\n\\ncontract ReverseRegistrar is Ownable, Controllable {\\n    ENS public ens;\\n    NameResolver public defaultResolver;\\n\\n    event ReverseClaimed(address indexed addr, bytes32 indexed node);\\n\\n    /**\\n     * @dev Constructor\\n     * @param ensAddr The address of the ENS registry.\\n     * @param resolverAddr The address of the default reverse resolver.\\n     */\\n    constructor(ENS ensAddr, NameResolver resolverAddr) {\\n        ens = ensAddr;\\n        defaultResolver = resolverAddr;\\n\\n        // Assign ownership of the reverse record to our deployer\\n        ReverseRegistrar oldRegistrar = ReverseRegistrar(\\n            ens.owner(ADDR_REVERSE_NODE)\\n        );\\n        if (address(oldRegistrar) != address(0x0)) {\\n            oldRegistrar.claim(msg.sender);\\n        }\\n    }\\n\\n    modifier authorised(address addr) {\\n        require(\\n            addr == msg.sender ||\\n                controllers[msg.sender] ||\\n                ens.isApprovedForAll(addr, msg.sender) ||\\n                ownsContract(addr),\\n            \\\"Caller is not a controller or authorised by address or the address itself\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claim(address owner) public returns (bytes32) {\\n        return _claimWithResolver(msg.sender, owner, address(0x0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param addr The reverse record to set\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claimForAddr(address addr, address owner)\\n        public\\n        authorised(addr)\\n        returns (bytes32)\\n    {\\n        return _claimWithResolver(addr, owner, address(0x0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @param resolver The address of the resolver to set; 0 to leave unchanged.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claimWithResolver(address owner, address resolver)\\n        public\\n        returns (bytes32)\\n    {\\n        return _claimWithResolver(msg.sender, owner, resolver);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record specified with the\\n     *      address provided\\n     * @param addr The reverse record to set\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @param resolver The address of the resolver to set; 0 to leave unchanged.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claimWithResolverForAddr(\\n        address addr,\\n        address owner,\\n        address resolver\\n    ) public authorised(addr) returns (bytes32) {\\n        return _claimWithResolver(addr, owner, resolver);\\n    }\\n\\n    /**\\n     * @dev Sets the `name()` record for the reverse ENS record associated with\\n     * the calling account. First updates the resolver to the default reverse\\n     * resolver if necessary.\\n     * @param name The name to set for this address.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function setName(string memory name) public returns (bytes32) {\\n        bytes32 node = _claimWithResolver(\\n            msg.sender,\\n            address(this),\\n            address(defaultResolver)\\n        );\\n        defaultResolver.setName(node, name);\\n        return node;\\n    }\\n\\n    /**\\n     * @dev Sets the `name()` record for the reverse ENS record associated with\\n     * the account provided. First updates the resolver to the default reverse\\n     * resolver if necessary.\\n     * Only callable by controllers and authorised users\\n     * @param addr The reverse record to set\\n     * @param owner The owner of the reverse node\\n     * @param name The name to set for this address.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function setNameForAddr(\\n        address addr,\\n        address owner,\\n        string memory name\\n    ) public authorised(addr) returns (bytes32) {\\n        bytes32 node = _claimWithResolver(\\n            addr,\\n            address(this),\\n            address(defaultResolver)\\n        );\\n        defaultResolver.setName(node, name);\\n        ens.setSubnodeOwner(ADDR_REVERSE_NODE, sha3HexAddress(addr), owner);\\n        return node;\\n    }\\n\\n    /**\\n     * @dev Returns the node hash for a given account's reverse records.\\n     * @param addr The address to hash\\n     * @return The ENS node hash.\\n     */\\n    function node(address addr) public pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encodePacked(ADDR_REVERSE_NODE, sha3HexAddress(addr))\\n            );\\n    }\\n\\n    /**\\n     * @dev An optimised function to compute the sha3 of the lower-case\\n     *      hexadecimal representation of an Ethereum address.\\n     * @param addr The address to hash\\n     * @return ret The SHA3 hash of the lower-case hexadecimal encoding of the\\n     *         input address.\\n     */\\n    function sha3HexAddress(address addr) private pure returns (bytes32 ret) {\\n        assembly {\\n            for {\\n                let i := 40\\n            } gt(i, 0) {\\n\\n            } {\\n                i := sub(i, 1)\\n                mstore8(i, byte(and(addr, 0xf), lookup))\\n                addr := div(addr, 0x10)\\n                i := sub(i, 1)\\n                mstore8(i, byte(and(addr, 0xf), lookup))\\n                addr := div(addr, 0x10)\\n            }\\n\\n            ret := keccak256(0, 40)\\n        }\\n    }\\n\\n    /* Internal functions */\\n\\n    function _claimWithResolver(\\n        address addr,\\n        address owner,\\n        address resolver\\n    ) internal returns (bytes32) {\\n        bytes32 label = sha3HexAddress(addr);\\n        bytes32 node = keccak256(abi.encodePacked(ADDR_REVERSE_NODE, label));\\n        address currentResolver = ens.resolver(node);\\n        bool shouldUpdateResolver = (resolver != address(0x0) &&\\n            resolver != currentResolver);\\n        address newResolver = shouldUpdateResolver ? resolver : currentResolver;\\n\\n        ens.setSubnodeRecord(ADDR_REVERSE_NODE, label, owner, newResolver, 0);\\n\\n        emit ReverseClaimed(addr, node);\\n\\n        return node;\\n    }\\n\\n    function ownsContract(address addr) internal view returns (bool) {\\n        try Ownable(addr).owner() returns (address owner) {\\n            return owner == msg.sender;\\n        } catch {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6151b50f057afe5e32f9ef2f05b3c5c3ac8719b5900aead76d60be4356997ef6\"},\"@ensdomains/ens-contracts/contracts/root/Controllable.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Controllable is Ownable {\\n    mapping(address => bool) public controllers;\\n\\n    event ControllerChanged(address indexed controller, bool enabled);\\n\\n    modifier onlyController {\\n        require(\\n            controllers[msg.sender],\\n            \\\"Controllable: Caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    function setController(address controller, bool enabled) public onlyOwner {\\n        controllers[controller] = enabled;\\n        emit ControllerChanged(controller, enabled);\\n    }\\n}\\n\",\"keccak256\":\"0x0c364a5b65b6fff279adbe1fd6498c488feabeec781599cd60a5844e80ee7d88\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/StakingPoolData.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IPoS.sol\\\";\\n\\nimport \\\"./utils/WadRayMath.sol\\\";\\n\\ncontract StakingPoolData is\\n    Initializable,\\n    PausableUpgradeable,\\n    OwnableUpgradeable\\n{\\n    using WadRayMath for uint256;\\n    uint256 public shares; // total number of shares\\n    uint256 public amount; // amount of staked tokens (no matter where it is)\\n    uint256 public requiredLiquidity; // amount of required tokens for withdraw requests\\n\\n    IPoS public pos;\\n\\n    struct UserBalance {\\n        uint256 balance; // amount of free tokens belonging to this user\\n        uint256 shares; // amount of shares belonging to this user\\n        uint256 depositTimestamp; // timestamp of when user deposited for the last time\\n    }\\n    mapping(address => UserBalance) public userBalance;\\n\\n    function amountToShares(uint256 _amount) public view returns (uint256) {\\n        if (amount == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _amount.wad2ray();\\n        }\\n        return _amount.wmul(shares).wdiv(amount);\\n    }\\n\\n    function sharesToAmount(uint256 _shares) public view returns (uint256) {\\n        if (shares == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _shares.ray2wad();\\n        }\\n        return _shares.rmul(amount).rdiv(shares);\\n    }\\n}\\n\",\"keccak256\":\"0xfcbd42ab27887ee87deede6e615807482f0b94683a600eacec7d3c546f58685b\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./interfaces/StakingPool.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\nimport \\\"./StakingPoolManagementImpl.sol\\\";\\nimport \\\"./StakingPoolProducerImpl.sol\\\";\\nimport \\\"./StakingPoolStakingImpl.sol\\\";\\nimport \\\"./StakingPoolUserImpl.sol\\\";\\nimport \\\"./StakingPoolWorkerImpl.sol\\\";\\n\\ncontract StakingPoolImpl is\\n    StakingPool,\\n    StakingPoolData,\\n    StakingPoolManagementImpl,\\n    StakingPoolProducerImpl,\\n    StakingPoolStakingImpl,\\n    StakingPoolUserImpl,\\n    StakingPoolWorkerImpl\\n{\\n    constructor(\\n        address _ctsi,\\n        address _staking,\\n        address _workerManager,\\n        address _ens,\\n        uint256 _stakeLock\\n    )\\n        StakingPoolManagementImpl(_ens)\\n        StakingPoolProducerImpl(_ctsi)\\n        StakingPoolStakingImpl(_ctsi, _staking)\\n        StakingPoolUserImpl(_ctsi, _stakeLock)\\n        StakingPoolWorkerImpl(_workerManager)\\n    {}\\n\\n    function initialize(address _fee, address _pos)\\n        external\\n        override\\n        initializer\\n    {\\n        __Pausable_init();\\n        __Ownable_init();\\n        __StakingPoolProducer_init(_fee, _pos);\\n        __StakingPoolStaking_init();\\n        __StakingPoolManagementImpl_init();\\n    }\\n\\n    /// @notice updates the internal settings for important pieces of the Cartesi PoS system\\n    function update() external override onlyOwner {\\n        address _pos = factory.getPoS();\\n        __StakingPoolWorkerImpl_update(_pos);\\n    }\\n\\n    function transferOwnership(address newOwner)\\n        public\\n        override(StakingPool, OwnableUpgradeable)\\n    {\\n        OwnableUpgradeable.transferOwnership(newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xfa809ab5be3ba04e8c2a629ef439efecc6371a04e94c46b4998f37c31f95614a\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolManagementImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@ensdomains/ens-contracts/contracts/registry/ReverseRegistrar.sol\\\";\\nimport \\\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\\\";\\n\\nimport \\\"./interfaces/StakingPoolManagement.sol\\\";\\nimport \\\"./interfaces/StakingPoolFactory.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolManagementImpl is StakingPoolManagement, StakingPoolData {\\n    bytes32 private constant ADDR_REVERSE_NODE =\\n        0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n    ENS public immutable ens;\\n    StakingPoolFactory public factory;\\n\\n    // all immutable variables can stay at the constructor\\n    constructor(address _ens) initializer {\\n        require(_ens != address(0), \\\"parameter can not be zero address\\\");\\n        ens = ENS(_ens);\\n\\n        // make sure reference code is pause so no one stake to it\\n        _pause();\\n    }\\n\\n    function __StakingPoolManagementImpl_init() internal {\\n        factory = StakingPoolFactory(msg.sender);\\n    }\\n\\n    /// @notice sets a name for the pool using ENS service\\n    function setName(string memory name) external override onlyOwner {\\n        ReverseRegistrar ensReverseRegistrar = ReverseRegistrar(\\n            ens.owner(ADDR_REVERSE_NODE)\\n        );\\n\\n        // call the ENS reverse registrar resolving pool address to name\\n        ensReverseRegistrar.setName(name);\\n\\n        // emit event, for subgraph processing\\n        emit StakingPoolRenamed(name);\\n    }\\n\\n    /// @notice pauses new staking on the pool\\n    function pause() external override onlyOwner {\\n        _pause();\\n    }\\n\\n    /// @notice unpauses new staking on the pool\\n    function unpause() external override onlyOwner {\\n        _unpause();\\n    }\\n}\\n\",\"keccak256\":\"0x0f5d8e312cbd24a8d4dc17861da33e20b911f28a7266d18bd40a0595f68ce22f\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolProducerImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IPoS.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IRewardManager.sol\\\";\\nimport \\\"./interfaces/Fee.sol\\\";\\nimport \\\"./interfaces/StakingPoolProducer.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolProducerImpl is StakingPoolProducer, StakingPoolData {\\n    IERC20 public immutable ctsi;\\n    Fee public fee;\\n\\n    constructor(address _ctsi) {\\n        ctsi = IERC20(_ctsi);\\n    }\\n\\n    function __StakingPoolProducer_init(address _fee, address _pos) internal {\\n        fee = Fee(_fee);\\n        pos = IPoS(_pos);\\n    }\\n\\n    /// @notice routes produceBlock to POS contract and\\n    /// updates internal states of the pool\\n    /// @return true when everything went fine\\n    function produceBlock(uint256 _index) external override returns (bool) {\\n        IRewardManager rewardManager = IRewardManager(\\n            pos.getRewardManagerAddress(_index)\\n        );\\n\\n        // get block reward\\n        uint256 reward = rewardManager.getCurrentReward();\\n\\n        // produce block in the PoS\\n        require(\\n            pos.produceBlock(_index),\\n            \\\"StakingPoolProducerImpl: failed to produce block\\\"\\n        );\\n\\n        // calculate pool commission\\n        uint256 commission = fee.getCommission(_index, reward);\\n        require(\\n            commission <= reward,\\n            \\\"StakingPoolProducerImpl: commission is greater than block reward\\\"\\n        );\\n\\n        uint256 remainingReward = reward - commission; // this is a safety check\\n        // if commission is over the reward amount, it will underflow\\n\\n        // increase pool amount, this will change the pool exchange rate\\n        amount += remainingReward;\\n\\n        // send commission directly to pool owner\\n        if (commission > 0) {\\n            require(\\n                ctsi.transfer(owner(), commission),\\n                \\\"StakingPoolProducerImpl: failed to transfer commission\\\"\\n            );\\n        }\\n\\n        // remainingReward is part of the balance, so it will automatically be staked by StakingPoolStakingImpl\\n        emit BlockProduced(reward, commission);\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x573028bd6177e7c4cde34cdfa64334312459aa25ae8778249e7e008cc87da873\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolStakingImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IStaking.sol\\\";\\nimport \\\"./interfaces/StakingPoolStaking.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\n/// @notice This contract takes care of the interaction between the pool and the staking contract\\n/// It makes sure that there is enough liquidity in the pool to fullfil all unstake request from\\n/// users, by requesting to withdraw or unstake from Staking contract.\\n/// The remaining balance is staked.\\ncontract StakingPoolStakingImpl is StakingPoolStaking, StakingPoolData {\\n    IERC20 private immutable ctsi;\\n    IStaking private immutable staking;\\n\\n    constructor(address _ctsi, address _staking) {\\n        ctsi = IERC20(_ctsi);\\n        staking = IStaking(_staking);\\n    }\\n\\n    function __StakingPoolStaking_init() internal {\\n        require(\\n            ctsi.approve(address(staking), type(uint256).max),\\n            \\\"Failed to approve CTSI for staking contract\\\"\\n        );\\n    }\\n\\n    function rebalance() external override {\\n        // get amounts\\n        (uint256 _stake, uint256 _unstake, uint256 _withdraw) = amounts();\\n\\n        if (_stake > 0) {\\n            // we can stake\\n            staking.stake(_stake);\\n        }\\n\\n        if (_unstake > 0) {\\n            // we need to provide liquidity\\n            staking.unstake(_unstake);\\n        }\\n\\n        if (_withdraw > 0) {\\n            // we need to provide liquidity\\n            staking.withdraw(_withdraw);\\n        }\\n    }\\n\\n    function amounts()\\n        public\\n        view\\n        override\\n        returns (\\n            uint256 stake,\\n            uint256 unstake,\\n            uint256 withdraw\\n        )\\n    {\\n        // get this contract balance first\\n        uint256 balance = ctsi.balanceOf(address(this));\\n\\n        if (balance > requiredLiquidity) {\\n            // we have spare tokens we can stake\\n            // check if there is anything already maturing, to avoid reset the maturation clock\\n            uint256 maturing = staking.getMaturingBalance(address(this));\\n            if (maturing == 0) {\\n                // nothing is maturing, we can stake the balance, preserving the liquidity\\n                stake = balance - requiredLiquidity;\\n            }\\n        } else if (requiredLiquidity > balance) {\\n            // we don't have enough tokens to provide liquidity\\n            uint256 missingLiquidity = requiredLiquidity - balance;\\n\\n            // let's first check releasing balance\\n            uint256 releasing = staking.getReleasingBalance(address(this));\\n            if (releasing > 0) {\\n                // some is already releasing\\n\\n                // let's check timestamp to see if we can withdrawn it\\n                uint256 timestamp = staking.getReleasingTimestamp(\\n                    address(this)\\n                );\\n                if (timestamp < block.timestamp) {\\n                    // there it is, let's grab it\\n                    withdraw = releasing;\\n                }\\n\\n                // requiredLiquidity may be more than what is already releasing\\n                // but we won't unstake more to not reset the clock\\n            } else {\\n                // no unstake maturing, let's queue some\\n                unstake = missingLiquidity;\\n            }\\n        } else {\\n            // balance is exactly required liquidity, we can't move any tokens around\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xff7ccae3fab52c17b5a8bfd7619a460e7a7db27469f274dc28fd630073bfb820\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolUserImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/StakingPoolUser.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolUserImpl is StakingPoolUser, StakingPoolData {\\n    IERC20 private immutable ctsi;\\n    uint256 public immutable lockTime;\\n\\n    /// @dev Constructor\\n    /// @param _ctsi The contract that provides the staking pool's token\\n    /// @param _lockTime The user deposit lock period\\n    constructor(address _ctsi, uint256 _lockTime) {\\n        ctsi = IERC20(_ctsi);\\n        lockTime = _lockTime;\\n    }\\n\\n    function deposit(uint256 _amount) external override whenNotPaused {\\n        // transfer tokens from caller to this contract\\n        // user must have approved the transfer a priori\\n        // tokens will be lying around, until actually staked by pool owner at a later time\\n        require(\\n            _amount > 0,\\n            \\\"StakingPoolUserImpl: amount must be greater than 0\\\"\\n        );\\n\\n        // add tokens to user's balance\\n        UserBalance storage user = userBalance[msg.sender];\\n        user.balance += _amount;\\n\\n        // reset deposit timestamp\\n        user.depositTimestamp = block.timestamp;\\n\\n        // reserve the balance as required liquidity (don't stake to Staking)\\n        requiredLiquidity += _amount;\\n\\n        require(\\n            ctsi.transferFrom(msg.sender, address(this), _amount),\\n            \\\"StakingPoolUserImpl: failed to transfer tokens\\\"\\n        );\\n\\n        // emit event containing user and amount\\n        emit Deposit(msg.sender, _amount, block.timestamp + lockTime);\\n    }\\n\\n    /// @notice Stake an amount of tokens, immediately earning pool shares in returns\\n    /// @param _amount amount of tokens to convert from user's balance\\n    function stake(uint256 _amount) external override whenNotPaused {\\n        // get user balance\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // transfer tokens from caller to this contract\\n        // user must have approved the transfer a priori\\n        // tokens will be lying around, until actually staked by pool owner at a later time\\n        require(\\n            _amount > 0,\\n            \\\"StakingPoolUserImpl: amount must be greater than 0\\\"\\n        );\\n        require(\\n            _amount <= user.balance,\\n            \\\"StakingPoolUserImpl: not enough tokens available for staking\\\"\\n        );\\n\\n        // check if user can already stake or if it's too early\\n        require(\\n            block.timestamp >= user.depositTimestamp + lockTime,\\n            \\\"StakingPoolUserImpl: not enough time has passed since last deposit\\\"\\n        );\\n\\n        // calculate amount of shares as of now\\n        uint256 _shares = amountToShares(_amount);\\n\\n        // make sure he get at least one share (rounding errors)\\n        require(\\n            _shares > 0,\\n            \\\"StakingPoolUserImpl: stake not enough to emit 1 share\\\"\\n        );\\n\\n        // allocate new shares to user, immediately\\n        user.shares += _shares;\\n        user.balance -= _amount;\\n\\n        // increase total shares and amount (not changing share value)\\n        amount += _amount;\\n        shares += _shares;\\n\\n        // remove from required liquidity, as it's moving to Staking\\n        requiredLiquidity -= _amount;\\n\\n        // emit event containing user, amount, shares and unlock time\\n        emit Stake(msg.sender, _amount, _shares);\\n    }\\n\\n    /// @notice allow for users to defined exactly how many shares they\\n    /// want to unstake. Estimated value is then emitted on Unstake event\\n    function unstake(uint256 _shares) external override {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // check if shares is valid value\\n        require(_shares > 0, \\\"StakingPoolUserImpl: invalid amount of shares\\\");\\n\\n        // check if user has enough shares to unstake\\n        require(\\n            user.shares >= _shares,\\n            \\\"StakingPoolUserImpl: insufficient shares\\\"\\n        );\\n\\n        // reduce user number of shares\\n        user.shares -= _shares;\\n\\n        // calculate amount of tokens from shares\\n        uint256 _amount = sharesToAmount(_shares);\\n\\n        // reduce total shares and amount\\n        shares -= _shares;\\n        amount -= _amount;\\n\\n        // add amount user can withdraw (if available)\\n        user.balance += _amount;\\n\\n        // increase required liquidity\\n        requiredLiquidity += _amount;\\n\\n        // emit event containing user, amount and shares\\n        emit Unstake(msg.sender, _amount, _shares);\\n    }\\n\\n    /// @notice Transfer tokens back to calling user wallet\\n    /// @dev this will transfer all free tokens for the calling user\\n    function withdraw(uint256 _amount) external override {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // check user released value\\n        require(\\n            user.balance > 0,\\n            \\\"StakingPoolUserImpl: no balance to withdraw\\\"\\n        );\\n\\n        // clear user released value\\n        user.balance -= _amount; // if _amount >  user.balance this will revert\\n\\n        // decrease required liquidity\\n        requiredLiquidity -= _amount; // if _amount >  requiredLiquidity this will revert\\n\\n        // transfer token back to user\\n        require(\\n            ctsi.transfer(msg.sender, _amount),\\n            \\\"StakingPoolUserImpl: failed to transfer tokens\\\"\\n        );\\n\\n        // emit event containing user and token amount\\n        emit Withdraw(msg.sender, _amount);\\n    }\\n\\n    function getWithdrawBalance() external view override returns (uint256) {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // get maximum amount user can withdraw (his balance)\\n        uint256 _amount = user.balance;\\n\\n        // check contract balance\\n        uint256 balance = ctsi.balanceOf(address(this));\\n\\n        // he can withdraw whatever is available at the contract, up to his balance\\n        return balance >= _amount ? _amount : balance;\\n    }\\n}\\n\",\"keccak256\":\"0x0c5441718ae0bbbf13f32d7a593e74d779a885af18341db060fb357b6b67ca10\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolWorkerImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@cartesi/pos/contracts/IWorkerManagerAuthManager.sol\\\";\\nimport \\\"./interfaces/StakingPoolWorker.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolWorkerImpl is StakingPoolWorker, StakingPoolData {\\n    IWorkerManagerAuthManager immutable workerManager;\\n\\n    // all immutable variables can stay at the constructor\\n    constructor(address _workerManager) {\\n        require(\\n            _workerManager != address(0),\\n            \\\"parameter can not be zero address\\\"\\n        );\\n        workerManager = IWorkerManagerAuthManager(_workerManager);\\n    }\\n\\n    receive() external payable {}\\n\\n    function __StakingPoolWorkerImpl_update(address _pos) internal {\\n        workerManager.authorize(address(this), _pos);\\n        pos = IPoS(_pos);\\n    }\\n\\n    /// @notice allows for the pool to act on its own behalf when producing blocks.\\n    function selfhire() external payable override {\\n        // pool needs to be both user and worker\\n        workerManager.hire{value: msg.value}(payable(address(this)));\\n        workerManager.authorize(address(this), address(pos));\\n        workerManager.acceptJob();\\n        payable(msg.sender).transfer(msg.value);\\n    }\\n\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress)\\n        external\\n        payable\\n        override\\n        onlyOwner\\n    {\\n        workerManager.hire{value: msg.value}(workerAddress);\\n        workerManager.authorize(workerAddress, address(pos));\\n    }\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external override onlyOwner {\\n        workerManager.cancelHire(workerAddress);\\n    }\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external override onlyOwner {\\n        workerManager.retire(workerAddress);\\n    }\\n}\\n\",\"keccak256\":\"0xa16d0336a8122932ef7d4eeb44395e0a9972d8902e63ef2df5d8159d33b8ddd2\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/Fee.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Calculator of pool owner commission for each block reward\\n/// @author Danilo Tuler\\n/// @notice This provides flexibility for different commission models\\ninterface Fee {\\n    /// @notice calculates the total amount of the reward that will be directed to the pool owner\\n    /// @return amount of tokens taken by the pool owner as commission\\n    function getCommission(uint256 posIndex, uint256 rewardAmount)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6f0bafc511d75503c33709e4bb0d6c8cf191f06331e7fa4505540d8d1836e55a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPool.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\nimport \\\"./StakingPoolManagement.sol\\\";\\nimport \\\"./StakingPoolProducer.sol\\\";\\nimport \\\"./StakingPoolStaking.sol\\\";\\nimport \\\"./StakingPoolUser.sol\\\";\\nimport \\\"./StakingPoolWorker.sol\\\";\\n\\n/// @title Staking Pool interface\\n/// @author Danilo Tuler\\n/// @notice This interface aggregates all facets of a staking pool.\\n/// It is broken down into the following sub-interfaces:\\n/// - StakingPoolManagement: management operations on the pool, called by the owner\\n/// - StakingPoolProducer: operations related to block production\\n/// - StakingPoolStaking: interaction between the pool and the staking contract\\n/// - StakingPoolUser: interaction between the pool users and the pool\\n/// - StakingPoolWorker: interaction between the pool and the worker node\\ninterface StakingPool is\\n    StakingPoolManagement,\\n    StakingPoolProducer,\\n    StakingPoolStaking,\\n    StakingPoolUser,\\n    StakingPoolWorker\\n{\\n    /// @notice initialize pool (from reference)\\n    function initialize(address fee, address _pos) external;\\n\\n    /// @notice Transfer ownership of pool to its deployer\\n    function transferOwnership(address newOwner) external;\\n\\n    /// @notice updates the internal settings for important pieces of the Cartesi PoS system\\n    function update() external;\\n}\\n\",\"keccak256\":\"0x102c3eb490a239bfb98f38363c2218edacdeb64db46493a3a84cbcc431903b77\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolFactory.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\ninterface StakingPoolFactory {\\n    /// @notice Creates a new staking pool using a flat commission model\\n    /// emits NewFlatRateCommissionStakingPool with the parameters of the new pool\\n    /// @return new pool address\\n    function createFlatRateCommission(uint256 commission)\\n        external\\n        payable\\n        returns (address);\\n\\n    /// @notice Creates a new staking pool using a gas tax commission model\\n    /// emits NewGasTaxCommissionStakingPool with the parameters of the new pool\\n    /// @return new pool address\\n    function createGasTaxCommission(uint256 gas)\\n        external\\n        payable\\n        returns (address);\\n\\n    /// @notice Returns configuration for the working pools of the current version\\n    /// @return _pos address for the PoS contract\\n    function getPoS() external view returns (address _pos);\\n\\n    /// @notice Event emmited when a pool is created\\n    /// @param pool address of the new pool\\n    /// @param fee address of the commission contract\\n    event NewFlatRateCommissionStakingPool(address indexed pool, address fee);\\n\\n    /// @notice Event emmited when a pool is created\\n    /// @param pool address of the new pool\\n    /// @param fee address of thhe commission contract\\n    event NewGasTaxCommissionStakingPool(address indexed pool, address fee);\\n}\\n\",\"keccak256\":\"0x5e35f11721eee583e20da68db531eefd391300d6c14a757ccf42a5c189929a7a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolManagement.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\ninterface StakingPoolManagement {\\n    /// @notice sets a name for the pool using ENS service\\n    function setName(string memory name) external;\\n\\n    /// @notice pauses new staking on the pool\\n    function pause() external;\\n\\n    /// @notice unpauses new staking on the pool\\n    function unpause() external;\\n\\n    /// @notice Event emmited when a pool is rename\\n    event StakingPoolRenamed(string name);\\n}\\n\",\"keccak256\":\"0xff9727e06a79e361f3873da5336d7a7c976f1163b763ccece276c37e046038cf\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolProducer.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool and the PoS block production.\\n/// @author Danilo Tuler\\n/// @notice This interface provides an opportunity to handle the necessary logic\\n/// after a block is produced.\\n/// A commission is taken from the block reward, and the remaining stays in the pool,\\n/// raising the pool share value, and being further staked.\\ninterface StakingPoolProducer {\\n    /// @notice routes produceBlock to POS contract and\\n    /// updates internal states of the pool\\n    /// @return true when everything went fine\\n    function produceBlock(uint256 _index) external returns (bool);\\n\\n    /// @notice this event is emitted at every produceBlock call\\n    /// reward is the block reward\\n    /// commission is how much CTSI is directed to the pool owner\\n    event BlockProduced(uint256 reward, uint256 commission);\\n}\\n\",\"keccak256\":\"0xf9895f06eff4ce10a53a1e4d4138cc3784584b52975e69757a73dc85bebb6602\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolStaking.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool and the staking contract\\n/// @author Danilo Tuler\\n/// @notice This interface models all interactions between a pool and the staking contract,\\n/// including staking, unstaking and withdrawing.\\n/// Tokens staked by pool users will stay at the pool until the pool owner decides to\\n/// stake them in the staking contract. On the other hand, tokens unstaked by pool users\\n/// are added to a required liquidity accumulator, and must be unstaked and withdrawn from\\n/// the staking contract.\\ninterface StakingPoolStaking {\\n    /// @notice Move tokens from pool to staking or vice-versa, according to required liquidity.\\n    /// If the pool has more liquidity then necessary, it stakes tokens.\\n    /// If the pool has less liquidity then necessary, and has not started an unstake, it unstakes.\\n    /// If the pool has less liquity than necessary, and has started an unstake, it withdraws if possible.\\n    function rebalance() external;\\n\\n    /// @notice provide information for offchain about the amount for each\\n    /// staking operation on the main Staking contract\\n    /// @return stake amount of tokens that can be staked\\n    /// @return unstake amount of tokens that must be unstaked to add liquidity\\n    /// @return withdraw amount of tokens that can be withdrawn to add liquidity\\n    function amounts()\\n        external\\n        view\\n        returns (\\n            uint256 stake,\\n            uint256 unstake,\\n            uint256 withdraw\\n        );\\n}\\n\",\"keccak256\":\"0xd79a4bbc8defea295205493352e73802c29a3478fe345b04885eef3cb82c3a25\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolUser.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool user and a pool\\n/// @author Danilo Tuler\\n/// @notice This interface models all interactions between a pool user and a pool,\\n/// including staking, unstaking and withdrawing. A pool user always holds pool shares.\\n/// When a user stakes tokens, he immediately receive shares. When he unstakes shares\\n/// he is asking to release tokens. Those tokens need to be withdrawn by an additional\\n/// call to withdraw()\\ninterface StakingPoolUser {\\n    /// @notice Deposit tokens to user pool balance\\n    /// @param amount amount of token deposited in the pool\\n    function deposit(uint256 amount) external;\\n\\n    /// @notice Stake an amount of tokens, immediately earning pool shares in returns\\n    /// @param amount amount of tokens to convert to shares\\n    function stake(uint256 amount) external;\\n\\n    /// @notice Unstake an specified amount of shares of the calling user\\n    /// @dev Shares are immediately converted to tokens, and added to the pool liquidity requirement\\n    function unstake(uint256 shares) external;\\n\\n    /// @notice Transfer tokens back to calling user wallet\\n    /// @dev this will transfer tokens from user pool account to user's wallet\\n    function withdraw(uint256 amount) external;\\n\\n    /// @notice Returns the amount of tokens that can be immediately withdrawn by the calling user\\n    /// @dev there is no way to know the exact time in the future the requested tokens will be available\\n    /// @return the amount of tokens that can be immediately withdrawn by the calling user\\n    function getWithdrawBalance() external returns (uint256);\\n\\n    /// @notice Tokens were deposited, available for staking or withdrawal\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens deposited by the user\\n    /// @param stakeTimestamp instant when the amount can be staked\\n    event Deposit(address indexed user, uint256 amount, uint256 stakeTimestamp);\\n\\n    /// @notice Tokens were deposited, they count as shares immediatly\\n    /// @param user address of msg.sender\\n    /// @param amount amount deposited by the user\\n    /// @param shares number of shares emitted for user\\n    event Stake(address indexed user, uint256 amount, uint256 shares);\\n\\n    /// @notice Request to unstake tokens. Additional liquidity requested for the pool\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens to be released\\n    /// @param shares number of shares being liquidated\\n    event Unstake(address indexed user, uint256 amount, uint256 shares);\\n\\n    /// @notice Withdraw performed by a user\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens withdrawn\\n    event Withdraw(address indexed user, uint256 amount);\\n}\\n\",\"keccak256\":\"0xdd0612eef33a71a77364bd68c573dbb950b195500dc21c15f52ff32908fabc60\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolWorker.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\ninterface StakingPoolWorker {\\n    /// @notice allows for the pool to act on its own behalf when producing blocks.\\n    function selfhire() external payable;\\n\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress) external payable;\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external;\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external;\\n}\\n\",\"keccak256\":\"0x66b0366bc973b3dbc8591c1cd6e558ee5456192a31ee1262b8b5e855c30a9023\",\"license\":\"Apache-2.0\"},\"contracts/utils/WadRayMath.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Wad and Ray Math library\\n/// @dev Math operations for wads (fixed point with 18 digits) and rays (fixed points with 27 digits)\\npragma solidity ^0.8.0;\\n\\nlibrary WadRayMath {\\n    uint256 internal constant WAD = 1e18;\\n    uint256 internal constant RAY = 1e27;\\n    uint256 internal constant RATIO = 1e9;\\n\\n    function wmul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return ((WAD / 2) + (a * b)) / WAD;\\n    }\\n\\n    function wdiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 halfB = b / 2;\\n        return (halfB + (a * WAD)) / b;\\n    }\\n\\n    function rmul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return ((RAY / 2) + (a * b)) / RAY;\\n    }\\n\\n    function rdiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 halfB = b / 2;\\n        return (halfB + (a * RAY)) / b;\\n    }\\n\\n    function ray2wad(uint256 a) internal pure returns (uint256) {\\n        uint256 halfRatio = RATIO / 2;\\n        return (halfRatio + a) / RATIO;\\n    }\\n\\n    function wad2ray(uint256 a) internal pure returns (uint256) {\\n        return a * RATIO;\\n    }\\n}\\n\",\"keccak256\":\"0x1adf36cd91770f989f5700c4fa44c3c08f8bf1df12b9c8816723193e9751a65e\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 979,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 982,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1175,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1040,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_paused",
        "offset": 0,
        "slot": "51",
        "type": "t_bool"
      },
      {
        "astId": 1131,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 859,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 972,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1883,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "shares",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 1885,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "amount",
        "offset": 0,
        "slot": "152",
        "type": "t_uint256"
      },
      {
        "astId": 1887,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "requiredLiquidity",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 1890,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "pos",
        "offset": 0,
        "slot": "154",
        "type": "t_contract(IPoS)61"
      },
      {
        "astId": 1902,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "userBalance",
        "offset": 0,
        "slot": "155",
        "type": "t_mapping(t_address,t_struct(UserBalance)1897_storage)"
      },
      {
        "astId": 2474,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "factory",
        "offset": 0,
        "slot": "156",
        "type": "t_contract(StakingPoolFactory)3504"
      },
      {
        "astId": 2583,
        "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
        "label": "fee",
        "offset": 0,
        "slot": "157",
        "type": "t_contract(Fee)3428"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Fee)3428": {
        "encoding": "inplace",
        "label": "contract Fee",
        "numberOfBytes": "20"
      },
      "t_contract(IPoS)61": {
        "encoding": "inplace",
        "label": "contract IPoS",
        "numberOfBytes": "20"
      },
      "t_contract(StakingPoolFactory)3504": {
        "encoding": "inplace",
        "label": "contract StakingPoolFactory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserBalance)1897_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPoolData.UserBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(UserBalance)1897_storage"
      },
      "t_struct(UserBalance)1897_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolData.UserBalance",
        "members": [
          {
            "astId": 1892,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1894,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "shares",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1896,
            "contract": "contracts/StakingPoolImpl.sol:StakingPoolImpl",
            "label": "depositTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "BlockProduced(uint256,uint256)": {
        "notice": "this event is emitted at every produceBlock call reward is the block reward commission is how much CTSI is directed to the pool owner"
      },
      "Deposit(address,uint256,uint256)": {
        "notice": "Tokens were deposited, available for staking or withdrawal"
      },
      "Stake(address,uint256,uint256)": {
        "notice": "Tokens were deposited, they count as shares immediatly"
      },
      "StakingPoolRenamed(string)": {
        "notice": "Event emmited when a pool is rename"
      },
      "Unstake(address,uint256,uint256)": {
        "notice": "Request to unstake tokens. Additional liquidity requested for the pool"
      },
      "Withdraw(address,uint256)": {
        "notice": "Withdraw performed by a user"
      }
    },
    "kind": "user",
    "methods": {
      "amounts()": {
        "notice": "provide information for offchain about the amount for each staking operation on the main Staking contract"
      },
      "cancelHire(address)": {
        "notice": "Called by the user to cancel a job offer"
      },
      "getWithdrawBalance()": {
        "notice": "Returns the amount of tokens that can be immediately withdrawn by the calling user"
      },
      "hire(address)": {
        "notice": "Asks the worker to work for the sender. Sender needs to pay something."
      },
      "pause()": {
        "notice": "pauses new staking on the pool"
      },
      "produceBlock(uint256)": {
        "notice": "routes produceBlock to POS contract and updates internal states of the pool"
      },
      "rebalance()": {
        "notice": "Move tokens from pool to staking or vice-versa, according to required liquidity. If the pool has more liquidity then necessary, it stakes tokens. If the pool has less liquidity then necessary, and has not started an unstake, it unstakes. If the pool has less liquity than necessary, and has started an unstake, it withdraws if possible."
      },
      "retire(address)": {
        "notice": "Called by the user to retire his worker."
      },
      "selfhire()": {
        "notice": "allows for the pool to act on its own behalf when producing blocks."
      },
      "setName(string)": {
        "notice": "sets a name for the pool using ENS service"
      },
      "stake(uint256)": {
        "notice": "Stake an amount of tokens, immediately earning pool shares in returns"
      },
      "unpause()": {
        "notice": "unpauses new staking on the pool"
      },
      "unstake(uint256)": {
        "notice": "allow for users to defined exactly how many shares they want to unstake. Estimated value is then emitted on Unstake event"
      },
      "update()": {
        "notice": "updates the internal settings for important pieces of the Cartesi PoS system"
      },
      "withdraw(uint256)": {
        "notice": "Transfer tokens back to calling user wallet"
      }
    },
    "version": 1
  }
}