{
  "contractName": "StakingPoolProducerImpl",
  "sourceName": "contracts/StakingPoolProducerImpl.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ctsi",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pos",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        }
      ],
      "name": "BlockProduced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_fee",
          "type": "address"
        }
      ],
      "name": "__StakingPoolProducer_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "amountToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ctsi",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "contract Fee",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pos",
      "outputs": [
        {
          "internalType": "contract IPoS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "produceBlock",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "released",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unstakeTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610aff380380610aff83398101604081905261002f91610069565b6001600160601b0319606092831b8116608052911b1660a05261009c565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007c57600080fd5b6100858361004d565b91506100936020840161004d565b90509250929050565b60805160601c60a05160601c610a236100dc6000396000818161021801528181610358015261046001526000818161018f01526105eb0152610a236000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a5a6cd0b11610097578063ddca3f4311610066578063ddca3f431461023a578063e366b7bb1461024d578063f2fde38b14610256578063f6efbd141461026957600080fd5b8063a5a6cd0b146101e4578063aa8c217c146101f7578063b811540e14610200578063c56551b61461021357600080fd5b80635c975abb116100d35780635c975abb1461017357806364ffc3f41461018a578063715018a6146101c95780638da5cb5b146101d357600080fd5b80630103c92b146100fa57806303314efa14610149578063555d8ebb14610160575b600080fd5b6101296101083660046108bd565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61015260975481565b604051908152602001610140565b61015261016e366004610920565b610299565b60335460ff165b6040519015158152602001610140565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610140565b6101d16102ca565b005b6065546001600160a01b03166101b1565b61017a6101f2366004610920565b610335565b61015260985481565b61015261020e366004610920565b61077f565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b609b546101b1906001600160a01b031681565b61015260995481565b6101d16102643660046108bd565b6107a0565b6101d16102773660046108bd565b609b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000609754600014156102aa575090565b6097546098546102ba908461098c565b6102c4919061096a565b92915050565b6065546001600160a01b031633146103295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610333600061086b565b565b6040516385425f4f60e01b81526004810182905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906385425f4f9060240160206040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d291906108e1565b90506000816001600160a01b0316638aec85426040518163ffffffff1660e01b815260040160206040518083038186803b15801561040f57600080fd5b505afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190610939565b60405163a5a6cd0b60e01b8152600481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a5a6cd0b90602401602060405180830381600087803b1580156104ac57600080fd5b505af11580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e491906108fe565b50609b54604051632c7f22b560e21b815260048101869052602481018390526000916001600160a01b03169063b1fc8ad49060440160206040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610939565b9050818111156105e3576040805162461bcd60e51b81526020600482015260248101919091527f5374616b696e67506f6f6c50726f6475636572496d706c3a20636f6d6d69737360448201527f696f6e2069732067726561746572207468616e20626c6f636b207265776172646064820152608401610320565b8015610715577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb61062a6065546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906108fe565b6107155760405162461bcd60e51b815260206004820152603660248201527f5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c6564206044820152753a37903a3930b739b332b91031b7b6b6b4b9b9b4b7b760511b6064820152608401610320565b600061072182846109ab565b905080609860008282546107359190610952565b909155505060408051848152602081018490527fbb9ac692e0e3001a628f86a894f03da4ced5df81886fec577036664ed70a59cb910160405180910390a150600195945050505050565b600060985460001415610790575090565b6098546097546102ba908461098c565b6065546001600160a01b031633146107fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610320565b6001600160a01b03811661085f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610320565b6108688161086b565b50565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156108cf57600080fd5b81356108da816109d8565b9392505050565b6000602082840312156108f357600080fd5b81516108da816109d8565b60006020828403121561091057600080fd5b815180151581146108da57600080fd5b60006020828403121561093257600080fd5b5035919050565b60006020828403121561094b57600080fd5b5051919050565b60008219821115610965576109656109c2565b500190565b60008261098757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156109a6576109a66109c2565b500290565b6000828210156109bd576109bd6109c2565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461086857600080fdfea2646970667358221220f18bb80e31b2cd4bec6c8ffeba130cfe4465d3484d8dbb602996889bf37458ab64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a5a6cd0b11610097578063ddca3f4311610066578063ddca3f431461023a578063e366b7bb1461024d578063f2fde38b14610256578063f6efbd141461026957600080fd5b8063a5a6cd0b146101e4578063aa8c217c146101f7578063b811540e14610200578063c56551b61461021357600080fd5b80635c975abb116100d35780635c975abb1461017357806364ffc3f41461018a578063715018a6146101c95780638da5cb5b146101d357600080fd5b80630103c92b146100fa57806303314efa14610149578063555d8ebb14610160575b600080fd5b6101296101083660046108bd565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61015260975481565b604051908152602001610140565b61015261016e366004610920565b610299565b60335460ff165b6040519015158152602001610140565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610140565b6101d16102ca565b005b6065546001600160a01b03166101b1565b61017a6101f2366004610920565b610335565b61015260985481565b61015261020e366004610920565b61077f565b6101b17f000000000000000000000000000000000000000000000000000000000000000081565b609b546101b1906001600160a01b031681565b61015260995481565b6101d16102643660046108bd565b6107a0565b6101d16102773660046108bd565b609b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000609754600014156102aa575090565b6097546098546102ba908461098c565b6102c4919061096a565b92915050565b6065546001600160a01b031633146103295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610333600061086b565b565b6040516385425f4f60e01b81526004810182905260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906385425f4f9060240160206040518083038186803b15801561039a57600080fd5b505afa1580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d291906108e1565b90506000816001600160a01b0316638aec85426040518163ffffffff1660e01b815260040160206040518083038186803b15801561040f57600080fd5b505afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104479190610939565b60405163a5a6cd0b60e01b8152600481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a5a6cd0b90602401602060405180830381600087803b1580156104ac57600080fd5b505af11580156104c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e491906108fe565b50609b54604051632c7f22b560e21b815260048101869052602481018390526000916001600160a01b03169063b1fc8ad49060440160206040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610939565b9050818111156105e3576040805162461bcd60e51b81526020600482015260248101919091527f5374616b696e67506f6f6c50726f6475636572496d706c3a20636f6d6d69737360448201527f696f6e2069732067726561746572207468616e20626c6f636b207265776172646064820152608401610320565b8015610715577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb61062a6065546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260248101849052604401602060405180830381600087803b15801561067257600080fd5b505af1158015610686573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106aa91906108fe565b6107155760405162461bcd60e51b815260206004820152603660248201527f5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c6564206044820152753a37903a3930b739b332b91031b7b6b6b4b9b9b4b7b760511b6064820152608401610320565b600061072182846109ab565b905080609860008282546107359190610952565b909155505060408051848152602081018490527fbb9ac692e0e3001a628f86a894f03da4ced5df81886fec577036664ed70a59cb910160405180910390a150600195945050505050565b600060985460001415610790575090565b6098546097546102ba908461098c565b6065546001600160a01b031633146107fa5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610320565b6001600160a01b03811661085f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610320565b6108688161086b565b50565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156108cf57600080fd5b81356108da816109d8565b9392505050565b6000602082840312156108f357600080fd5b81516108da816109d8565b60006020828403121561091057600080fd5b815180151581146108da57600080fd5b60006020828403121561093257600080fd5b5035919050565b60006020828403121561094b57600080fd5b5051919050565b60008219821115610965576109656109c2565b500190565b60008261098757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156109a6576109a66109c2565b500290565b6000828210156109bd576109bd6109c2565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461086857600080fdfea2646970667358221220f18bb80e31b2cd4bec6c8ffeba130cfe4465d3484d8dbb602996889bf37458ab64736f6c63430008060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "produceBlock(uint256)": {
        "returns": {
          "_0": "true when everything went fine"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_2976": {
          "entryPoint": null,
          "id": 2976,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "abi_decode_address_fromMemory": {
          "entryPoint": 77,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_address_fromMemory": {
          "entryPoint": 105,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:491:40",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:40",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:117:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "84:22:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "99:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "93:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:13:40"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "84:5:40"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "169:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "178:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "181:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "171:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "171:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "171:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "128:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "139:5:40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "154:3:40",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "159:1:40",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:3:40"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "150:11:40"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "163:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:19:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "135:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "135:31:40"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "125:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "125:42:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "118:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:50:40"
                      },
                      "nodeType": "YulIf",
                      "src": "115:2:40"
                    }
                  ]
                },
                "name": "abi_decode_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "53:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "64:5:40",
                    "type": ""
                  }
                ],
                "src": "14:177:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "294:195:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "340:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "349:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "352:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "342:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "342:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "342:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "315:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "324:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "311:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "311:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "336:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "307:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "307:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "304:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "365:50:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "405:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "375:29:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "375:40:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "365:6:40"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "424:59:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "468:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "479:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "464:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "464:18:40"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "434:29:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "434:49:40"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "424:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "252:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "263:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "275:6:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "283:6:40",
                    "type": ""
                  }
                ],
                "src": "196:293:40"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
          "id": 40,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAFF CODESIZE SUB DUP1 PUSH2 0xAFF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP3 DUP4 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 SHL AND PUSH1 0xA0 MSTORE PUSH2 0x9C JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x85 DUP4 PUSH2 0x4D JUMP JUMPDEST SWAP2 POP PUSH2 0x93 PUSH1 0x20 DUP5 ADD PUSH2 0x4D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0xA23 PUSH2 0xDC PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x218 ADD MSTORE DUP2 DUP2 PUSH2 0x358 ADD MSTORE PUSH2 0x460 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x18F ADD MSTORE PUSH2 0x5EB ADD MSTORE PUSH2 0xA23 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5A6CD0B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xF6EFBD14 EQ PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA5A6CD0B EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x64FFC3F4 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH2 0x152 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x1B1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x152 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x9B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2AA JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x98 SLOAD PUSH2 0x2BA SWAP1 DUP5 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x96A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH1 0x0 PUSH2 0x86B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x85425F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x85425F4F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8AEC8542 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x423 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA5A6CD0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA5A6CD0B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST POP PUSH1 0x9B SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C7F22B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1FC8AD4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A20636F6D6D697373 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696F6E2069732067726561746572207468616E20626C6F636B20726577617264 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x320 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x715 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x62A PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A206661696C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3A37903A3930B739B332B91031B7B6B6B4B9B9B4B7B7 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x320 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x721 DUP3 DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xBB9AC692E0E3001A628F86A894F03DA4CED5DF81886FEC577036664ED70A59CB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x790 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH2 0x2BA SWAP1 DUP5 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x320 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x86B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8DA DUP2 PUSH2 0x9D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8DA DUP2 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x965 PUSH2 0x9C2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x987 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9A6 JUMPI PUSH2 0x9A6 PUSH2 0x9C2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BD PUSH2 0x9C2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL DUP12 0xB8 0xE BALANCE 0xB2 0xCD 0x4B 0xEC PUSH13 0x8FFEBA130CFE4465D3484D8DBB PUSH1 0x29 SWAP7 DUP9 SWAP12 RETURN PUSH21 0x58AB64736F6C634300080600330000000000000000 ",
      "sourceMap": "904:1871:25:-:0;;;1069:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1120:20:25;;;;;;;;1150:16;;;;;904:1871;;14:177:40;93:13;;-1:-1:-1;;;;;135:31:40;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:2;;;352:1;349;342:12;304:2;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;294:195;;;;;:::o;:::-;904:1871:25;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@__StakingPoolProducer_init_2988": {
          "entryPoint": null,
          "id": 2988,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_msgSender_952": {
          "entryPoint": null,
          "id": 952,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setOwner_759": {
          "entryPoint": 2155,
          "id": 759,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@amountToShares_2425": {
          "entryPoint": 1919,
          "id": 2425,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@amount_2389": {
          "entryPoint": null,
          "id": 2389,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@ctsi_2950": {
          "entryPoint": null,
          "id": 2950,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@fee_2956": {
          "entryPoint": null,
          "id": 2956,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@owner_689": {
          "entryPoint": null,
          "id": 689,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@paused_863": {
          "entryPoint": null,
          "id": 863,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pos_2953": {
          "entryPoint": null,
          "id": 2953,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@produceBlock_3067": {
          "entryPoint": 821,
          "id": 3067,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@renounceOwnership_717": {
          "entryPoint": 714,
          "id": 717,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@requiredLiquidity_2391": {
          "entryPoint": null,
          "id": 2391,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@sharesToAmount_2447": {
          "entryPoint": 665,
          "id": 2447,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@shares_2387": {
          "entryPoint": null,
          "id": 2387,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@transferOwnership_740": {
          "entryPoint": 1952,
          "id": 740,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@userBalance_2403": {
          "entryPoint": null,
          "id": 2403,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 2237,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 2273,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 2302,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 2336,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": 2361,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_Fee_$3720__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IERC20_$1866__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_8e427e8a0b548882202ad2e27f47a3fb116c2c841cdc5eb652e87b85d698ced2__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_ca764e689c84842fa4bc8a0dbe47866fb2fd0869cf89f86e0486201c6e1e4056__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 2386,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 2410,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 2444,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 2475,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 2498,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_address": {
          "entryPoint": 2520,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:5825:40",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:40",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:177:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "94:2:40"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "155:36:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "168:12:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:40"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "159:5:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "225:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "200:24:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "200:31:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "200:31:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "240:15:40",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "250:5:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "240:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:40",
                    "type": ""
                  }
                ],
                "src": "14:247:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "347:170:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "393:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "402:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "405:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "395:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "395:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "395:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "368:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "377:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "364:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "364:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "389:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "357:2:40"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "418:29:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "437:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "431:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "431:16:40"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "422:5:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "481:5:40"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "456:24:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:31:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "456:31:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "496:15:40",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "506:5:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "496:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "313:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "324:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "336:6:40",
                    "type": ""
                  }
                ],
                "src": "266:251:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "600:199:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "646:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "655:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "658:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "648:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "648:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "648:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "621:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "630:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "617:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "617:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "642:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "613:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "613:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "610:2:40"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "671:29:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "690:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "684:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:16:40"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "675:5:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "753:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "762:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "765:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "755:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "755:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "755:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "722:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "743:5:40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "736:6:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "736:13:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "729:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "729:21:40"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "719:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "719:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "712:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:40:40"
                      },
                      "nodeType": "YulIf",
                      "src": "709:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "778:15:40",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "788:5:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "778:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "566:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "577:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "589:6:40",
                    "type": ""
                  }
                ],
                "src": "522:277:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "874:110:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "920:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "929:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "932:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "922:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "922:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "922:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "895:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "904:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "891:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "891:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "916:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "887:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "887:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "884:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "945:33:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "968:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "955:12:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "955:23:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "945:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "840:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "851:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "863:6:40",
                    "type": ""
                  }
                ],
                "src": "804:180:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1070:103:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1116:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1125:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1128:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1118:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1118:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1118:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1091:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1100:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1087:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1087:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1112:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1083:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1083:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "1080:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1141:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1157:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1151:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1151:16:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1141:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1036:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1047:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1059:6:40",
                    "type": ""
                  }
                ],
                "src": "989:184:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1279:102:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1289:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1301:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1312:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1297:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1289:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1331:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1346:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1362:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1367:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1358:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1358:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1371:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1354:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1354:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1342:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1342:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1324:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1324:51:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1324:51:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1248:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1259:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1270:4:40",
                    "type": ""
                  }
                ],
                "src": "1178:203:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1515:145:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1525:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1537:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1548:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1533:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1533:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1525:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1567:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1582:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1598:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1603:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1594:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1594:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1607:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1590:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1590:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1578:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1578:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1560:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1560:51:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1560:51:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1631:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1642:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1627:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1627:18:40"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1647:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1620:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1620:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1620:34:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1476:9:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1487:6:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1495:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1506:4:40",
                    "type": ""
                  }
                ],
                "src": "1386:274:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1760:92:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1770:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1782:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1793:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1778:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1778:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1770:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1812:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1837:6:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1830:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1830:14:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1823:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1823:22:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1805:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1805:41:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1805:41:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1729:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1740:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1751:4:40",
                    "type": ""
                  }
                ],
                "src": "1665:187:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1970:102:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1980:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1992:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2003:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1988:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1988:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1980:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2022:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2037:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2053:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2058:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2049:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2049:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2062:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2045:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2045:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2033:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2033:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2015:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2015:51:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2015:51:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_Fee_$3720__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1939:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1950:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1961:4:40",
                    "type": ""
                  }
                ],
                "src": "1857:215:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2193:102:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2203:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2215:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2226:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2211:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2211:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2203:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2245:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2260:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2276:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2281:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2272:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2272:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2285:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2268:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2268:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2256:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2256:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2238:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2238:51:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2238:51:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IERC20_$1866__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2162:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2173:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2184:4:40",
                    "type": ""
                  }
                ],
                "src": "2077:218:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2412:102:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2422:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2434:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2445:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2430:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2430:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2422:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2464:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2479:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2495:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2500:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2491:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2491:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2504:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2487:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2487:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2475:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2475:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2457:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2457:51:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2457:51:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2381:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2392:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2403:4:40",
                    "type": ""
                  }
                ],
                "src": "2300:214:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2693:228:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2710:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2721:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2703:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2703:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2703:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2744:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2755:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2740:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2740:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:40",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2733:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2733:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2733:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2783:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2794:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2779:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2779:18:40"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2799:34:40",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2772:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2772:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2772:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2854:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2865:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2850:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2850:18:40"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2870:8:40",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2843:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:36:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2843:36:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2888:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2900:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2911:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2896:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2896:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2888:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2670:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2684:4:40",
                    "type": ""
                  }
                ],
                "src": "2519:402:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3100:254:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3117:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3128:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3110:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3110:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3110:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3151:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3162:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3147:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3147:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3167:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3140:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3140:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3140:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3190:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3201:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3186:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3186:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c50726f6475636572496d706c3a20636f6d6d697373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3206:34:40",
                            "type": "",
                            "value": "StakingPoolProducerImpl: commiss"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3179:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3179:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3179:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3261:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3272:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3257:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3257:18:40"
                          },
                          {
                            "hexValue": "696f6e2069732067726561746572207468616e20626c6f636b20726577617264",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3277:34:40",
                            "type": "",
                            "value": "ion is greater than block reward"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3250:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3250:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3250:62:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3321:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3333:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3344:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3329:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3329:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3321:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8e427e8a0b548882202ad2e27f47a3fb116c2c841cdc5eb652e87b85d698ced2__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3077:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3091:4:40",
                    "type": ""
                  }
                ],
                "src": "2926:428:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3533:182:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3550:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3561:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3543:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3543:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3543:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3584:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3595:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3580:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3580:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3600:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3573:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3573:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3573:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3623:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3634:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3619:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3619:18:40"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3639:34:40",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3612:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3612:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3612:62:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3683:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3695:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3706:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3691:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3691:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3683:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3510:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3524:4:40",
                    "type": ""
                  }
                ],
                "src": "3359:356:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3894:244:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3911:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3922:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3904:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3904:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3904:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3945:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3956:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3941:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3941:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3961:2:40",
                            "type": "",
                            "value": "54"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3934:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3934:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3934:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3984:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3995:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3980:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3980:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c50726f6475636572496d706c3a206661696c656420",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4000:34:40",
                            "type": "",
                            "value": "StakingPoolProducerImpl: failed "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3973:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3973:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3973:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4055:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4066:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4051:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4051:18:40"
                          },
                          {
                            "hexValue": "746f207472616e7366657220636f6d6d697373696f6e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4071:24:40",
                            "type": "",
                            "value": "to transfer commission"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4044:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4044:52:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4044:52:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4105:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4117:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4128:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4113:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4113:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4105:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_ca764e689c84842fa4bc8a0dbe47866fb2fd0869cf89f86e0486201c6e1e4056__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3871:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3885:4:40",
                    "type": ""
                  }
                ],
                "src": "3720:418:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4244:76:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4254:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4266:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4277:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4262:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4262:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4254:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4296:9:40"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4307:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4289:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4289:25:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4289:25:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4213:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4224:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4235:4:40",
                    "type": ""
                  }
                ],
                "src": "4143:177:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4454:119:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4464:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4476:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4487:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4472:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4472:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4464:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4506:9:40"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4517:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4499:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4499:25:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4499:25:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4544:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4555:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4540:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4540:18:40"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4560:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4533:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4533:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4533:34:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4415:9:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4426:6:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4434:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4445:4:40",
                    "type": ""
                  }
                ],
                "src": "4325:248:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4735:162:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4745:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4757:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4768:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4753:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4753:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4745:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4787:9:40"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4798:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4780:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4780:25:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4780:25:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4825:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4836:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4821:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4821:18:40"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4841:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4814:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4814:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4814:34:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4868:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4879:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4864:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4864:18:40"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4884:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4857:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4857:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4857:34:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4688:9:40",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4699:6:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4707:6:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4715:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4726:4:40",
                    "type": ""
                  }
                ],
                "src": "4578:319:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4950:80:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4977:22:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4979:16:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4979:18:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4979:18:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4966:1:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4973:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4969:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4969:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4963:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4963:13:40"
                      },
                      "nodeType": "YulIf",
                      "src": "4960:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5008:16:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5019:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5022:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5015:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5015:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "5008:3:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "4933:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "4936:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "4942:3:40",
                    "type": ""
                  }
                ],
                "src": "4902:128:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5081:171:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5112:111:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5133:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5140:3:40",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5145:10:40",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "5136:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5136:20:40"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5126:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5126:31:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5126:31:40"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5177:1:40",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5180:4:40",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5170:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5170:15:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5170:15:40"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5205:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5208:4:40",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5198:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5198:15:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5198:15:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5101:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5094:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5094:9:40"
                      },
                      "nodeType": "YulIf",
                      "src": "5091:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5232:14:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5241:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5244:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "5237:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5237:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "5232:1:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "5066:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "5069:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "5075:1:40",
                    "type": ""
                  }
                ],
                "src": "5035:217:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5309:116:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5368:22:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "5370:16:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5370:18:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5370:18:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5340:1:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5333:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5333:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5326:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5326:17:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "5348:1:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5359:1:40",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5355:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5355:6:40"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5363:1:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "5351:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5351:14:40"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "5345:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5345:21:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5322:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5322:45:40"
                      },
                      "nodeType": "YulIf",
                      "src": "5319:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5399:20:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5414:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5417:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "5410:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5410:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "5399:7:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "5288:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "5291:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "5297:7:40",
                    "type": ""
                  }
                ],
                "src": "5257:168:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5479:76:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5501:22:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "5503:16:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5503:18:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5503:18:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5495:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5498:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5492:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5492:8:40"
                      },
                      "nodeType": "YulIf",
                      "src": "5489:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5532:17:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5544:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5547:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5540:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5540:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "5532:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "5461:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "5464:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "5470:4:40",
                    "type": ""
                  }
                ],
                "src": "5430:125:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5592:95:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5609:1:40",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5616:3:40",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5621:10:40",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5612:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5612:20:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5602:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5602:31:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5602:31:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5649:1:40",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5652:4:40",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5642:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5642:15:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5642:15:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5673:1:40",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5676:4:40",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5666:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5666:15:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5666:15:40"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "5560:127:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5737:86:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5801:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5810:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5813:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5803:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5803:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5803:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5760:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5771:5:40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5786:3:40",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5791:1:40",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "5782:3:40"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5782:11:40"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5795:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5778:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5778:19:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5767:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5767:31:40"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "5757:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5757:42:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5750:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5750:50:40"
                      },
                      "nodeType": "YulIf",
                      "src": "5747:2:40"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "5726:5:40",
                    "type": ""
                  }
                ],
                "src": "5692:131:40"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_Fee_$3720__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1866__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IPoS_$61__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8e427e8a0b548882202ad2e27f47a3fb116c2c841cdc5eb652e87b85d698ced2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"StakingPoolProducerImpl: commiss\")\n        mstore(add(headStart, 96), \"ion is greater than block reward\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca764e689c84842fa4bc8a0dbe47866fb2fd0869cf89f86e0486201c6e1e4056__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"StakingPoolProducerImpl: failed \")\n        mstore(add(headStart, 96), \"to transfer commission\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
          "id": 40,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "2950": [
          {
            "length": 32,
            "start": 399
          },
          {
            "length": 32,
            "start": 1515
          }
        ],
        "2953": [
          {
            "length": 32,
            "start": 536
          },
          {
            "length": 32,
            "start": 856
          },
          {
            "length": 32,
            "start": 1120
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA5A6CD0B GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDDCA3F43 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xF6EFBD14 EQ PUSH2 0x269 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA5A6CD0B EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x64FFC3F4 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x299 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x2CA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B1 JUMP JUMPDEST PUSH2 0x17A PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH2 0x152 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x920 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST PUSH2 0x1B1 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x9B SLOAD PUSH2 0x1B1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x152 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BD JUMP JUMPDEST PUSH2 0x7A0 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x9B DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2AA JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x98 SLOAD PUSH2 0x2BA SWAP1 DUP5 PUSH2 0x98C JUMP JUMPDEST PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x96A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x329 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x333 PUSH1 0x0 PUSH2 0x86B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x85425F4F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x85425F4F SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x8E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8AEC8542 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x423 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x447 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA5A6CD0B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA5A6CD0B SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST POP PUSH1 0x9B SLOAD PUSH1 0x40 MLOAD PUSH4 0x2C7F22B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xB1FC8AD4 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x569 SWAP2 SWAP1 PUSH2 0x939 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x5E3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A20636F6D6D697373 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696F6E2069732067726561746572207468616E20626C6F636B20726577617264 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x320 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x715 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH2 0x62A PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x686 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C50726F6475636572496D706C3A206661696C656420 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3A37903A3930B739B332B91031B7B6B6B4B9B9B4B7B7 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x320 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x721 DUP3 DUP5 PUSH2 0x9AB JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x952 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xBB9AC692E0E3001A628F86A894F03DA4CED5DF81886FEC577036664ED70A59CB SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x790 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH2 0x2BA SWAP1 DUP5 PUSH2 0x98C JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x320 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x85F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x320 JUMP JUMPDEST PUSH2 0x868 DUP2 PUSH2 0x86B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x8DA DUP2 PUSH2 0x9D8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x8DA DUP2 PUSH2 0x9D8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x965 JUMPI PUSH2 0x965 PUSH2 0x9C2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x987 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9A6 JUMPI PUSH2 0x9A6 PUSH2 0x9C2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x9BD JUMPI PUSH2 0x9BD PUSH2 0x9C2 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x868 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL DUP12 0xB8 0xE BALANCE 0xB2 0xCD 0x4B 0xEC PUSH13 0x8FFEBA130CFE4465D3484D8DBB PUSH1 0x29 SWAP7 DUP9 SWAP12 RETURN PUSH21 0x58AB64736F6C634300080600330000000000000000 ",
      "sourceMap": "904:1871:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1433:50:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4780:25:40;;;4836:2;4821:18;;4814:34;;;;4864:18;;;4857:34;4768:2;4753:18;1433:50:21;;;;;;;;975:21;;;;;;;;;4289:25:40;;;4277:2;4262:18;975:21:21;4244:76:40;1766:270:21;;;;;;:::i;:::-;;:::i;1310:84:9:-;1380:7;;;;1310:84;;;1830:14:40;;1823:22;1805:41;;1793:2;1778:18;1310:84:9;1760:92:40;983:28:25;;;;;;;;-1:-1:-1;;;;;1342:32:40;;;1324:51;;1312:2;1297:18;983:28:25;1279:102:40;1871:92:7;;;:::i;:::-;;1239:85;1311:6;;-1:-1:-1;;;;;1311:6:7;1239:85;;1421:1352:25;;;;;;:::i;:::-;;:::i;1028:21:21:-;;;;;;1490:270;;;;;;:::i;:::-;;:::i;1017:25:25:-;;;;;1048:14;;;;;-1:-1:-1;;;;;1048:14:25;;;1106:32:21;;;;;;2112:189:7;;;;;;:::i;:::-;;:::i;1179:89:25:-;;;;;;:::i;:::-;1246:3;:15;;-1:-1:-1;;;;;;1246:15:25;-1:-1:-1;;;;;1246:15:25;;;;;;;;;;1179:89;1766:270:21;1828:7;1884:6;;1894:1;1884:11;1880:106;;;-1:-1:-1;1968:7:21;1766:270::o;1880:106::-;2023:6;;2013;;2003:16;;:7;:16;:::i;:::-;2002:27;;;;:::i;:::-;1995:34;1766:270;-1:-1:-1;;1766:270:21:o;1871:92:7:-;1311:6;;-1:-1:-1;;;;;1311:6:7;901:10:10;1451:23:7;1443:68;;;;-1:-1:-1;;;1443:68:7;;3561:2:40;1443:68:7;;;3543:21:40;;;3580:18;;;3573:30;3639:34;3619:18;;;3612:62;3691:18;;1443:68:7;;;;;;;;;1935:21:::1;1953:1;1935:9;:21::i;:::-;1871:92::o:0;1421:1352:25:-;1561:35;;-1:-1:-1;;;1561:35:25;;;;;4289:25:40;;;1486:4:25;;;;-1:-1:-1;;;;;1561:3:25;:27;;;;4262:18:40;;1561:35:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1502:104;;1645:14;1662:13;-1:-1:-1;;;;;1662:30:25;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1741:24;;-1:-1:-1;;;1741:24:25;;;;;4289:25:40;;;1645:49:25;;-1:-1:-1;1741:3:25;-1:-1:-1;;;;;1741:16:25;;;;4262:18:40;;1741:24:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1896:3:25;;:33;;-1:-1:-1;;;1896:33:25;;;;;4499:25:40;;;4540:18;;;4533:34;;;1875:18:25;;-1:-1:-1;;;;;1896:3:25;;:17;;4472:18:40;;1896:33:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1875:54;;1974:6;1960:10;:20;;1939:131;;;;;-1:-1:-1;;;1939:131:25;;3128:2:40;1939:131:25;;;3110:21:40;3147:18;;;3140:30;;;;3206:34;3186:18;;;3179:62;3277:34;3257:18;;;3250:62;3329:19;;1939:131:25;3100:254:40;1939:131:25;2135:14;;2131:192;;2190:4;-1:-1:-1;;;;;2190:13:25;;2204:7;1311:6:7;;-1:-1:-1;;;;;1311:6:7;;1239:85;2204:7:25;2190:34;;-1:-1:-1;;;;;;2190:34:25;;;;;;;-1:-1:-1;;;;;1578:32:40;;;2190:34:25;;;1560:51:40;1627:18;;;1620:34;;;1533:18;;2190:34:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2165:147;;;;-1:-1:-1;;;2165:147:25;;3922:2:40;2165:147:25;;;3904:21:40;3961:2;3941:18;;;3934:30;4000:34;3980:18;;;3973:62;-1:-1:-1;;;4051:18:40;;;4044:52;4113:19;;2165:147:25;3894:244:40;2165:147:25;2333:23;2359:19;2368:10;2359:6;:19;:::i;:::-;2333:45;;2568:15;2558:6;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;2711:33:25;;;4499:25:40;;;4555:2;4540:18;;4533:34;;;2711:33:25;;4472:18:40;2711:33:25;;;;;;;-1:-1:-1;2762:4:25;;1421:1352;-1:-1:-1;;;;;1421:1352:25:o;1490:270:21:-;1552:7;1608:6;;1618:1;1608:11;1604:106;;;-1:-1:-1;1692:7:21;1490:270::o;1604:106::-;1747:6;;1737;;1727:16;;:7;:16;:::i;2112:189:7:-;1311:6;;-1:-1:-1;;;;;1311:6:7;901:10:10;1451:23:7;1443:68;;;;-1:-1:-1;;;1443:68:7;;3561:2:40;1443:68:7;;;3543:21:40;;;3580:18;;;3573:30;3639:34;3619:18;;;3612:62;3691:18;;1443:68:7;3533:182:40;1443:68:7;-1:-1:-1;;;;;2200:22:7;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:7;;2721:2:40;2192:73:7::1;::::0;::::1;2703:21:40::0;2760:2;2740:18;;;2733:30;2799:34;2779:18;;;2772:62;-1:-1:-1;;;2850:18:40;;;2843:36;2896:19;;2192:73:7::1;2693:228:40::0;2192:73:7::1;2275:19;2285:8;2275:9;:19::i;:::-;2112:189:::0;:::o;2307:169::-;2381:6;;;-1:-1:-1;;;;;2397:17:7;;;-1:-1:-1;;;;;;2397:17:7;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;2362:16;;2429:40;2352:124;2307:169;:::o;14:247:40:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;84:177;-1:-1:-1;;;84:177:40:o;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:2;;;405:1;402;395:12;357:2;437:9;431:16;456:31;481:5;456:31;:::i;522:277::-;589:6;642:2;630:9;621:7;617:23;613:32;610:2;;;658:1;655;648:12;610:2;690:9;684:16;743:5;736:13;729:21;722:5;719:32;709:2;;765:1;762;755:12;804:180;863:6;916:2;904:9;895:7;891:23;887:32;884:2;;;932:1;929;922:12;884:2;-1:-1:-1;955:23:40;;874:110;-1:-1:-1;874:110:40:o;989:184::-;1059:6;1112:2;1100:9;1091:7;1087:23;1083:32;1080:2;;;1128:1;1125;1118:12;1080:2;-1:-1:-1;1151:16:40;;1070:103;-1:-1:-1;1070:103:40:o;4902:128::-;4942:3;4973:1;4969:6;4966:1;4963:13;4960:2;;;4979:18;;:::i;:::-;-1:-1:-1;5015:9:40;;4950:80::o;5035:217::-;5075:1;5101;5091:2;;5145:10;5140:3;5136:20;5133:1;5126:31;5180:4;5177:1;5170:15;5208:4;5205:1;5198:15;5091:2;-1:-1:-1;5237:9:40;;5081:171::o;5257:168::-;5297:7;5363:1;5359;5355:6;5351:14;5348:1;5345:21;5340:1;5333:9;5326:17;5322:45;5319:2;;;5370:18;;:::i;:::-;-1:-1:-1;5410:9:40;;5309:116::o;5430:125::-;5470:4;5498:1;5495;5492:8;5489:2;;;5503:18;;:::i;:::-;-1:-1:-1;5540:9:40;;5479:76::o;5560:127::-;5621:10;5616:3;5612:20;5609:1;5602:31;5652:4;5649:1;5642:15;5676:4;5673:1;5666:15;5692:131;-1:-1:-1;;;;;5767:31:40;;5757:42;;5747:2;;5813:1;5810;5803:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "519000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "__StakingPoolProducer_init(address)": "24641",
        "amount()": "2340",
        "amountToShares(uint256)": "6842",
        "ctsi()": "infinite",
        "fee()": "2359",
        "owner()": "2420",
        "paused()": "2316",
        "pos()": "infinite",
        "produceBlock(uint256)": "infinite",
        "renounceOwnership()": "28184",
        "requiredLiquidity()": "2339",
        "shares()": "2341",
        "sharesToAmount(uint256)": "6843",
        "transferOwnership(address)": "infinite",
        "userBalance(address)": "6801"
      }
    },
    "methodIdentifiers": {
      "__StakingPoolProducer_init(address)": "f6efbd14",
      "amount()": "aa8c217c",
      "amountToShares(uint256)": "b811540e",
      "ctsi()": "64ffc3f4",
      "fee()": "ddca3f43",
      "owner()": "8da5cb5b",
      "paused()": "5c975abb",
      "pos()": "c56551b6",
      "produceBlock(uint256)": "a5a6cd0b",
      "renounceOwnership()": "715018a6",
      "requiredLiquidity()": "e366b7bb",
      "shares()": "03314efa",
      "sharesToAmount(uint256)": "555d8ebb",
      "transferOwnership(address)": "f2fde38b",
      "userBalance(address)": "0103c92b"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ctsi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pos\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"BlockProduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_fee\",\"type\":\"address\"}],\"name\":\"__StakingPoolProducer_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"amountToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ctsi\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"contract Fee\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pos\",\"outputs\":[{\"internalType\":\"contract IPoS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"produceBlock\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"sharesToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"produceBlock(uint256)\":{\"returns\":{\"_0\":\"true when everything went fine\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"BlockProduced(uint256,uint256)\":{\"notice\":\"this event is emitted at every produceBlock call reward is the block reward commission is how much CTSI is directed to the pool owner\"}},\"kind\":\"user\",\"methods\":{\"produceBlock(uint256)\":{\"notice\":\"routes produceBlock to POS contract and updates internal states of the pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolProducerImpl.sol\":\"StakingPoolProducerImpl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/pos/contracts/IPoS.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface PoS\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IPoS {\\n    /// @notice Produce a block\\n    /// @param _index the index of the instance of pos you want to interact with\\n    /// @dev this function can only be called by a worker, user never calls it directly\\n    function produceBlock(uint256 _index) external returns (bool);\\n\\n    /// @notice Get reward manager address\\n    /// @param _index index of instance\\n    /// @return address of instance's RewardManager\\n    function getRewardManagerAddress(uint256 _index)\\n        external\\n        view\\n        returns (address);\\n\\n    /// @notice Get block selector address\\n    /// @param _index index of instance\\n    /// @return address of instance's block selector\\n    function getBlockSelectorAddress(uint256 _index)\\n        external\\n        view\\n        returns (address);\\n\\n    /// @notice Get block selector index\\n    /// @param _index index of instance\\n    /// @return index of instance's block selector\\n    function getBlockSelectorIndex(uint256 _index)\\n        external\\n        view\\n        returns (uint256);\\n\\n    /// @notice Get staking address\\n    /// @param _index index of instance\\n    /// @return address of instance's staking contract\\n    function getStakingAddress(uint256 _index) external view returns (address);\\n\\n    /// @notice Get state of a particular instance\\n    /// @param _index index of instance\\n    /// @param _user address of user\\n    /// @return bool if user is eligible to produce next block\\n    /// @return address of user that was chosen to build the block\\n    /// @return current reward paid by the network for that block\\n    function getState(uint256 _index, address _user)\\n        external\\n        view\\n        returns (\\n            bool,\\n            address,\\n            uint256\\n        );\\n\\n    function terminate(uint256 _index) external;\\n}\\n\",\"keccak256\":\"0xf22d440f723b8d80ef60a20bf38f5a3ea16fd604a2c485e1c969bec0b24e8889\",\"license\":\"Apache-2.0\"},\"@cartesi/pos/contracts/IRewardManager.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface RewardManager\\npragma solidity >=0.7.0 <0.9.0;\\n\\ninterface IRewardManager {\\n    /// @notice Rewards address\\n    /// @param _address address be rewarded\\n    /// @param _amount reward\\n    /// @dev only the pos contract can call this\\n    function reward(address _address, uint256 _amount) external;\\n\\n    /// @notice Get RewardManager's balance\\n    function getBalance() external view returns (uint256);\\n\\n    /// @notice Get current reward amount\\n    function getCurrentReward() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf3d3fb9853d55c0658f45dfd072032291c975138e99cd8cedb0d6550848e2813\",\"license\":\"Apache-2.0\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/StakingPoolData.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\ncontract StakingPoolData is\\n    Initializable,\\n    PausableUpgradeable,\\n    OwnableUpgradeable\\n{\\n    uint256 public shares; // total number of shares\\n    uint256 public amount; // amount of staked tokens (no matter where it is)\\n    uint256 public requiredLiquidity; // amount of required tokens for withdraw requests\\n\\n    struct UserBalance {\\n        uint256 shares; // amount of shares beloging to this user\\n        uint256 released; // amount of tokens released to this user\\n        uint256 unstakeTimestamp; // timestamp of when user can unstake\\n    }\\n    mapping(address => UserBalance) public userBalance;\\n\\n    function amountToShares(uint256 _amount) public view returns (uint256) {\\n        // TODO: rounding errors\\n        if (amount == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _amount;\\n        }\\n        return (_amount * shares) / amount;\\n    }\\n\\n    function sharesToAmount(uint256 _shares) public view returns (uint256) {\\n        // TODO: rounding errors\\n        if (shares == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _shares;\\n        }\\n        return (_shares * amount) / shares;\\n    }\\n}\\n\",\"keccak256\":\"0xf4071d9ebdf19f1366d7fb6317bf87a89bd27699dfd691ef5e861aa5517664ab\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolProducerImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IPoS.sol\\\";\\nimport \\\"@cartesi/pos/contracts/IRewardManager.sol\\\";\\nimport \\\"./interfaces/Fee.sol\\\";\\nimport \\\"./interfaces/StakingPoolProducer.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolProducerImpl is StakingPoolProducer, StakingPoolData {\\n    IERC20 public immutable ctsi;\\n    IPoS public immutable pos;\\n    Fee public fee;\\n\\n    constructor(address _ctsi, address _pos) {\\n        ctsi = IERC20(_ctsi);\\n        pos = IPoS(_pos);\\n    }\\n\\n    function __StakingPoolProducer_init(address _fee) public {\\n        fee = Fee(_fee);\\n    }\\n\\n    /// @notice routes produceBlock to POS contract and\\n    /// updates internal states of the pool\\n    /// @return true when everything went fine\\n    function produceBlock(uint256 _index) external override returns (bool) {\\n        IRewardManager rewardManager = IRewardManager(\\n            pos.getRewardManagerAddress(_index)\\n        );\\n\\n        // get block reward\\n        uint256 reward = rewardManager.getCurrentReward();\\n\\n        // produce block in the PoS\\n        pos.produceBlock(_index);\\n\\n        // calculate pool commission\\n        // TODO: where do we require that fee is initialized?\\n        uint256 commission = fee.getCommission(_index, reward);\\n        require(\\n            commission <= reward,\\n            \\\"StakingPoolProducerImpl: commission is greater than block reward\\\"\\n        );\\n\\n        // send commission directly to pool owner\\n        if (commission > 0) {\\n            require(\\n                ctsi.transfer(owner(), commission),\\n                \\\"StakingPoolProducerImpl: failed to transfer commission\\\"\\n            );\\n        }\\n\\n        uint256 remainingReward = reward - commission; // this is a safety check\\n        // if commission is over the reward amount, it will underflow\\n\\n        // increase pool amount, this will change the pool exchange rate\\n        amount += remainingReward;\\n\\n        // remainingReward is part of the balance, so it will automatically be staked by StakingPoolStakingImpl\\n        emit BlockProduced(reward, commission);\\n\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x358bc5dc515164c23d011bcf74ca213c688dea54a375577d039bba80ef69b597\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/Fee.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Calculator of pool owner commission for each block reward\\n/// @author Danilo Tuler\\n/// @notice This provides flexibility for different commission models\\ninterface Fee {\\n    /// @notice calculates the total amount of the reward that will be directed to the pool owner\\n    /// @return amount of tokens taken by the pool owner as commission\\n    function getCommission(uint256 posIndex, uint256 rewardAmount)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6f0bafc511d75503c33709e4bb0d6c8cf191f06331e7fa4505540d8d1836e55a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolProducer.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool and the PoS block production.\\n/// @author Danilo Tuler\\n/// @notice This interface provides an opportunity to handle the necessary logic\\n/// after a block is produced.\\n/// A commission is taken from the block reward, and the remaining stays in the pool,\\n/// raising the pool share value, and being further staked.\\ninterface StakingPoolProducer {\\n    /// @notice routes produceBlock to POS contract and\\n    /// updates internal states of the pool\\n    /// @return true when everything went fine\\n    function produceBlock(uint256 _index) external returns (bool);\\n\\n    /// @notice this event is emitted at every produceBlock call\\n    /// reward is the block reward\\n    /// commission is how much CTSI is directed to the pool owner\\n    event BlockProduced(uint256 reward, uint256 commission);\\n}\\n\",\"keccak256\":\"0xf9895f06eff4ce10a53a1e4d4138cc3784584b52975e69757a73dc85bebb6602\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 770,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 773,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 965,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 831,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "_paused",
        "offset": 0,
        "slot": "51",
        "type": "t_bool"
      },
      {
        "astId": 922,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 650,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 763,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 2387,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "shares",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 2389,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "amount",
        "offset": 0,
        "slot": "152",
        "type": "t_uint256"
      },
      {
        "astId": 2391,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "requiredLiquidity",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 2403,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "userBalance",
        "offset": 0,
        "slot": "154",
        "type": "t_mapping(t_address,t_struct(UserBalance)2398_storage)"
      },
      {
        "astId": 2956,
        "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
        "label": "fee",
        "offset": 0,
        "slot": "155",
        "type": "t_contract(Fee)3720"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Fee)3720": {
        "encoding": "inplace",
        "label": "contract Fee",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserBalance)2398_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPoolData.UserBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(UserBalance)2398_storage"
      },
      "t_struct(UserBalance)2398_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolData.UserBalance",
        "members": [
          {
            "astId": 2393,
            "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
            "label": "shares",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2395,
            "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
            "label": "released",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2397,
            "contract": "contracts/StakingPoolProducerImpl.sol:StakingPoolProducerImpl",
            "label": "unstakeTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "BlockProduced(uint256,uint256)": {
        "notice": "this event is emitted at every produceBlock call reward is the block reward commission is how much CTSI is directed to the pool owner"
      }
    },
    "kind": "user",
    "methods": {
      "produceBlock(uint256)": {
        "notice": "routes produceBlock to POS contract and updates internal states of the pool"
      }
    },
    "version": 1
  }
}