{
  "contractName": "GasTaxCommission",
  "sourceName": "contracts/GasTaxCommission.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_chainlinkOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_uniswapOracle",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_gas",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newGas",
          "type": "uint256"
        }
      ],
      "name": "GasTaxChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "gas",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasOracle",
      "outputs": [
        {
          "internalType": "contract AggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "getCommission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newGasCommission",
          "type": "uint256"
        }
      ],
      "name": "setGas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60c060405234801561001057600080fd5b5060405161086d38038061086d83398101604081905261002f916100ed565b600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160601b0319606084811b821660805283901b1660a05260018190556040517fd8120d6ff65f04a7663a7fa333122bcf1630c76e6198691647b8b952fd6427f7906100c19083815260200190565b60405180910390a1505050610129565b80516001600160a01b03811681146100e857600080fd5b919050565b60008060006060848603121561010257600080fd5b61010b846100d1565b9250610119602085016100d1565b9150604084015190509250925092565b60805160601c60a05160601c61070d610160600039600081816092015261028f01526000818160d601526101e5015261070d6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610119578063b1fc8ad41461012a578063dd51faa21461013d578063f2fde38b1461015057600080fd5b80632630c12f1461008d5780635d62a8dd146100d15780636ca7c216146100f8578063715018a61461010f575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b61010160015481565b6040519081526020016100c8565b610117610163565b005b6000546001600160a01b03166100b4565b610101610138366004610631565b6101e0565b61011761014b366004610618565b61038f565b61011761015e36600461057f565b610479565b6000546001600160a01b031633146101965760405162461bcd60e51b815260040161018d90610653565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561023c57600080fd5b505afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027491906105af565b905060006001548261028691906106aa565b905060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156102e657600080fd5b505afa1580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e91906105c8565b925092509250816001600160701b03166000141561034457600095505050505050610389565b6000826001600160701b0316846001600160701b03168661036591906106aa565b61036f9190610688565b905087811161037e5780610380565b875b96505050505050505b92915050565b6000546001600160a01b031633146103b95760405162461bcd60e51b815260040161018d90610653565b600154811061043e5760405162461bcd60e51b815260206004820152604560248201527f6e6577476173436f6d6d697373696f6e206e6565647320746f2062652073747260448201527f6963746c7920736d616c6c6572207468616e207468652063757272656e74207660648201526430b63ab29760d91b608482015260a40161018d565b60018190556040518181527fd8120d6ff65f04a7663a7fa333122bcf1630c76e6198691647b8b952fd6427f79060200160405180910390a150565b6000546001600160a01b031633146104a35760405162461bcd60e51b815260040161018d90610653565b6001600160a01b0381166105085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161018d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160701b038116811461057a57600080fd5b919050565b60006020828403121561059157600080fd5b81356001600160a01b03811681146105a857600080fd5b9392505050565b6000602082840312156105c157600080fd5b5051919050565b6000806000606084860312156105dd57600080fd5b6105e684610563565b92506105f460208501610563565b9150604084015163ffffffff8116811461060d57600080fd5b809150509250925092565b60006020828403121561062a57600080fd5b5035919050565b6000806040838503121561064457600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000826106a557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156106d257634e487b7160e01b600052601160045260246000fd5b50029056fea26469706673582212201c11844a8adabefc7e05d4e4589318807c9e0f2df58705ef271f488a712707e464736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610119578063b1fc8ad41461012a578063dd51faa21461013d578063f2fde38b1461015057600080fd5b80632630c12f1461008d5780635d62a8dd146100d15780636ca7c216146100f8578063715018a61461010f575b600080fd5b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b47f000000000000000000000000000000000000000000000000000000000000000081565b61010160015481565b6040519081526020016100c8565b610117610163565b005b6000546001600160a01b03166100b4565b610101610138366004610631565b6101e0565b61011761014b366004610618565b61038f565b61011761015e36600461057f565b610479565b6000546001600160a01b031633146101965760405162461bcd60e51b815260040161018d90610653565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561023c57600080fd5b505afa158015610250573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027491906105af565b905060006001548261028691906106aa565b905060008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156102e657600080fd5b505afa1580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e91906105c8565b925092509250816001600160701b03166000141561034457600095505050505050610389565b6000826001600160701b0316846001600160701b03168661036591906106aa565b61036f9190610688565b905087811161037e5780610380565b875b96505050505050505b92915050565b6000546001600160a01b031633146103b95760405162461bcd60e51b815260040161018d90610653565b600154811061043e5760405162461bcd60e51b815260206004820152604560248201527f6e6577476173436f6d6d697373696f6e206e6565647320746f2062652073747260448201527f6963746c7920736d616c6c6572207468616e207468652063757272656e74207660648201526430b63ab29760d91b608482015260a40161018d565b60018190556040518181527fd8120d6ff65f04a7663a7fa333122bcf1630c76e6198691647b8b952fd6427f79060200160405180910390a150565b6000546001600160a01b031633146104a35760405162461bcd60e51b815260040161018d90610653565b6001600160a01b0381166105085760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161018d565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160701b038116811461057a57600080fd5b919050565b60006020828403121561059157600080fd5b81356001600160a01b03811681146105a857600080fd5b9392505050565b6000602082840312156105c157600080fd5b5051919050565b6000806000606084860312156105dd57600080fd5b6105e684610563565b92506105f460208501610563565b9150604084015163ffffffff8116811461060d57600080fd5b809150509250925092565b60006020828403121561062a57600080fd5b5035919050565b6000806040838503121561064457600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000826106a557634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156106d257634e487b7160e01b600052601160045260246000fd5b50029056fea26469706673582212201c11844a8adabefc7e05d4e4589318807c9e0f2df58705ef271f488a712707e464736f6c63430008060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getCommission(uint256,uint256)": {
        "returns": {
          "_0": "commissionTotal is the amount subtracted from the rewardAmount"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_1990": {
          "entryPoint": null,
          "id": 1990,
          "parameterSlots": 3,
          "returnSlots": 0
        },
        "@_675": {
          "entryPoint": null,
          "id": 675,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_msgSender_1588": {
          "entryPoint": null,
          "id": 1588,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "abi_decode_address_fromMemory": {
          "entryPoint": 209,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory": {
          "entryPoint": 237,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:734:28",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:28",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:117:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "84:22:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "99:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "93:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:13:28"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "84:5:28"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "169:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "178:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "181:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "171:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "171:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "171:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "128:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "139:5:28"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "154:3:28",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "159:1:28",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:3:28"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "150:11:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "163:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:19:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "135:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "135:31:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "125:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "125:42:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "118:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:50:28"
                      },
                      "nodeType": "YulIf",
                      "src": "115:2:28"
                    }
                  ]
                },
                "name": "abi_decode_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "53:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "64:5:28",
                    "type": ""
                  }
                ],
                "src": "14:177:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "311:239:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "357:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "366:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "369:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "359:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "359:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "359:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "332:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "341:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "328:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "328:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "353:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "324:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "324:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "321:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "382:50:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "422:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "392:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:40:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "382:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "441:59:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "485:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "496:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "481:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "481:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "451:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "451:49:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "441:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "509:35:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "529:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "540:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "525:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "525:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "519:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "519:25:28"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "509:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "261:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "272:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "284:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "292:6:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "300:6:28",
                    "type": ""
                  }
                ],
                "src": "196:354:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "656:76:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "666:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "678:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "689:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "674:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "674:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "666:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "708:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "701:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "701:25:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "625:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "636:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "647:4:28",
                    "type": ""
                  }
                ],
                "src": "555:177:28"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
          "id": 28,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x86D CODESIZE SUB DUP1 PUSH2 0x86D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xED JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP4 SWAP1 SHL AND PUSH1 0xA0 MSTORE PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xD8120D6FF65F04A7663A7FA333122BCF1630C76E6198691647B8B952FD6427F7 SWAP1 PUSH2 0xC1 SWAP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x129 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10B DUP5 PUSH2 0xD1 JUMP JUMPDEST SWAP3 POP PUSH2 0x119 PUSH1 0x20 DUP6 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x70D PUSH2 0x160 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0x92 ADD MSTORE PUSH2 0x28F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xD6 ADD MSTORE PUSH2 0x1E5 ADD MSTORE PUSH2 0x70D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xB1FC8AD4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xDD51FAA2 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2630C12F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x5D62A8DD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6CA7C216 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x163 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x618 JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH2 0x117 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x389 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x688 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 GT PUSH2 0x37E JUMPI DUP1 PUSH2 0x380 JUMP JUMPDEST DUP8 JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6577476173436F6D6D697373696F6E206E6565647320746F20626520737472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6963746C7920736D616C6C6572207468616E207468652063757272656E742076 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x30B63AB297 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x18D JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xD8120D6FF65F04A7663A7FA333122BCF1630C76E6198691647B8B952FD6427F7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E6 DUP5 PUSH2 0x563 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F4 PUSH1 0x20 DUP6 ADD PUSH2 0x563 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR GT DUP5 0x4A DUP11 0xDA 0xBE 0xFC PUSH31 0x5D4E4589318807C9E0F2DF58705EF271F488A712707E464736F6C63430008 MOD STOP CALLER ",
      "sourceMap": "953:2091:18:-:0;;;1245:280;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:17:7;909:18;;-1:-1:-1;;;;;;909:18:7;665:10:14;909:18:7;;;;;942:43;;665:10:14;;;;942:43:7;;867:17;;942:43;-1:-1:-1;;;;1361:49:18;;;;;;;1420:44;;;;;;-1:-1:-1;1474:10:18;;;1499:19;;701:25:28;;;1499:19:18;;689:2:28;674:18;1499:19:18;;;;;;;1245:280;;;953:2091;;14:177:28;93:13;;-1:-1:-1;;;;;135:31:28;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:354::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:2;;;369:1;366;359:12;321:2;392:40;422:9;392:40;:::i;:::-;382:50;;451:49;496:2;485:9;481:18;451:49;:::i;:::-;441:59;;540:2;529:9;525:18;519:25;509:35;;311:239;;;;;:::o;656:76::-;953:2091:18;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_msgSender_1588": {
          "entryPoint": null,
          "id": 1588,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@gasOracle_1950": {
          "entryPoint": null,
          "id": 1950,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@gas_1955": {
          "entryPoint": null,
          "id": 1955,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@getCommission_2050": {
          "entryPoint": 480,
          "id": 2050,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@owner_684": {
          "entryPoint": null,
          "id": 684,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@priceOracle_1953": {
          "entryPoint": null,
          "id": 1953,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@renounceOwnership_720": {
          "entryPoint": 355,
          "id": 720,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@setGas_2074": {
          "entryPoint": 911,
          "id": 2074,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@transferOwnership_748": {
          "entryPoint": 1145,
          "id": 748,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 1407,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_int256_fromMemory": {
          "entryPoint": 1455,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory": {
          "entryPoint": 1480,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 3
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 1560,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256t_uint256": {
          "entryPoint": 1585,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        },
        "abi_decode_uint112_fromMemory": {
          "entryPoint": 1379,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_AggregatorInterface_$255__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_IUniswapV2Pair_$1842__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 1619,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_be8f82a5b3a0e02a27379e0aa0f80481859321043c461a7b527eb20b2a081d4d__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 1672,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 1706,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:4170:28",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:28",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:128:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "84:22:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "99:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "93:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:13:28"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "84:5:28"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "180:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "189:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "192:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "182:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "182:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "182:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "128:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "139:5:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "146:30:28",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "135:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "135:42:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "125:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "125:53:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "118:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:61:28"
                      },
                      "nodeType": "YulIf",
                      "src": "115:2:28"
                    }
                  ]
                },
                "name": "abi_decode_uint112_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "53:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "64:5:28",
                    "type": ""
                  }
                ],
                "src": "14:188:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "277:216:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "323:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "332:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "335:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "325:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "325:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "325:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "298:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "307:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "294:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "294:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "319:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "290:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "290:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "287:2:28"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "348:36:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "374:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "361:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "361:23:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "352:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "447:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "456:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "459:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "449:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "449:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "449:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "406:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "417:5:28"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "432:3:28",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "437:1:28",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "428:3:28"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "428:11:28"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "441:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "424:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "424:19:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "413:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "413:31:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "403:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "403:42:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "396:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "396:50:28"
                      },
                      "nodeType": "YulIf",
                      "src": "393:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "472:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "482:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "472:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "243:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "254:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "266:6:28",
                    "type": ""
                  }
                ],
                "src": "207:286:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "578:103:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "624:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "633:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "636:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "626:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "626:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "626:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "599:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "608:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "595:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "595:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "620:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "591:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "591:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "588:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "649:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "665:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "659:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "659:16:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "649:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_int256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "544:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "555:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "567:6:28",
                    "type": ""
                  }
                ],
                "src": "498:183:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "800:336:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "846:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "855:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "858:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "848:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "848:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "848:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "821:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "830:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "817:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "817:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "842:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "813:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "813:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "810:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "871:50:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "911:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint112_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "881:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "881:40:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "871:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "930:59:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "985:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint112_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "940:29:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "940:49:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "930:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "998:38:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1021:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1032:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1017:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1017:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1011:5:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1011:25:28"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "1002:5:28",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1090:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1099:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1102:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1092:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1092:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1092:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1058:5:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1069:5:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1076:10:28",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1065:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1065:22:28"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1055:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1055:33:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1048:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1048:41:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1045:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1115:15:28",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1125:5:28"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1115:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "750:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "761:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "773:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "781:6:28",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "789:6:28",
                    "type": ""
                  }
                ],
                "src": "686:450:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1211:110:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1257:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1266:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1269:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1259:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1259:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1259:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1232:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1241:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1228:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1228:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1253:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1224:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1224:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1221:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1282:33:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1305:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1292:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1292:23:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1282:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1177:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1188:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1200:6:28",
                    "type": ""
                  }
                ],
                "src": "1141:180:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1413:161:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1459:16:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1468:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1471:1:28",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1461:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1461:12:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1461:12:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1434:7:28"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1443:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1430:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1430:23:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1455:2:28",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1426:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1426:32:28"
                      },
                      "nodeType": "YulIf",
                      "src": "1423:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1484:33:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1507:9:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1494:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1494:23:28"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1484:6:28"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1526:42:28",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1553:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1564:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1549:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1549:18:28"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1536:12:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:32:28"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1526:6:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1371:9:28",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1382:7:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1394:6:28",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1402:6:28",
                    "type": ""
                  }
                ],
                "src": "1326:248:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1680:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1690:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1702:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1713:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1698:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1690:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1732:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1747:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1763:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1768:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1759:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1759:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1772:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1755:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1755:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1743:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1743:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1725:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1725:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1725:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1649:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1660:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1671:4:28",
                    "type": ""
                  }
                ],
                "src": "1579:203:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1915:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1925:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1937:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1948:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1933:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1933:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1925:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1967:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1982:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1998:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2003:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1994:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1994:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2007:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1990:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1990:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1978:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1978:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1960:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1960:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1960:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_AggregatorInterface_$255__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1884:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1895:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1906:4:28",
                    "type": ""
                  }
                ],
                "src": "1787:230:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2146:102:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2156:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2168:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2179:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2164:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2164:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2156:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2198:9:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2213:6:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2229:3:28",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2234:1:28",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2225:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2225:11:28"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2238:1:28",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2221:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2221:19:28"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2209:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2209:32:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2191:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2191:51:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2191:51:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_IUniswapV2Pair_$1842__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2115:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2126:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2137:4:28",
                    "type": ""
                  }
                ],
                "src": "2022:226:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2427:228:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2444:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2455:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2437:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2437:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2437:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2478:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2489:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2474:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2474:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2494:2:28",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2467:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2467:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2467:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2517:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2528:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2513:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2513:18:28"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2533:34:28",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2506:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2506:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2506:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2588:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2599:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2584:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2584:18:28"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2604:8:28",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2577:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2577:36:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2577:36:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2622:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2634:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2645:3:28",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2630:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2630:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2622:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2404:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2418:4:28",
                    "type": ""
                  }
                ],
                "src": "2253:402:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2834:182:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2851:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2862:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2844:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2844:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2844:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2885:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2896:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2881:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2881:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2901:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2874:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2874:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2874:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2924:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2935:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2920:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2920:18:28"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2940:34:28",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2913:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2913:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2913:62:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2984:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2996:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3007:2:28",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2992:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2992:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2984:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2811:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2825:4:28",
                    "type": ""
                  }
                ],
                "src": "2660:356:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3195:299:28",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3212:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3223:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3205:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3205:21:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3205:21:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3246:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3257:2:28",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3242:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3242:18:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3262:2:28",
                            "type": "",
                            "value": "69"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3235:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3235:30:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3235:30:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3285:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3296:2:28",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3281:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3281:18:28"
                          },
                          {
                            "hexValue": "6e6577476173436f6d6d697373696f6e206e6565647320746f20626520737472",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3301:34:28",
                            "type": "",
                            "value": "newGasCommission needs to be str"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3274:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3274:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3274:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3356:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3367:2:28",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3352:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3352:18:28"
                          },
                          {
                            "hexValue": "6963746c7920736d616c6c6572207468616e207468652063757272656e742076",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3372:34:28",
                            "type": "",
                            "value": "ictly smaller than the current v"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3345:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3345:62:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3345:62:28"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3427:9:28"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3438:3:28",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3423:3:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3423:19:28"
                          },
                          {
                            "hexValue": "616c75652e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3444:7:28",
                            "type": "",
                            "value": "alue."
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3416:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3416:36:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3416:36:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3461:27:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3473:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3484:3:28",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3469:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3469:19:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3461:4:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_be8f82a5b3a0e02a27379e0aa0f80481859321043c461a7b527eb20b2a081d4d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3172:9:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3186:4:28",
                    "type": ""
                  }
                ],
                "src": "3021:473:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3600:76:28",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3610:26:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3622:9:28"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3633:2:28",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3618:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3618:18:28"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3610:4:28"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3652:9:28"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3663:6:28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3645:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3645:25:28"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3645:25:28"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3569:9:28",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3580:6:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3591:4:28",
                    "type": ""
                  }
                ],
                "src": "3499:177:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3727:171:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3758:111:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3779:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3786:3:28",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3791:10:28",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "3782:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3782:20:28"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3772:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3772:31:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3772:31:28"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3823:1:28",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3826:4:28",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3816:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3816:15:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3816:15:28"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3851:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3854:4:28",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3844:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3844:15:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3844:15:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3747:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3740:6:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3740:9:28"
                      },
                      "nodeType": "YulIf",
                      "src": "3737:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3878:14:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "3887:1:28"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3890:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "3883:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3883:9:28"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "3878:1:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "3712:1:28",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "3715:1:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "3721:1:28",
                    "type": ""
                  }
                ],
                "src": "3681:217:28"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3955:213:28",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4022:111:28",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4043:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4050:3:28",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4055:10:28",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "4046:3:28"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4046:20:28"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4036:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4036:31:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4036:31:28"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4087:1:28",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4090:4:28",
                                  "type": "",
                                  "value": "0x11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "4080:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4080:15:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4080:15:28"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4115:1:28",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4118:4:28",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4108:6:28"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4108:15:28"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4108:15:28"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "3986:1:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3979:6:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3979:9:28"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3972:6:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3972:17:28"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3994:1:28"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4005:1:28",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4001:3:28"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4001:6:28"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4009:1:28"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "3997:3:28"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3997:14:28"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "3991:2:28"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3991:21:28"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3968:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3968:45:28"
                      },
                      "nodeType": "YulIf",
                      "src": "3965:2:28"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4142:20:28",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4157:1:28"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4160:1:28"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "4153:3:28"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4153:9:28"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "4142:7:28"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "3934:1:28",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "3937:1:28",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "3943:7:28",
                    "type": ""
                  }
                ],
                "src": "3903:265:28"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        let value := mload(add(headStart, 64))\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_AggregatorInterface_$255__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Pair_$1842__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be8f82a5b3a0e02a27379e0aa0f80481859321043c461a7b527eb20b2a081d4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"newGasCommission needs to be str\")\n        mstore(add(headStart, 96), \"ictly smaller than the current v\")\n        mstore(add(headStart, 128), \"alue.\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
          "id": 28,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "1950": [
          {
            "length": 32,
            "start": 214
          },
          {
            "length": 32,
            "start": 485
          }
        ],
        "1953": [
          {
            "length": 32,
            "start": 146
          },
          {
            "length": 32,
            "start": 655
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0xB1FC8AD4 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xDD51FAA2 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x150 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2630C12F EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x5D62A8DD EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x6CA7C216 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x10F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB4 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x101 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC8 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x163 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x101 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0x631 JUMP JUMPDEST PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x117 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x618 JUMP JUMPDEST PUSH2 0x38F JUMP JUMPDEST PUSH2 0x117 PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x50D25BCD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x5C8 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 SWAP6 POP POP POP POP POP POP PUSH2 0x389 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB AND DUP7 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x36F SWAP2 SWAP1 PUSH2 0x688 JUMP JUMPDEST SWAP1 POP DUP8 DUP2 GT PUSH2 0x37E JUMPI DUP1 PUSH2 0x380 JUMP JUMPDEST DUP8 JUMPDEST SWAP7 POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 LT PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6E6577476173436F6D6D697373696F6E206E6565647320746F20626520737472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6963746C7920736D616C6C6572207468616E207468652063757272656E742076 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x30B63AB297 PUSH1 0xD9 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x18D JUMP JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0xD8120D6FF65F04A7663A7FA333122BCF1630C76E6198691647B8B952FD6427F7 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x508 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x18D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x70 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x591 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x5DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5E6 DUP5 PUSH2 0x563 JUMP JUMPDEST SWAP3 POP PUSH2 0x5F4 PUSH1 0x20 DUP6 ADD PUSH2 0x563 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x60D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x62A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x6A5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MUL SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR GT DUP5 0x4A DUP11 0xDA 0xBE 0xFC PUSH31 0x5D4E4589318807C9E0F2DF58705EF271F488A712707E464736F6C63430008 MOD STOP CALLER ",
      "sourceMap": "953:2091:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1054:43;;;;;;;;-1:-1:-1;;;;;1743:32:28;;;;1725:51;;1713:2;1698:18;1054:43:18;;;;;;;;1001:46;;;;;1104:18;;;;;;;;;3645:25:28;;;3633:2;3618:18;1104::18;3600:76:28;1700:145:7;;;:::i;:::-;;1068:85;1114:7;1140:6;-1:-1:-1;;;;;1140:6:7;1068:85;;1709:923:18;;;;;;:::i;:::-;;:::i;2748:294::-;;;;;;:::i;:::-;;:::i;1994:240:7:-;;;;;;:::i;:::-;;:::i;1700:145::-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:7;665:10:14;1280:23:7;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;;;;;;;;;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:7;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:7::1;::::0;;1700:145::o;1709:923:18:-;1827:7;1966:16;1993:9;-1:-1:-1;;;;;1993:22:18;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1966:52;;2081:14;2109:3;;2098:8;:14;;;;:::i;:::-;2081:31;;2157:19;2178:18;2198:26;2240:11;-1:-1:-1;;;;;2240:23:18;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2156:109;;-1:-1:-1;2156:109:18;-1:-1:-1;2156:109:18;-1:-1:-1;;;;;;2384:15:18;;2380:54;;2422:1;2415:8;;;;;;;;;2380:54;2443:18;-1:-1:-1;;;;;2464:35:18;;;;2465:20;;;;:6;:20;:::i;:::-;2464:35;;;;:::i;:::-;2443:56;;2585:12;2572:10;:25;:53;;2615:10;2572:53;;;2600:12;2572:53;2565:60;;;;;;;;1709:923;;;;;:::o;2748:294::-;1114:7:7;1140:6;-1:-1:-1;;;;;1140:6:7;665:10:14;1280:23:7;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;2859:3:18::1;;2840:16;:22;2819:138;;;::::0;-1:-1:-1;;;2819:138:18;;3223:2:28;2819:138:18::1;::::0;::::1;3205:21:28::0;3262:2;3242:18;;;3235:30;3301:34;3281:18;;;3274:62;3372:34;3352:18;;;3345:62;-1:-1:-1;;;3423:19:28;;;3416:36;3469:19;;2819:138:18::1;3195:299:28::0;2819:138:18::1;2967:3;:22:::0;;;3004:31:::1;::::0;3645:25:28;;;3004:31:18::1;::::0;3633:2:28;3618:18;3004:31:18::1;;;;;;;2748:294:::0;:::o;1994:240:7:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:7;665:10:14;1280:23:7;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:7;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:7;;2455:2:28;2074:73:7::1;::::0;::::1;2437:21:28::0;2494:2;2474:18;;;2467:30;2533:34;2513:18;;;2506:62;-1:-1:-1;;;2584:18:28;;;2577:36;2630:19;;2074:73:7::1;2427:228:28::0;2074:73:7::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:7;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:7::1;-1:-1:-1::0;;;;;2210:17:7;;;::::1;::::0;;;::::1;::::0;;1994:240::o;14:188:28:-;93:13;;-1:-1:-1;;;;;135:42:28;;125:53;;115:2;;192:1;189;182:12;115:2;74:128;;;:::o;207:286::-;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;335:1;332;325:12;287:2;361:23;;-1:-1:-1;;;;;413:31:28;;403:42;;393:2;;459:1;456;449:12;393:2;482:5;277:216;-1:-1:-1;;;277:216:28:o;498:183::-;567:6;620:2;608:9;599:7;595:23;591:32;588:2;;;636:1;633;626:12;588:2;-1:-1:-1;659:16:28;;578:103;-1:-1:-1;578:103:28:o;686:450::-;773:6;781;789;842:2;830:9;821:7;817:23;813:32;810:2;;;858:1;855;848:12;810:2;881:40;911:9;881:40;:::i;:::-;871:50;;940:49;985:2;974:9;970:18;940:49;:::i;:::-;930:59;;1032:2;1021:9;1017:18;1011:25;1076:10;1069:5;1065:22;1058:5;1055:33;1045:2;;1102:1;1099;1092:12;1045:2;1125:5;1115:15;;;800:336;;;;;:::o;1141:180::-;1200:6;1253:2;1241:9;1232:7;1228:23;1224:32;1221:2;;;1269:1;1266;1259:12;1221:2;-1:-1:-1;1292:23:28;;1211:110;-1:-1:-1;1211:110:28:o;1326:248::-;1394:6;1402;1455:2;1443:9;1434:7;1430:23;1426:32;1423:2;;;1471:1;1468;1461:12;1423:2;-1:-1:-1;;1494:23:28;;;1564:2;1549:18;;;1536:32;;-1:-1:-1;1413:161:28:o;2660:356::-;2862:2;2844:21;;;2881:18;;;2874:30;2940:34;2935:2;2920:18;;2913:62;3007:2;2992:18;;2834:182::o;3681:217::-;3721:1;3747;3737:2;;3791:10;3786:3;3782:20;3779:1;3772:31;3826:4;3823:1;3816:15;3854:4;3851:1;3844:15;3737:2;-1:-1:-1;3883:9:28;;3727:171::o;3903:265::-;3943:7;4009:1;4005;4001:6;3997:14;3994:1;3991:21;3986:1;3979:9;3972:17;3968:45;3965:2;;;4055:10;4050:3;4046:20;4043:1;4036:31;4090:4;4087:1;4080:15;4118:4;4115:1;4108:15;3965:2;-1:-1:-1;4153:9:28;;3955:213::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "361000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "gas()": "2340",
        "gasOracle()": "infinite",
        "getCommission(uint256,uint256)": "infinite",
        "owner()": "2323",
        "priceOracle()": "infinite",
        "renounceOwnership()": "30232",
        "setGas(uint256)": "27696",
        "transferOwnership(address)": "30431"
      }
    },
    "methodIdentifiers": {
      "gas()": "6ca7c216",
      "gasOracle()": "5d62a8dd",
      "getCommission(uint256,uint256)": "b1fc8ad4",
      "owner()": "8da5cb5b",
      "priceOracle()": "2630c12f",
      "renounceOwnership()": "715018a6",
      "setGas(uint256)": "dd51faa2",
      "transferOwnership(address)": "f2fde38b"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_chainlinkOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapOracle\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_gas\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newGas\",\"type\":\"uint256\"}],\"name\":\"GasTaxChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"gas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasOracle\",\"outputs\":[{\"internalType\":\"contract AggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"getCommission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Pair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasCommission\",\"type\":\"uint256\"}],\"name\":\"setGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getCommission(uint256,uint256)\":{\"returns\":{\"_0\":\"commissionTotal is the amount subtracted from the rewardAmount\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"GasTaxChanged(uint256)\":{\"notice\":\"event fired when setGas function is called and successful\"}},\"kind\":\"user\",\"methods\":{\"getCommission(uint256,uint256)\":{\"notice\":\"calculates the total amount of the reward that will be directed to the PoolManager\"},\"setGas(uint256)\":{\"notice\":\"allows for the poolManager to reduce how much they want to charge for the block production tx\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GasTaxCommission.sol\":\"GasTaxCommission\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorInterface {\\n  function latestAnswer()\\n    external\\n    view\\n    returns (\\n      int256\\n    );\\n  \\n  function latestTimestamp()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  function latestRound()\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  function getAnswer(\\n    uint256 roundId\\n  )\\n    external\\n    view\\n    returns (\\n      int256\\n    );\\n\\n  function getTimestamp(\\n    uint256 roundId\\n  )\\n    external\\n    view\\n    returns (\\n      uint256\\n    );\\n\\n  event AnswerUpdated(\\n    int256 indexed current,\\n    uint256 indexed roundId,\\n    uint256 updatedAt\\n  );\\n\\n  event NewRound(\\n    uint256 indexed roundId,\\n    address indexed startedBy,\\n    uint256 startedAt\\n  );\\n}\\n\",\"keccak256\":\"0x1a5dc81544a6479f64437a8aca22c869769dd54ee3522c7ef5ebae0d329a28f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"content\":\"pragma solidity >=0.5.0;\\n\\ninterface IUniswapV2Pair {\\n    event Approval(address indexed owner, address indexed spender, uint value);\\n    event Transfer(address indexed from, address indexed to, uint value);\\n\\n    function name() external pure returns (string memory);\\n    function symbol() external pure returns (string memory);\\n    function decimals() external pure returns (uint8);\\n    function totalSupply() external view returns (uint);\\n    function balanceOf(address owner) external view returns (uint);\\n    function allowance(address owner, address spender) external view returns (uint);\\n\\n    function approve(address spender, uint value) external returns (bool);\\n    function transfer(address to, uint value) external returns (bool);\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\n\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n    function nonces(address owner) external view returns (uint);\\n\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\n\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\n    event Swap(\\n        address indexed sender,\\n        uint amount0In,\\n        uint amount1In,\\n        uint amount0Out,\\n        uint amount1Out,\\n        address indexed to\\n    );\\n    event Sync(uint112 reserve0, uint112 reserve1);\\n\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\n    function factory() external view returns (address);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\n    function price0CumulativeLast() external view returns (uint);\\n    function price1CumulativeLast() external view returns (uint);\\n    function kLast() external view returns (uint);\\n\\n    function mint(address to) external returns (uint liquidity);\\n    function burn(address to) external returns (uint amount0, uint amount1);\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\n    function skim(address to) external;\\n    function sync() external;\\n\\n    function initialize(address, address) external;\\n}\\n\",\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\"},\"contracts/Fee.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\ninterface Fee {\\n    /// @notice calculates the total amount of the reward that will be directed to the PoolManager\\n    /// @return commissionTotal is the amount subtracted from the rewardAmount\\n    function getCommission(uint256 posIndex, uint256 rewardAmount)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0xd17a0058b5ef0f8734e102538622187c99d00d19f49ae7c4946004e55c1b9f6e\",\"license\":\"Apache-2.0\"},\"contracts/GasTaxCommission.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorInterface.sol\\\";\\nimport \\\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./Fee.sol\\\";\\n\\ncontract GasTaxCommission is Fee, Ownable {\\n    AggregatorInterface public immutable gasOracle;\\n\\n    IUniswapV2Pair public immutable priceOracle;\\n\\n    uint256 public gas;\\n\\n    /// @notice event fired when setGas function is called and successful\\n    event GasTaxChanged(uint256 newGas);\\n\\n    constructor(\\n        address _chainlinkOracle,\\n        address _uniswapOracle,\\n        uint256 _gas\\n    ) {\\n        gasOracle = AggregatorInterface(_chainlinkOracle);\\n        priceOracle = IUniswapV2Pair(_uniswapOracle);\\n        gas = _gas;\\n        emit GasTaxChanged(_gas);\\n    }\\n\\n    /// @notice calculates the total amount of the reward that will be directed to the PoolManager\\n    /// @return commissionTotal is the amount subtracted from the rewardAmount\\n    function getCommission(uint256, uint256 rewardAmount)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        // get gas price from chainlink oracle\\n        // https://data.chain.link/fast-gas-gwei#operator-chainlayer\\n        uint256 gasPrice = uint256(gasOracle.latestAnswer());\\n\\n        // gas fee (in ETH) charged by pool manager\\n        uint256 gasFee = gasPrice * gas;\\n\\n        // get CTSI/ETH reserves\\n        (uint112 reserveCTSI, uint112 reserveETH, uint32 _blockTimestampLast) =\\n            priceOracle.getReserves();\\n\\n        // convert gas in ETH to gas in CTSI\\n\\n        // if there is no ETH reserve, we can't calculate\\n        if (reserveETH == 0) {\\n            return 0;\\n        }\\n        uint256 gasFeeCTSI = (gasFee * reserveCTSI) / reserveETH;\\n\\n        // this is the commission, maxed by the reward\\n        return gasFeeCTSI > rewardAmount ? rewardAmount : gasFeeCTSI;\\n    }\\n\\n    /// @notice allows for the poolManager to reduce how much they want to charge for the block production tx\\n    function setGas(uint256 newGasCommission) external onlyOwner {\\n        require(\\n            newGasCommission < gas,\\n            \\\"newGasCommission needs to be strictly smaller than the current value.\\\"\\n        );\\n        gas = newGasCommission;\\n        emit GasTaxChanged(newGasCommission);\\n    }\\n}\\n\",\"keccak256\":\"0x9226379d9110b4950b709fa1f32f11e802970c5fc3cbb44e06fb59bedd5c493d\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 647,
        "contract": "contracts/GasTaxCommission.sol:GasTaxCommission",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1955,
        "contract": "contracts/GasTaxCommission.sol:GasTaxCommission",
        "label": "gas",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "GasTaxChanged(uint256)": {
        "notice": "event fired when setGas function is called and successful"
      }
    },
    "kind": "user",
    "methods": {
      "getCommission(uint256,uint256)": {
        "notice": "calculates the total amount of the reward that will be directed to the PoolManager"
      },
      "setGas(uint256)": {
        "notice": "allows for the poolManager to reduce how much they want to charge for the block production tx"
      }
    },
    "version": 1
  }
}