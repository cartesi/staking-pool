{
  "contractName": "StakingPoolUserImpl",
  "sourceName": "contracts/StakingPoolUserImpl.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ctsi",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeTimestamp",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "amountToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60c060405234801561001057600080fd5b50604051610f5d380380610f5d83398101604081905261002f9161004a565b60609190911b6001600160601b03191660805260a052610084565b6000806040838503121561005d57600080fd5b82516001600160a01b038116811461007457600080fd5b6020939093015192949293505050565b60805160601c60a051610e956100c860003960008181610170015281816107f40152610b3d01526000818161049f0152818161060f0152610a410152610e956000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063b6b55f2511610066578063b6b55f251461022a578063b811540e1461023d578063e366b7bb14610250578063f2fde38b1461025957600080fd5b8063715018a6146101eb5780638da5cb5b146101f3578063a694fc3a1461020e578063aa8c217c1461022157600080fd5b80632e1a7d4d116100d35780632e1a7d4d146101a7578063555d8ebb146101ba5780635c975abb146101cd578063710fe6f8146101e357600080fd5b80630103c92b1461010557806303314efa146101545780630d6680871461016b5780632e17de7814610192575b600080fd5b610134610113366004610cb5565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61015d60975481565b60405190815260200161014b565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b6101a56101a0366004610d07565b61026c565b005b6101a56101b5366004610d07565b610412565b61015d6101c8366004610d07565b6105ab565b60335460ff16604051901515815260200161014b565b61015d6105dc565b6101a56106a3565b6065546040516001600160a01b03909116815260200161014b565b6101a561021c366004610d07565b610709565b61015d60985481565b6101a5610238366004610d07565b6109b9565b61015d61024b366004610d07565b610b77565b61015d60995481565b6101a5610267366004610cb5565b610b98565b336000908152609a60205260409020816102e35760405162461bcd60e51b815260206004820152602d60248201527f5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f60448201526c756e74206f662073686172657360981b60648201526084015b60405180910390fd5b81816001015410156103485760405162461bcd60e51b815260206004820152602860248201527f5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e604482015267742073686172657360c01b60648201526084016102da565b8181600101600082825461035c9190610e32565b909155506000905061036d836105ab565b905082609760008282546103819190610e32565b92505081905550806098600082825461039a9190610e32565b90915550508154819083906000906103b3908490610dd9565b9250508190555080609960008282546103cc9190610dd9565b9091555050604080518281526020810185905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28091015b60405180910390a2505050565b336000908152609a6020526040902080546104835760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e63652060448201526a746f20776974686472617760a81b60648201526084016102da565b60405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105239190610ce5565b61053f5760405162461bcd60e51b81526004016102da90610d39565b818160000160008282546105539190610e32565b92505081905550816099600082825461056c9190610e32565b909155505060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b6000609754600014156105bc575090565b6097546098546105cc9084610e13565b6105d69190610df1565b92915050565b336000908152609a6020526040808220805491516370a0823160e01b815230600482015290919083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190610d20565b905081811015610699578061069b565b815b935050505090565b6065546001600160a01b031633146106fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102da565b6107076000610c63565b565b60335460ff161561074f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102da565b336000908152609a602052604090208161077b5760405162461bcd60e51b81526004016102da90610d87565b80548211156107f25760405162461bcd60e51b815260206004820152603c60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f746f6b656e7320617661696c61626c6520666f72207374616b696e670000000060648201526084016102da565b7f000000000000000000000000000000000000000000000000000000000000000081600201546108229190610dd9565b4210156108a25760405162461bcd60e51b815260206004820152604260248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f74696d6520686173207061737365642073696e6365206c617374206465706f736064820152611a5d60f21b608482015260a4016102da565b60006108ad83610b77565b90506000811161091d5760405162461bcd60e51b815260206004820152603560248201527f5374616b696e67506f6f6c55736572496d706c3a207374616b65206e6f7420656044820152746e6f75676820746f20656d6974203120736861726560581b60648201526084016102da565b808260010160008282546109319190610dd9565b909155505081548390839060009061094a908490610e32565b9250508190555082609860008282546109639190610dd9565b92505081905550806097600082825461097c9190610dd9565b9091555050604080518481526020810183905233917f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b69101610405565b60335460ff16156109ff5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102da565b60008111610a1f5760405162461bcd60e51b81526004016102da90610d87565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610a8d57600080fd5b505af1158015610aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190610ce5565b610ae15760405162461bcd60e51b81526004016102da90610d39565b336000908152609a60205260408120805490918391839190610b04908490610dd9565b9091555050426002820181905533907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15908490610b62907f000000000000000000000000000000000000000000000000000000000000000090610dd9565b6040805192835260208301919091520161059f565b600060985460001415610b88575090565b6098546097546105cc9084610e13565b6065546001600160a01b03163314610bf25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102da565b6001600160a01b038116610c575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102da565b610c6081610c63565b50565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215610cc757600080fd5b81356001600160a01b0381168114610cde57600080fd5b9392505050565b600060208284031215610cf757600080fd5b81518015158114610cde57600080fd5b600060208284031215610d1957600080fd5b5035919050565b600060208284031215610d3257600080fd5b5051919050565b6020808252602e908201527f5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f207460408201526d72616e7366657220746f6b656e7360901b606082015260800190565b60208082526032908201527f5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d75737460408201527102062652067726561746572207468616e20360741b606082015260800190565b60008219821115610dec57610dec610e49565b500190565b600082610e0e57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e2d57610e2d610e49565b500290565b600082821015610e4457610e44610e49565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220503a254c69586d0ad54ab38580d22e28a23c33bd2d8337aa4b4fc750e13164b864736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a611610097578063b6b55f2511610066578063b6b55f251461022a578063b811540e1461023d578063e366b7bb14610250578063f2fde38b1461025957600080fd5b8063715018a6146101eb5780638da5cb5b146101f3578063a694fc3a1461020e578063aa8c217c1461022157600080fd5b80632e1a7d4d116100d35780632e1a7d4d146101a7578063555d8ebb146101ba5780635c975abb146101cd578063710fe6f8146101e357600080fd5b80630103c92b1461010557806303314efa146101545780630d6680871461016b5780632e17de7814610192575b600080fd5b610134610113366004610cb5565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61015d60975481565b60405190815260200161014b565b61015d7f000000000000000000000000000000000000000000000000000000000000000081565b6101a56101a0366004610d07565b61026c565b005b6101a56101b5366004610d07565b610412565b61015d6101c8366004610d07565b6105ab565b60335460ff16604051901515815260200161014b565b61015d6105dc565b6101a56106a3565b6065546040516001600160a01b03909116815260200161014b565b6101a561021c366004610d07565b610709565b61015d60985481565b6101a5610238366004610d07565b6109b9565b61015d61024b366004610d07565b610b77565b61015d60995481565b6101a5610267366004610cb5565b610b98565b336000908152609a60205260409020816102e35760405162461bcd60e51b815260206004820152602d60248201527f5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f60448201526c756e74206f662073686172657360981b60648201526084015b60405180910390fd5b81816001015410156103485760405162461bcd60e51b815260206004820152602860248201527f5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e604482015267742073686172657360c01b60648201526084016102da565b8181600101600082825461035c9190610e32565b909155506000905061036d836105ab565b905082609760008282546103819190610e32565b92505081905550806098600082825461039a9190610e32565b90915550508154819083906000906103b3908490610dd9565b9250508190555080609960008282546103cc9190610dd9565b9091555050604080518281526020810185905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28091015b60405180910390a2505050565b336000908152609a6020526040902080546104835760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e63652060448201526a746f20776974686472617760a81b60648201526084016102da565b60405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156104eb57600080fd5b505af11580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105239190610ce5565b61053f5760405162461bcd60e51b81526004016102da90610d39565b818160000160008282546105539190610e32565b92505081905550816099600082825461056c9190610e32565b909155505060405182815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364906020015b60405180910390a25050565b6000609754600014156105bc575090565b6097546098546105cc9084610e13565b6105d69190610df1565b92915050565b336000908152609a6020526040808220805491516370a0823160e01b815230600482015290919083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561065157600080fd5b505afa158015610665573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106899190610d20565b905081811015610699578061069b565b815b935050505090565b6065546001600160a01b031633146106fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102da565b6107076000610c63565b565b60335460ff161561074f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102da565b336000908152609a602052604090208161077b5760405162461bcd60e51b81526004016102da90610d87565b80548211156107f25760405162461bcd60e51b815260206004820152603c60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f746f6b656e7320617661696c61626c6520666f72207374616b696e670000000060648201526084016102da565b7f000000000000000000000000000000000000000000000000000000000000000081600201546108229190610dd9565b4210156108a25760405162461bcd60e51b815260206004820152604260248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f7567682060448201527f74696d6520686173207061737365642073696e6365206c617374206465706f736064820152611a5d60f21b608482015260a4016102da565b60006108ad83610b77565b90506000811161091d5760405162461bcd60e51b815260206004820152603560248201527f5374616b696e67506f6f6c55736572496d706c3a207374616b65206e6f7420656044820152746e6f75676820746f20656d6974203120736861726560581b60648201526084016102da565b808260010160008282546109319190610dd9565b909155505081548390839060009061094a908490610e32565b9250508190555082609860008282546109639190610dd9565b92505081905550806097600082825461097c9190610dd9565b9091555050604080518481526020810183905233917f5af417134f72a9d41143ace85b0a26dce6f550f894f2cbc1eeee8810603d91b69101610405565b60335460ff16156109ff5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102da565b60008111610a1f5760405162461bcd60e51b81526004016102da90610d87565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610a8d57600080fd5b505af1158015610aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac59190610ce5565b610ae15760405162461bcd60e51b81526004016102da90610d39565b336000908152609a60205260408120805490918391839190610b04908490610dd9565b9091555050426002820181905533907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15908490610b62907f000000000000000000000000000000000000000000000000000000000000000090610dd9565b6040805192835260208301919091520161059f565b600060985460001415610b88575090565b6098546097546105cc9084610e13565b6065546001600160a01b03163314610bf25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102da565b6001600160a01b038116610c575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102da565b610c6081610c63565b50565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215610cc757600080fd5b81356001600160a01b0381168114610cde57600080fd5b9392505050565b600060208284031215610cf757600080fd5b81518015158114610cde57600080fd5b600060208284031215610d1957600080fd5b5035919050565b600060208284031215610d3257600080fd5b5051919050565b6020808252602e908201527f5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f207460408201526d72616e7366657220746f6b656e7360901b606082015260800190565b60208082526032908201527f5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d75737460408201527102062652067726561746572207468616e20360741b606082015260800190565b60008219821115610dec57610dec610e49565b500190565b600082610e0e57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e2d57610e2d610e49565b500290565b600082821015610e4457610e44610e49565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220503a254c69586d0ad54ab38580d22e28a23c33bd2d8337aa4b4fc750e13164b864736f6c63430008060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructor",
        "params": {
          "_ctsi": "The contract that provides the staking pool's token",
          "_lockTime": "The user deposit lock period"
        }
      },
      "getWithdrawBalance()": {
        "details": "there is no way to know the exact time in the future the requested tokens will be available",
        "returns": {
          "_0": "the amount of tokens that can be immediately withdrawn by the calling user"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(uint256)": {
        "params": {
          "_amount": "amount of tokens to convert from user's balance"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "details": "this will transfer all free tokens for the calling user"
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_3360": {
          "entryPoint": null,
          "id": 3360,
          "parameterSlots": 2,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_addresst_uint256_fromMemory": {
          "entryPoint": 74,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 2
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:367:49",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:49",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "112:253:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "158:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "167:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "170:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "160:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "160:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "160:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "133:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "142:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "129:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "129:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "154:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "125:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "122:2:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "183:29:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "202:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "196:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "196:16:49"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "187:5:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "275:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "284:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "287:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "277:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "277:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "277:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "245:5:49"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "260:3:49",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "265:1:49",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "256:3:49"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "256:11:49"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "269:1:49",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "252:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "252:19:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:31:49"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "231:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "231:42:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "224:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:50:49"
                      },
                      "nodeType": "YulIf",
                      "src": "221:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "300:15:49",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "310:5:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "300:6:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "324:35:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "344:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "355:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "340:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "340:18:49"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "334:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "334:25:49"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "324:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "70:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "81:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "93:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "101:6:49",
                    "type": ""
                  }
                ],
                "src": "14:351:49"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
          "id": 49,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF5D CODESIZE SUB DUP1 PUSH2 0xF5D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x4A JUMP JUMPDEST PUSH1 0x60 SWAP2 SWAP1 SWAP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH1 0xA0 MSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH2 0xE95 PUSH2 0xC8 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x170 ADD MSTORE DUP2 DUP2 PUSH2 0x7F4 ADD MSTORE PUSH2 0xB3D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x49F ADD MSTORE DUP2 DUP2 PUSH2 0x60F ADD MSTORE PUSH2 0xA41 ADD MSTORE PUSH2 0xE95 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x710FE6F8 EQ PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B JUMP JUMPDEST PUSH2 0x15D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B JUMP JUMPDEST PUSH2 0x15D PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH2 0x15D PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x15D PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB5 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E76616C696420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x756E74206F6620736861726573 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7420736861726573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x36D DUP4 PUSH2 0x5AB JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3B3 SWAP1 DUP5 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F2062616C616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x746F207769746864726177 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x523 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5BC JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x98 SLOAD PUSH2 0x5CC SWAP1 DUP5 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x699 JUMPI DUP1 PUSH2 0x69B JUMP JUMPDEST DUP2 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x707 PUSH1 0x0 PUSH2 0xC63 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD87 JUMP JUMPDEST DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E7320617661696C61626C6520666F72207374616B696E6700000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696D6520686173207061737365642073696E6365206C617374206465706F73 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x1A5D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A207374616B65206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E6F75676820746F20656D69742031207368617265 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x931 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x94A SWAP1 DUP5 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x97C SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP2 ADD PUSH2 0x405 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD39 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xB04 SWAP1 DUP5 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 DUP5 SWAP1 PUSH2 0xB62 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xB88 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH2 0x5CC SWAP1 DUP5 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0xC60 DUP2 PUSH2 0xC63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206661696C656420746F2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x72616E7366657220746F6B656E73 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20616D6F756E74206D757374 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x2062652067726561746572207468616E203 PUSH1 0x74 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDEC PUSH2 0xE49 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0xE49 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE44 PUSH2 0xE49 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP GASPRICE 0x25 0x4C PUSH10 0x586D0AD54AB38580D22E 0x28 LOG2 EXTCODECOPY CALLER 0xBD 0x2D DUP4 CALLDATACOPY 0xAA 0x4B 0x4F 0xC7 POP 0xE1 BALANCE PUSH5 0xB864736F6C PUSH4 0x43000806 STOP CALLER ",
      "sourceMap": "775:5506:34:-:0;;;1073:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1129:20;;;;;-1:-1:-1;;;;;;1129:20:34;;;1159;;775:5506;;14:351:49;93:6;101;154:2;142:9;133:7;129:23;125:32;122:2;;;170:1;167;160:12;122:2;196:16;;-1:-1:-1;;;;;241:31:49;;231:42;;221:2;;287:1;284;277:12;221:2;355;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;112:253:49:o;:::-;775:5506:34;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_msgSender_1161": {
          "entryPoint": null,
          "id": 1161,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setOwner_968": {
          "entryPoint": 3171,
          "id": 968,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@amountToShares_2459": {
          "entryPoint": 2935,
          "id": 2459,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@amount_2423": {
          "entryPoint": null,
          "id": 2423,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@deposit_3421": {
          "entryPoint": 2489,
          "id": 3421,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@getWithdrawBalance_3660": {
          "entryPoint": 1500,
          "id": 3660,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@lockTime_3341": {
          "entryPoint": null,
          "id": 3341,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@owner_898": {
          "entryPoint": null,
          "id": 898,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@paused_1072": {
          "entryPoint": null,
          "id": 1072,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@renounceOwnership_926": {
          "entryPoint": 1699,
          "id": 926,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@requiredLiquidity_2425": {
          "entryPoint": null,
          "id": 2425,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@sharesToAmount_2481": {
          "entryPoint": 1451,
          "id": 2481,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@shares_2421": {
          "entryPoint": null,
          "id": 2421,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@stake_3505": {
          "entryPoint": 1801,
          "id": 3505,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@transferOwnership_949": {
          "entryPoint": 2968,
          "id": 949,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@unstake_3573": {
          "entryPoint": 620,
          "id": 3573,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@userBalance_2437": {
          "entryPoint": null,
          "id": 2437,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@withdraw_3623": {
          "entryPoint": 1042,
          "id": 3623,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 3253,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 3301,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 3335,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": 3360,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_3d3a4e54b74ff146e0d60e2918e0a33df941438760dc2b1788e63abd213b5e06__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 3385,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_53d646aee149094ac0eead6b49a57a0d245426cefc1bc14fc983e382e4766ce3__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c1a1d00e14f7dcedcad185589cd13b73037dedbcbd018ce541963ba3240d6eb6__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 3463,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 3545,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 3569,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 3603,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 3634,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 3657,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:8074:49",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:49",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:216:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "94:2:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "155:36:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "168:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:49"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "159:5:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "254:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "263:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "266:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "256:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "256:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "256:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "213:5:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "224:5:49"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "239:3:49",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "244:1:49",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "235:3:49"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "235:11:49"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:49",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "231:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "231:19:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "220:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "220:31:49"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "210:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "210:42:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "203:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "203:50:49"
                      },
                      "nodeType": "YulIf",
                      "src": "200:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "279:15:49",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "289:5:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "279:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:49",
                    "type": ""
                  }
                ],
                "src": "14:286:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "383:199:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "429:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "438:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "441:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "431:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "431:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "431:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "404:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "413:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "400:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "400:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "425:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "396:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "396:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "393:2:49"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "454:29:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "473:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "467:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "467:16:49"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "458:5:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "536:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "545:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "548:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "538:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "538:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "538:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "505:5:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "526:5:49"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "519:6:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "519:13:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "512:21:49"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "502:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "502:32:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "495:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "495:40:49"
                      },
                      "nodeType": "YulIf",
                      "src": "492:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "561:15:49",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "571:5:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "561:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "349:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "360:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "372:6:49",
                    "type": ""
                  }
                ],
                "src": "305:277:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "657:110:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "703:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "712:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "715:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "705:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "705:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "705:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "678:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "687:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "674:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "674:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "699:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "670:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "667:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "728:33:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "751:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "738:12:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "738:23:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "728:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "623:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "634:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "646:6:49",
                    "type": ""
                  }
                ],
                "src": "587:180:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "853:103:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "899:16:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "908:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "911:1:49",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "901:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "901:12:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "901:12:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "874:7:49"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "883:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "870:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "870:23:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "895:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:32:49"
                      },
                      "nodeType": "YulIf",
                      "src": "863:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "924:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "940:9:49"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "934:5:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "934:16:49"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "924:6:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "819:9:49",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "830:7:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "842:6:49",
                    "type": ""
                  }
                ],
                "src": "772:184:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1062:102:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1072:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1084:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1095:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1080:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1080:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1072:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1114:9:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1129:6:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1145:3:49",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1150:1:49",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1141:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1141:11:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1154:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1137:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1137:19:49"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1125:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1125:32:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1107:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:51:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1107:51:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1031:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1042:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1053:4:49",
                    "type": ""
                  }
                ],
                "src": "961:203:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1326:218:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1336:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1348:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1336:4:49"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1371:29:49",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1389:3:49",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1394:1:49",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1385:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1385:11:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1398:1:49",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:19:49"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1375:2:49",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1416:9:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1431:6:49"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1439:2:49"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1427:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1427:15:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1409:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:34:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1409:34:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1463:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1474:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1459:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:18:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1483:6:49"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1491:2:49"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1479:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1479:15:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1452:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1452:43:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1452:43:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1515:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1526:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1511:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1511:18:49"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1531:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1504:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1504:34:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1504:34:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1279:9:49",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1290:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1298:6:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1306:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1317:4:49",
                    "type": ""
                  }
                ],
                "src": "1169:375:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1678:145:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1688:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1700:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1711:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1696:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1688:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1745:6:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1761:3:49",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1766:1:49",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1757:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1757:11:49"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1770:1:49",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1753:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1753:19:49"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1741:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1741:32:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1723:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:51:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1723:51:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1794:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1805:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1790:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1790:18:49"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1810:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1783:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:34:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1783:34:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1639:9:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1650:6:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1658:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1669:4:49",
                    "type": ""
                  }
                ],
                "src": "1549:274:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1923:92:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1933:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1933:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1975:9:49"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2000:6:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1993:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1993:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1986:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1986:22:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1968:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1968:41:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1968:41:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1892:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1903:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1914:4:49",
                    "type": ""
                  }
                ],
                "src": "1828:187:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2194:235:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2211:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2222:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2204:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2204:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2204:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2245:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2256:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2241:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2241:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2261:2:49",
                            "type": "",
                            "value": "45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2234:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2234:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2284:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2295:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2300:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: invalid amo"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2273:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2273:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2273:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2355:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2366:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2351:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2351:18:49"
                          },
                          {
                            "hexValue": "756e74206f6620736861726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2371:15:49",
                            "type": "",
                            "value": "unt of shares"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2344:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2344:43:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2344:43:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2396:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2419:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2404:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2404:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2396:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2171:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2185:4:49",
                    "type": ""
                  }
                ],
                "src": "2020:409:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2608:228:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2625:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2636:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2618:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2618:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2618:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2659:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2670:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2655:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2655:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2675:2:49",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2648:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2648:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2648:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2698:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2709:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2694:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2694:18:49"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2714:34:49",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2687:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2687:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2687:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2769:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2780:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2765:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2765:18:49"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2785:8:49",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2758:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2758:36:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2758:36:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2803:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2815:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2826:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2811:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2811:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2803:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2585:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2599:4:49",
                    "type": ""
                  }
                ],
                "src": "2434:402:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3015:243:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3032:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3043:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3025:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3025:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3025:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3066:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3077:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3062:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3062:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3082:2:49",
                            "type": "",
                            "value": "53"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3055:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3055:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3055:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3105:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3116:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3101:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3101:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a207374616b65206e6f742065",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3121:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: stake not e"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3094:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3094:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3094:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3176:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3187:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3172:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3172:18:49"
                          },
                          {
                            "hexValue": "6e6f75676820746f20656d69742031207368617265",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3192:23:49",
                            "type": "",
                            "value": "nough to emit 1 share"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3165:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3165:51:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3165:51:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3225:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3237:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3248:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3233:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3233:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3225:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_3d3a4e54b74ff146e0d60e2918e0a33df941438760dc2b1788e63abd213b5e06__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2992:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3006:4:49",
                    "type": ""
                  }
                ],
                "src": "2841:417:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3437:236:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3454:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3465:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3447:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3447:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3447:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3488:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3499:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3484:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3484:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3504:2:49",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3477:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3477:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3477:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3527:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3538:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3523:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3523:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f2074",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3543:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: failed to t"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3516:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3516:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3516:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3598:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3609:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3594:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3594:18:49"
                          },
                          {
                            "hexValue": "72616e7366657220746f6b656e73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3614:16:49",
                            "type": "",
                            "value": "ransfer tokens"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3587:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3587:44:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3587:44:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3640:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3652:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3663:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3648:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3648:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3640:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3414:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3428:4:49",
                    "type": ""
                  }
                ],
                "src": "3263:410:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3852:296:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3869:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3880:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3862:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3862:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3862:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3903:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3914:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3899:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3899:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3919:2:49",
                            "type": "",
                            "value": "66"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3892:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3892:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3892:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3942:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3953:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3938:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3938:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f75676820",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3958:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: not enough "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3931:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3931:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3931:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4013:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4024:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4009:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4009:18:49"
                          },
                          {
                            "hexValue": "74696d6520686173207061737365642073696e6365206c617374206465706f73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4029:34:49",
                            "type": "",
                            "value": "time has passed since last depos"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4002:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4002:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4002:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4084:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4095:3:49",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4080:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4080:19:49"
                          },
                          {
                            "hexValue": "6974",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4101:4:49",
                            "type": "",
                            "value": "it"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4073:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4073:33:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4073:33:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4115:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4127:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4138:3:49",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4123:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4123:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4115:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_53d646aee149094ac0eead6b49a57a0d245426cefc1bc14fc983e382e4766ce3__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3829:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3843:4:49",
                    "type": ""
                  }
                ],
                "src": "3678:470:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4327:166:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4344:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4355:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4337:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4337:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4378:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4389:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4374:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4374:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4394:2:49",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4367:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4367:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4367:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4417:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4428:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4413:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4413:18:49"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4433:18:49",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4406:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4406:46:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4406:46:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4461:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4473:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4484:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4469:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4469:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4461:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4304:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4318:4:49",
                    "type": ""
                  }
                ],
                "src": "4153:340:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4672:233:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4689:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4700:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4682:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4682:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4682:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4723:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4734:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4719:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4719:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4739:2:49",
                            "type": "",
                            "value": "43"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4712:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4712:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4712:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4762:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4773:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4758:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4758:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e636520",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4778:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: no balance "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4751:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4751:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4751:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4833:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4844:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4829:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4829:18:49"
                          },
                          {
                            "hexValue": "746f207769746864726177",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4849:13:49",
                            "type": "",
                            "value": "to withdraw"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4822:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4822:41:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4822:41:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4872:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4884:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4895:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4880:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4880:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4872:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4649:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4663:4:49",
                    "type": ""
                  }
                ],
                "src": "4498:407:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5084:182:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5101:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5112:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5094:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5094:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5094:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5135:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5146:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5131:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5131:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5151:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5124:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5124:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5124:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5174:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5185:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5170:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5170:18:49"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5190:34:49",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5163:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5163:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5163:62:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5234:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5246:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5257:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5242:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5242:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5234:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5061:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5075:4:49",
                    "type": ""
                  }
                ],
                "src": "4910:356:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5445:230:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5462:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5473:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5455:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5455:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5455:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5496:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5507:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5492:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5492:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5512:2:49",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5485:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5485:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5485:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5535:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5546:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5531:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5531:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5551:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: insufficien"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5524:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5524:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5524:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5606:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5617:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5602:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5602:18:49"
                          },
                          {
                            "hexValue": "7420736861726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5622:10:49",
                            "type": "",
                            "value": "t shares"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5595:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5595:38:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5595:38:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5642:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5654:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5665:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5650:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5650:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5642:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5422:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5436:4:49",
                    "type": ""
                  }
                ],
                "src": "5271:404:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5854:250:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5871:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5882:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5864:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5864:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5864:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5905:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5916:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5901:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5901:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5921:2:49",
                            "type": "",
                            "value": "60"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5894:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5894:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5894:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5944:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5955:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5940:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5940:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206e6f7420656e6f75676820",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5960:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: not enough "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5933:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5933:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5933:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6015:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6026:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6011:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6011:18:49"
                          },
                          {
                            "hexValue": "746f6b656e7320617661696c61626c6520666f72207374616b696e67",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6031:30:49",
                            "type": "",
                            "value": "tokens available for staking"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6004:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6004:58:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6004:58:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6071:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6083:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6094:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6079:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6079:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6071:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c1a1d00e14f7dcedcad185589cd13b73037dedbcbd018ce541963ba3240d6eb6__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5831:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5845:4:49",
                    "type": ""
                  }
                ],
                "src": "5680:424:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6283:240:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6300:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6311:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6293:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6293:21:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6293:21:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6334:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6345:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6330:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6330:18:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6350:2:49",
                            "type": "",
                            "value": "50"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6323:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6323:30:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6323:30:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6373:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6384:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6369:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6369:18:49"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d757374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6389:34:49",
                            "type": "",
                            "value": "StakingPoolUserImpl: amount must"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6362:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6362:62:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6362:62:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6444:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6455:2:49",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6440:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6440:18:49"
                          },
                          {
                            "hexValue": "2062652067726561746572207468616e2030",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6460:20:49",
                            "type": "",
                            "value": " be greater than 0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6433:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6433:48:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6433:48:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6490:27:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6502:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6513:3:49",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6498:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6498:19:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6490:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6260:9:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6274:4:49",
                    "type": ""
                  }
                ],
                "src": "6109:414:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6629:76:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6639:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6651:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6662:2:49",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6647:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6647:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6639:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6681:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6692:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6674:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6674:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6674:25:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6598:9:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6609:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6620:4:49",
                    "type": ""
                  }
                ],
                "src": "6528:177:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6839:119:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6849:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6861:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6872:2:49",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6857:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6857:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6849:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6891:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6902:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6884:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6884:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6884:25:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6929:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6940:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6925:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6925:18:49"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6945:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6918:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6918:34:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6918:34:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6800:9:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6811:6:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6819:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6830:4:49",
                    "type": ""
                  }
                ],
                "src": "6710:248:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7120:162:49",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "7130:26:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7142:9:49"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7153:2:49",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7138:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7138:18:49"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7130:4:49"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7172:9:49"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7183:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7165:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7165:25:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7165:25:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7210:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7221:2:49",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7206:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7206:18:49"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "7226:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7199:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7199:34:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7199:34:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7253:9:49"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7264:2:49",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7249:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7249:18:49"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "7269:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7242:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7242:34:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7242:34:49"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7073:9:49",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "7084:6:49",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "7092:6:49",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "7100:6:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7111:4:49",
                    "type": ""
                  }
                ],
                "src": "6963:319:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7335:80:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7362:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "7364:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7364:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7364:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7351:1:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7358:1:49"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "7354:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7354:6:49"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7348:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7348:13:49"
                      },
                      "nodeType": "YulIf",
                      "src": "7345:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7393:16:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7404:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7407:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7400:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7400:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "7393:3:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "7318:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "7321:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "7327:3:49",
                    "type": ""
                  }
                ],
                "src": "7287:128:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7466:171:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7497:111:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7518:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7525:3:49",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7530:10:49",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "7521:3:49"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7521:20:49"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7511:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7511:31:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7511:31:49"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7562:1:49",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7565:4:49",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "7555:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7555:15:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7555:15:49"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7590:1:49",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7593:4:49",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "7583:6:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7583:15:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7583:15:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7486:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7479:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7479:9:49"
                      },
                      "nodeType": "YulIf",
                      "src": "7476:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7617:14:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7626:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7629:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "7622:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7622:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "7617:1:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "7451:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "7454:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "7460:1:49",
                    "type": ""
                  }
                ],
                "src": "7420:217:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7694:116:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7753:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "7755:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7755:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7755:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7725:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7718:6:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7718:9:49"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7711:6:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7711:17:49"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "7733:1:49"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7744:1:49",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "7740:3:49"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7740:6:49"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7748:1:49"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "7736:3:49"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7736:14:49"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "7730:2:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7730:21:49"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7707:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7707:45:49"
                      },
                      "nodeType": "YulIf",
                      "src": "7704:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7784:20:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7799:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7802:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "7795:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7795:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "7784:7:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "7673:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "7676:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "7682:7:49",
                    "type": ""
                  }
                ],
                "src": "7642:168:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7864:76:49",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "7886:22:49",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "7888:16:49"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7888:18:49"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "7888:18:49"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7880:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7883:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7877:2:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7877:8:49"
                      },
                      "nodeType": "YulIf",
                      "src": "7874:2:49"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7917:17:49",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7929:1:49"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7932:1:49"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7925:3:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7925:9:49"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "7917:4:49"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "7846:1:49",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "7849:1:49",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "7855:4:49",
                    "type": ""
                  }
                ],
                "src": "7815:125:49"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7977:95:49",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7994:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8001:3:49",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8006:10:49",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "7997:3:49"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7997:20:49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7987:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7987:31:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7987:31:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8034:1:49",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8037:4:49",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8027:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8027:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8027:15:49"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8058:1:49",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8061:4:49",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "8051:6:49"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8051:15:49"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8051:15:49"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "7945:127:49"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: invalid amo\")\n        mstore(add(headStart, 96), \"unt of shares\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3d3a4e54b74ff146e0d60e2918e0a33df941438760dc2b1788e63abd213b5e06__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: stake not e\")\n        mstore(add(headStart, 96), \"nough to emit 1 share\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: failed to t\")\n        mstore(add(headStart, 96), \"ransfer tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_53d646aee149094ac0eead6b49a57a0d245426cefc1bc14fc983e382e4766ce3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: not enough \")\n        mstore(add(headStart, 96), \"time has passed since last depos\")\n        mstore(add(headStart, 128), \"it\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: no balance \")\n        mstore(add(headStart, 96), \"to withdraw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: insufficien\")\n        mstore(add(headStart, 96), \"t shares\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c1a1d00e14f7dcedcad185589cd13b73037dedbcbd018ce541963ba3240d6eb6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: not enough \")\n        mstore(add(headStart, 96), \"tokens available for staking\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: amount must\")\n        mstore(add(headStart, 96), \" be greater than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
          "id": 49,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "3339": [
          {
            "length": 32,
            "start": 1183
          },
          {
            "length": 32,
            "start": 1551
          },
          {
            "length": 32,
            "start": 2625
          }
        ],
        "3341": [
          {
            "length": 32,
            "start": 368
          },
          {
            "length": 32,
            "start": 2036
          },
          {
            "length": 32,
            "start": 2877
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB6B55F25 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x710FE6F8 EQ PUSH2 0x1E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0xD668087 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x192 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134 PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15D PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B JUMP JUMPDEST PUSH2 0x15D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x26C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A5 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x412 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B JUMP JUMPDEST PUSH2 0x15D PUSH2 0x5DC JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14B JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x21C CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST PUSH2 0x15D PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0x9B9 JUMP JUMPDEST PUSH2 0x15D PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xD07 JUMP JUMPDEST PUSH2 0xB77 JUMP JUMPDEST PUSH2 0x15D PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A5 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0xCB5 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x2E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E76616C696420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x756E74206F6620736861726573 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0x348 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7420736861726573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x35C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x36D DUP4 PUSH2 0x5AB JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x381 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39A SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x3B3 SWAP1 DUP5 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3CC SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x483 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F2062616C616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x746F207769746864726177 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x523 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0x53F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD39 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x56C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5BC JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x98 SLOAD PUSH2 0x5CC SWAP1 DUP5 PUSH2 0xE13 JUMP JUMPDEST PUSH2 0x5D6 SWAP2 SWAP1 PUSH2 0xDF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x651 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x699 JUMPI DUP1 PUSH2 0x69B JUMP JUMPDEST DUP2 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0x707 PUSH1 0x0 PUSH2 0xC63 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x77B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD87 JUMP JUMPDEST DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x746F6B656E7320617661696C61626C6520666F72207374616B696E6700000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH1 0x2 ADD SLOAD PUSH2 0x822 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F7420656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696D6520686173207061737365642073696E6365206C617374206465706F73 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x1A5D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8AD DUP4 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A207374616B65206E6F742065 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x6E6F75676820746F20656D69742031207368617265 PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x931 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP4 SWAP1 DUP4 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x94A SWAP1 DUP5 SWAP1 PUSH2 0xE32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x963 SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x97C SWAP2 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x5AF417134F72A9D41143ACE85B0A26DCE6F550F894F2CBC1EEEE8810603D91B6 SWAP2 ADD PUSH2 0x405 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0xCE5 JUMP JUMPDEST PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DA SWAP1 PUSH2 0xD39 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP4 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xB04 SWAP1 DUP5 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP TIMESTAMP PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE CALLER SWAP1 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 DUP5 SWAP1 PUSH2 0xB62 SWAP1 PUSH32 0x0 SWAP1 PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x59F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xB88 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH2 0x5CC SWAP1 DUP5 PUSH2 0xE13 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2DA JUMP JUMPDEST PUSH2 0xC60 DUP2 PUSH2 0xC63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xCDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206661696C656420746F2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x72616E7366657220746F6B656E73 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20616D6F756E74206D757374 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x2062652067726561746572207468616E203 PUSH1 0x74 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xDEC JUMPI PUSH2 0xDEC PUSH2 0xE49 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE0E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xE2D JUMPI PUSH2 0xE2D PUSH2 0xE49 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE44 PUSH2 0xE49 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP GASPRICE 0x25 0x4C PUSH10 0x586D0AD54AB38580D22E 0x28 LOG2 EXTCODECOPY CALLER 0xBD 0x2D DUP4 CALLDATACOPY 0xAA 0x4B 0x4F 0xC7 POP 0xE1 BALANCE PUSH5 0xB864736F6C PUSH4 0x43000806 STOP CALLER ",
      "sourceMap": "775:5506:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:50:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7165:25:49;;;7221:2;7206:18;;7199:34;;;;7249:18;;;7242:34;7153:2;7138:18;1454:50:28;;;;;;;;975:21;;;;;;;;;6674:25:49;;;6662:2;6647:18;975:21:28;6629:76:49;881:33:34;;;;;3909:961;;;;;;:::i;:::-;;:::i;:::-;;5005:797;;;;;;:::i;:::-;;:::i;1787:270:28:-;;;;;;:::i;:::-;;:::i;1310:84:10:-;1380:7;;;;1310:84;;1993:14:49;;1986:22;1968:41;;1956:2;1941:18;1310:84:10;1923:92:49;5808:471:34;;;:::i;1871:92:8:-;;;:::i;1239:85::-;1311:6;;1239:85;;-1:-1:-1;;;;;1311:6:8;;;1107:51:49;;1095:2;1080:18;1239:85:8;1062:102:49;2245:1512:34;;;;;;:::i;:::-;;:::i;1028:21:28:-;;;;;;1192:890:34;;;;;;:::i;:::-;;:::i;1511:270:28:-;;;;;;:::i;:::-;;:::i;1106:32::-;;;;;;2112:189:8;;;;;;:::i;:::-;;:::i;3909:961:34:-;4008:10;3969:24;3996:23;;;:11;:23;;;;;4080:11;4072:69;;;;-1:-1:-1;;;4072:69:34;;2222:2:49;4072:69:34;;;2204:21:49;2261:2;2241:18;;;2234:30;2300:34;2280:18;;;2273:62;-1:-1:-1;;;2351:18:49;;;2344:43;2404:19;;4072:69:34;;;;;;;;;4242:7;4227:4;:11;;;:22;;4206:109;;;;-1:-1:-1;;;4206:109:34;;5473:2:49;4206:109:34;;;5455:21:49;5512:2;5492:18;;;5485:30;5551:34;5531:18;;;5524:62;-1:-1:-1;;;5602:18:49;;;5595:38;5650:19;;4206:109:34;5445:230:49;4206:109:34;4381:7;4366:4;:11;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;4449:15:34;;-1:-1:-1;4467:23:34;4482:7;4467:14;:23::i;:::-;4449:41;;4553:7;4543:6;;:17;;;;;;;:::i;:::-;;;;;;;;4580:7;4570:6;;:17;;;;;;;:::i;:::-;;;;-1:-1:-1;;4652:23:34;;4668:7;;4652:4;;:12;;:23;;4668:7;;4652:23;:::i;:::-;;;;;;;;4746:7;4725:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;4826:37:34;;;6884:25:49;;;6940:2;6925:18;;6918:34;;;4834:10:34;;4826:37;;6857:18:49;4826:37:34;;;;;;;;3959:911;;3909:961;:::o;5005:797::-;5105:10;5066:24;5093:23;;;:11;:23;;;;;5185:12;;5164:106;;;;-1:-1:-1;;;5164:106:34;;4700:2:49;5164:106:34;;;4682:21:49;4739:2;4719:18;;;4712:30;4778:34;4758:18;;;4751:62;-1:-1:-1;;;4829:18:49;;;4822:41;4880:19;;5164:106:34;4672:233:49;5164:106:34;5341:34;;-1:-1:-1;;;5341:34:34;;5355:10;5341:34;;;1723:51:49;1790:18;;;1783:34;;;5341:4:34;-1:-1:-1;;;;;5341:13:34;;;;1696:18:49;;5341:34:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5320:127;;;;-1:-1:-1;;;5320:127:34;;;;;;;:::i;:::-;5511:7;5495:4;:12;;;:23;;;;;;;:::i;:::-;;;;;;;;5636:7;5615:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;5766:29:34;;6674:25:49;;;5775:10:34;;5766:29;;6662:2:49;6647:18;5766:29:34;;;;;;;;5056:746;5005:797;:::o;1787:270:28:-;1849:7;1905:6;;1915:1;1905:11;1901:106;;;-1:-1:-1;1989:7:28;1787:270::o;1901:106::-;2044:6;;2034;;2024:16;;:7;:16;:::i;:::-;2023:27;;;;:::i;:::-;2016:34;1787:270;-1:-1:-1;;1787:270:28:o;5808:471:34:-;5926:10;5868:7;5914:23;;;:11;:23;;;;;;6028:12;;6103:29;;-1:-1:-1;;;6103:29:34;;6126:4;6103:29;;;1107:51:49;5914:23:34;;6028:12;5868:7;;-1:-1:-1;;;;;6103:4:34;:14;;;;1080:18:49;;6103:29:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6085:47;;6245:7;6234;:18;;:38;;6265:7;6234:38;;;6255:7;6234:38;6227:45;;;;;5808:471;:::o;1871:92:8:-;1311:6;;-1:-1:-1;;;;;1311:6:8;901:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;5112:2:49;1443:68:8;;;5094:21:49;;;5131:18;;;5124:30;5190:34;5170:18;;;5163:62;5242:18;;1443:68:8;5084:182:49;1443:68:8;1935:21:::1;1953:1;1935:9;:21::i;:::-;1871:92::o:0;2245:1512:34:-;1380:7:10;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;4355:2:49;1615:38:10;;;4337:21:49;4394:2;4374:18;;;4367:30;-1:-1:-1;;;4413:18:49;;;4406:46;4469:18;;1615:38:10;4327:166:49;1615:38:10;2384:10:34::1;2345:24;2372:23:::0;;;:11:::1;:23;::::0;;;;2632:11;2611:108:::1;;;;-1:-1:-1::0;;;2611:108:34::1;;;;;;;:::i;:::-;2761:12:::0;;2750:23;::::1;;2729:130;;;::::0;-1:-1:-1;;;2729:130:34;;5882:2:49;2729:130:34::1;::::0;::::1;5864:21:49::0;5921:2;5901:18;;;5894:30;5960:34;5940:18;;;5933:62;6031:30;6011:18;;;6004:58;6079:19;;2729:130:34::1;5854:250:49::0;2729:130:34::1;2998:8;2974:4;:21;;;:32;;;;:::i;:::-;2955:15;:51;;2934:164;;;::::0;-1:-1:-1;;;2934:164:34;;3880:2:49;2934:164:34::1;::::0;::::1;3862:21:49::0;3919:2;3899:18;;;3892:30;3958:34;3938:18;;;3931:62;4029:34;4009:18;;;4002:62;-1:-1:-1;;;4080:19:49;;;4073:33;4123:19;;2934:164:34::1;3852:296:49::0;2934:164:34::1;3157:15;3175:23;3190:7;3175:14;:23::i;:::-;3157:41;;3305:1;3295:7;:11;3274:111;;;::::0;-1:-1:-1;;;3274:111:34;;3043:2:49;3274:111:34::1;::::0;::::1;3025:21:49::0;3082:2;3062:18;;;3055:30;3121:34;3101:18;;;3094:62;-1:-1:-1;;;3172:18:49;;;3165:51;3233:19;;3274:111:34::1;3015:243:49::0;3274:111:34::1;3463:7;3448:4;:11;;;:22;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3480:23:34;;3496:7;;3480:4;;:12:::1;::::0;:23:::1;::::0;3496:7;;3480:23:::1;:::i;:::-;;;;;;;;3595:7;3585:6;;:17;;;;;;;:::i;:::-;;;;;;;;3622:7;3612:6;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3715:35:34::1;::::0;;6884:25:49;;;6940:2;6925:18;;6918:34;;;3721:10:34::1;::::0;3715:35:::1;::::0;6857:18:49;3715:35:34::1;6839:119:49::0;1192:890:34;1380:7:10;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;4355:2:49;1615:38:10;;;4337:21:49;4394:2;4374:18;;;4367:30;-1:-1:-1;;;4413:18:49;;;4406:46;4469:18;;1615:38:10;4327:166:49;1615:38:10;1502:1:34::1;1492:7;:11;1471:108;;;;-1:-1:-1::0;;;1471:108:34::1;;;;;;;:::i;:::-;1610:53;::::0;-1:-1:-1;;;1610:53:34;;1628:10:::1;1610:53;::::0;::::1;1409:34:49::0;1648:4:34::1;1459:18:49::0;;;1452:43;1511:18;;;1504:34;;;1610:4:34::1;-1:-1:-1::0;;;;;1610:17:34::1;::::0;::::1;::::0;1344:18:49;;1610:53:34::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1589:146;;;;-1:-1:-1::0;;;1589:146:34::1;;;;;;;:::i;:::-;1825:10;1786:24;1813:23:::0;;;:11:::1;:23;::::0;;;;1846;;1813;;1862:7;;1813:23;;1786:24;1846:23:::1;::::0;1862:7;;1846:23:::1;:::i;:::-;::::0;;;-1:-1:-1;;1939:15:34::1;1915:21;::::0;::::1;:39:::0;;;2027:10:::1;::::0;2019:56:::1;::::0;2039:7;;2048:26:::1;::::0;2066:8:::1;::::0;2048:26:::1;:::i;:::-;2019:56;::::0;;6884:25:49;;;6940:2;6925:18;;6918:34;;;;6857:18;2019:56:34::1;6839:119:49::0;1511:270:28;1573:7;1629:6;;1639:1;1629:11;1625:106;;;-1:-1:-1;1713:7:28;1511:270::o;1625:106::-;1768:6;;1758;;1748:16;;:7;:16;:::i;2112:189:8:-;1311:6;;-1:-1:-1;;;;;1311:6:8;901:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;5112:2:49;1443:68:8;;;5094:21:49;;;5131:18;;;5124:30;5190:34;5170:18;;;5163:62;5242:18;;1443:68:8;5084:182:49;1443:68:8;-1:-1:-1;;;;;2200:22:8;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:8;;2636:2:49;2192:73:8::1;::::0;::::1;2618:21:49::0;2675:2;2655:18;;;2648:30;2714:34;2694:18;;;2687:62;-1:-1:-1;;;2765:18:49;;;2758:36;2811:19;;2192:73:8::1;2608:228:49::0;2192:73:8::1;2275:19;2285:8;2275:9;:19::i;:::-;2112:189:::0;:::o;2307:169::-;2381:6;;;-1:-1:-1;;;;;2397:17:8;;;-1:-1:-1;;;;;;2397:17:8;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;2362:16;;2429:40;2352:124;2307:169;:::o;14:286:49:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:49;;210:42;;200:2;;266:1;263;256:12;200:2;289:5;84:216;-1:-1:-1;;;84:216:49:o;305:277::-;372:6;425:2;413:9;404:7;400:23;396:32;393:2;;;441:1;438;431:12;393:2;473:9;467:16;526:5;519:13;512:21;505:5;502:32;492:2;;548:1;545;538:12;587:180;646:6;699:2;687:9;678:7;674:23;670:32;667:2;;;715:1;712;705:12;667:2;-1:-1:-1;738:23:49;;657:110;-1:-1:-1;657:110:49:o;772:184::-;842:6;895:2;883:9;874:7;870:23;866:32;863:2;;;911:1;908;901:12;863:2;-1:-1:-1;934:16:49;;853:103;-1:-1:-1;853:103:49:o;3263:410::-;3465:2;3447:21;;;3504:2;3484:18;;;3477:30;3543:34;3538:2;3523:18;;3516:62;-1:-1:-1;;;3609:2:49;3594:18;;3587:44;3663:3;3648:19;;3437:236::o;6109:414::-;6311:2;6293:21;;;6350:2;6330:18;;;6323:30;6389:34;6384:2;6369:18;;6362:62;-1:-1:-1;;;6455:2:49;6440:18;;6433:48;6513:3;6498:19;;6283:240::o;7287:128::-;7327:3;7358:1;7354:6;7351:1;7348:13;7345:2;;;7364:18;;:::i;:::-;-1:-1:-1;7400:9:49;;7335:80::o;7420:217::-;7460:1;7486;7476:2;;7530:10;7525:3;7521:20;7518:1;7511:31;7565:4;7562:1;7555:15;7593:4;7590:1;7583:15;7476:2;-1:-1:-1;7622:9:49;;7466:171::o;7642:168::-;7682:7;7748:1;7744;7740:6;7736:14;7733:1;7730:21;7725:1;7718:9;7711:17;7707:45;7704:2;;;7755:18;;:::i;:::-;-1:-1:-1;7795:9:49;;7694:116::o;7815:125::-;7855:4;7883:1;7880;7877:8;7874:2;;;7888:18;;:::i;:::-;-1:-1:-1;7925:9:49;;7864:76::o;7945:127::-;8006:10;8001:3;7997:20;7994:1;7987:31;8037:4;8034:1;8027:15;8061:4;8058:1;8051:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "746600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "amount()": "2384",
        "amountToShares(uint256)": "6819",
        "deposit(uint256)": "infinite",
        "getWithdrawBalance()": "infinite",
        "lockTime()": "infinite",
        "owner()": "2346",
        "paused()": "2359",
        "renounceOwnership()": "28140",
        "requiredLiquidity()": "2361",
        "shares()": "2341",
        "sharesToAmount(uint256)": "6820",
        "stake(uint256)": "infinite",
        "transferOwnership(address)": "28365",
        "unstake(uint256)": "infinite",
        "userBalance(address)": "6772",
        "withdraw(uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "amount()": "aa8c217c",
      "amountToShares(uint256)": "b811540e",
      "deposit(uint256)": "b6b55f25",
      "getWithdrawBalance()": "710fe6f8",
      "lockTime()": "0d668087",
      "owner()": "8da5cb5b",
      "paused()": "5c975abb",
      "renounceOwnership()": "715018a6",
      "requiredLiquidity()": "e366b7bb",
      "shares()": "03314efa",
      "sharesToAmount(uint256)": "555d8ebb",
      "stake(uint256)": "a694fc3a",
      "transferOwnership(address)": "f2fde38b",
      "unstake(uint256)": "2e17de78",
      "userBalance(address)": "0103c92b",
      "withdraw(uint256)": "2e1a7d4d"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ctsi\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeTimestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"amountToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"sharesToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor\",\"params\":{\"_ctsi\":\"The contract that provides the staking pool's token\",\"_lockTime\":\"The user deposit lock period\"}},\"getWithdrawBalance()\":{\"details\":\"there is no way to know the exact time in the future the requested tokens will be available\",\"returns\":{\"_0\":\"the amount of tokens that can be immediately withdrawn by the calling user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"params\":{\"_amount\":\"amount of tokens to convert from user's balance\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"details\":\"this will transfer all free tokens for the calling user\"}},\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,uint256,uint256)\":{\"notice\":\"Tokens were deposited, available for staking or withdrawal\"},\"Stake(address,uint256,uint256)\":{\"notice\":\"Tokens were deposited, they count as shares immediatly\"},\"Unstake(address,uint256,uint256)\":{\"notice\":\"Request to unstake tokens. Additional liquidity requested for the pool\"},\"Withdraw(address,uint256)\":{\"notice\":\"Withdraw performed by a user\"}},\"kind\":\"user\",\"methods\":{\"getWithdrawBalance()\":{\"notice\":\"Returns the amount of tokens that can be immediately withdrawn by the calling user\"},\"stake(uint256)\":{\"notice\":\"Stake an amount of tokens, immediately earning pool shares in returns\"},\"unstake(uint256)\":{\"notice\":\"allow for users to defined exactly how many shares they want to unstake. Estimated value is then emitted on Unstake event\"},\"withdraw(uint256)\":{\"notice\":\"Transfer tokens back to calling user wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolUserImpl.sol\":\"StakingPoolUserImpl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/StakingPoolData.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\ncontract StakingPoolData is\\n    Initializable,\\n    PausableUpgradeable,\\n    OwnableUpgradeable\\n{\\n    uint256 public shares; // total number of shares\\n    uint256 public amount; // amount of staked tokens (no matter where it is)\\n    uint256 public requiredLiquidity; // amount of required tokens for withdraw requests\\n\\n    struct UserBalance {\\n        uint256 balance; // amount of free tokens belonging to this user\\n        uint256 shares; // amount of shares beloging to this user\\n        uint256 depositTimestamp; // timestamp of when user deposited for the last time\\n    }\\n    mapping(address => UserBalance) public userBalance;\\n\\n    function amountToShares(uint256 _amount) public view returns (uint256) {\\n        // TODO: rounding errors\\n        if (amount == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _amount;\\n        }\\n        return (_amount * shares) / amount;\\n    }\\n\\n    function sharesToAmount(uint256 _shares) public view returns (uint256) {\\n        // TODO: rounding errors\\n        if (shares == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _shares;\\n        }\\n        return (_shares * amount) / shares;\\n    }\\n}\\n\",\"keccak256\":\"0x30f5f4098859e153521bd7b75e70ebafe83bde1a53076a2c3693ac9c8fac04af\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolUserImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/StakingPoolUser.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolUserImpl is StakingPoolUser, StakingPoolData {\\n    IERC20 private immutable ctsi;\\n    uint256 public immutable lockTime;\\n\\n    /// @dev Constructor\\n    /// @param _ctsi The contract that provides the staking pool's token\\n    /// @param _lockTime The user deposit lock period\\n    constructor(address _ctsi, uint256 _lockTime) {\\n        ctsi = IERC20(_ctsi);\\n        lockTime = _lockTime;\\n    }\\n\\n    function deposit(uint256 _amount) public override whenNotPaused {\\n        // transfer tokens from caller to this contract\\n        // user must have approved the transfer a priori\\n        // tokens will be lying around, until actually staked by pool owner at a later time\\n        require(\\n            _amount > 0,\\n            \\\"StakingPoolUserImpl: amount must be greater than 0\\\"\\n        );\\n        require(\\n            ctsi.transferFrom(msg.sender, address(this), _amount),\\n            \\\"StakingPoolUserImpl: failed to transfer tokens\\\"\\n        );\\n\\n        // add tokens to user's balance\\n        UserBalance storage user = userBalance[msg.sender];\\n        user.balance += _amount;\\n\\n        // reset deposit timestamp\\n        user.depositTimestamp = block.timestamp;\\n\\n        // emit event containing user and amount\\n        emit Deposit(msg.sender, _amount, block.timestamp + lockTime);\\n    }\\n\\n    /// @notice Stake an amount of tokens, immediately earning pool shares in returns\\n    /// @param _amount amount of tokens to convert from user's balance\\n    function stake(uint256 _amount) public override whenNotPaused {\\n        // get user balance\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // transfer tokens from caller to this contract\\n        // user must have approved the transfer a priori\\n        // tokens will be lying around, until actually staked by pool owner at a later time\\n        require(\\n            _amount > 0,\\n            \\\"StakingPoolUserImpl: amount must be greater than 0\\\"\\n        );\\n        require(\\n            _amount <= user.balance,\\n            \\\"StakingPoolUserImpl: not enough tokens available for staking\\\"\\n        );\\n\\n        // check if user can already stake or if it's too early\\n        require(\\n            block.timestamp >= user.depositTimestamp + lockTime,\\n            \\\"StakingPoolUserImpl: not enough time has passed since last deposit\\\"\\n        );\\n\\n        // calculate amount of shares as of now\\n        uint256 _shares = amountToShares(_amount);\\n\\n        // make sure he get at least one share (rounding errors)\\n        require(\\n            _shares > 0,\\n            \\\"StakingPoolUserImpl: stake not enough to emit 1 share\\\"\\n        );\\n\\n        // allocate new shares to user, immediately\\n        user.shares += _shares;\\n        user.balance -= _amount;\\n\\n        // increase total shares and amount (not changing share value)\\n        amount += _amount;\\n        shares += _shares;\\n\\n        // emit event containing user, amount, shares and unlock time\\n        emit Stake(msg.sender, _amount, _shares);\\n    }\\n\\n    /// @notice allow for users to defined exactly how many shares they\\n    /// want to unstake. Estimated value is then emitted on Unstake event\\n    function unstake(uint256 _shares) public override {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // check if shares is valid value\\n        require(_shares > 0, \\\"StakingPoolUserImpl: invalid amount of shares\\\");\\n\\n        // check if user has enough shares to unstake\\n        require(\\n            user.shares >= _shares,\\n            \\\"StakingPoolUserImpl: insufficient shares\\\"\\n        );\\n\\n        // reduce user number of shares\\n        user.shares -= _shares;\\n\\n        // calculate amount of tokens from shares\\n        uint256 _amount = sharesToAmount(_shares);\\n\\n        // reduce total shares and amount\\n        shares -= _shares;\\n        amount -= _amount;\\n\\n        // add amout user can withdraw (if available)\\n        user.balance += _amount;\\n\\n        // increase required liquidity\\n        requiredLiquidity += _amount;\\n\\n        // emit event containing user, amount and shares\\n        emit Unstake(msg.sender, _amount, _shares);\\n    }\\n\\n    /// @notice Transfer tokens back to calling user wallet\\n    /// @dev this will transfer all free tokens for the calling user\\n    function withdraw(uint256 _amount) public override {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // check user released value\\n        require(\\n            user.balance > 0,\\n            \\\"StakingPoolUserImpl: no balance to withdraw\\\"\\n        );\\n\\n        // transfer token back to user\\n        require(\\n            ctsi.transfer(msg.sender, _amount),\\n            \\\"StakingPoolUserImpl: failed to transfer tokens\\\"\\n        );\\n\\n        // clear user released value\\n        user.balance -= _amount; // if _amount >  user.balance this will revert\\n\\n        // decrease required liquidity\\n        requiredLiquidity -= _amount; // if _amount >  requiredLiquidity this will revert\\n\\n        // emit event containing user and token amount\\n        emit Withdraw(msg.sender, _amount);\\n    }\\n\\n    function getWithdrawBalance() public view override returns (uint256) {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // get maximum amount user can withdraw (his balance)\\n        uint256 _amount = user.balance;\\n\\n        // check contract balance\\n        uint256 balance = ctsi.balanceOf(address(this));\\n\\n        // he can withdraw whatever is available at the contract, up to his balance\\n        return balance >= _amount ? _amount : balance;\\n    }\\n}\\n\",\"keccak256\":\"0xc8a8c9460d820ad0c8ece5ab4639c69851d7a63cea0538ae49d826dec999ddfc\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolUser.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool user and a pool\\n/// @author Danilo Tuler\\n/// @notice This interface models all interactions between a pool user and a pool,\\n/// including staking, unstaking and withdrawing. A pool user always holds pool shares.\\n/// When a user stakes tokens, he immediately receive shares. When he unstakes shares\\n/// he is asking to release tokens. Those tokens need to be withdrawn by an additional\\n/// call to withdraw()\\ninterface StakingPoolUser {\\n    /// @notice Deposit tokens to user pool balance\\n    /// @param amount amount of token deposited in the pool\\n    function deposit(uint256 amount) external;\\n\\n    /// @notice Stake an amount of tokens, immediately earning pool shares in returns\\n    /// @param amount amount of tokens to convert to shares\\n    function stake(uint256 amount) external;\\n\\n    /// @notice Unstake an specified amount of shares of the calling user\\n    /// @dev Shares are immediately converted to tokens, and added to the pool liquidity requirement\\n    function unstake(uint256 shares) external;\\n\\n    /// @notice Transfer tokens back to calling user wallet\\n    /// @dev this will transfer tokens from user pool account to user's wallet\\n    function withdraw(uint256 amount) external;\\n\\n    /// @notice Returns the amount of tokens that can be immediately withdrawn by the calling user\\n    /// @dev there is no way to know the exact time in the future the requested tokens will be available\\n    /// @return the amount of tokens that can be immediately withdrawn by the calling user\\n    function getWithdrawBalance() external returns (uint256);\\n\\n    /// @notice Tokens were deposited, available for staking or withdrawal\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens deposited by the user\\n    /// @param stakeTimestamp instant when the amount can be staked\\n    event Deposit(address indexed user, uint256 amount, uint256 stakeTimestamp);\\n\\n    /// @notice Tokens were deposited, they count as shares immediatly\\n    /// @param user address of msg.sender\\n    /// @param amount amount deposited by the user\\n    /// @param shares number of shares emitted for user\\n    event Stake(address indexed user, uint256 amount, uint256 shares);\\n\\n    /// @notice Request to unstake tokens. Additional liquidity requested for the pool\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens to be released\\n    /// @param shares number of shares being liquidated\\n    event Unstake(address indexed user, uint256 amount, uint256 shares);\\n\\n    /// @notice Withdraw performed by a user\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens withdrawn\\n    event Withdraw(address indexed user, uint256 amount);\\n}\\n\",\"keccak256\":\"0xdd0612eef33a71a77364bd68c573dbb950b195500dc21c15f52ff32908fabc60\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 979,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 982,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1174,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1040,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_paused",
        "offset": 0,
        "slot": "51",
        "type": "t_bool"
      },
      {
        "astId": 1131,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 859,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 972,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 2421,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "shares",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 2423,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "amount",
        "offset": 0,
        "slot": "152",
        "type": "t_uint256"
      },
      {
        "astId": 2425,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "requiredLiquidity",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 2437,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "userBalance",
        "offset": 0,
        "slot": "154",
        "type": "t_mapping(t_address,t_struct(UserBalance)2432_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(UserBalance)2432_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPoolData.UserBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(UserBalance)2432_storage"
      },
      "t_struct(UserBalance)2432_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolData.UserBalance",
        "members": [
          {
            "astId": 2427,
            "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
            "label": "balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2429,
            "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
            "label": "shares",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2431,
            "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
            "label": "depositTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "Deposit(address,uint256,uint256)": {
        "notice": "Tokens were deposited, available for staking or withdrawal"
      },
      "Stake(address,uint256,uint256)": {
        "notice": "Tokens were deposited, they count as shares immediatly"
      },
      "Unstake(address,uint256,uint256)": {
        "notice": "Request to unstake tokens. Additional liquidity requested for the pool"
      },
      "Withdraw(address,uint256)": {
        "notice": "Withdraw performed by a user"
      }
    },
    "kind": "user",
    "methods": {
      "getWithdrawBalance()": {
        "notice": "Returns the amount of tokens that can be immediately withdrawn by the calling user"
      },
      "stake(uint256)": {
        "notice": "Stake an amount of tokens, immediately earning pool shares in returns"
      },
      "unstake(uint256)": {
        "notice": "allow for users to defined exactly how many shares they want to unstake. Estimated value is then emitted on Unstake event"
      },
      "withdraw(uint256)": {
        "notice": "Transfer tokens back to calling user wallet"
      }
    },
    "version": 1
  }
}