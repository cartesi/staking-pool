{
  "contractName": "StakingPoolUserImpl",
  "sourceName": "contracts/StakingPoolUserImpl.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ctsi",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "unlockTimestamp",
          "type": "uint256"
        }
      ],
      "name": "Stake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Unstake",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_lockTime",
          "type": "uint256"
        }
      ],
      "name": "__StakingPoolUser_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "amountToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "released",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unstakeTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610cbb380380610cbb83398101604081905261002f91610044565b60601b6001600160601b031916608052610074565b60006020828403121561005657600080fd5b81516001600160a01b038116811461006d57600080fd5b9392505050565b60805160601c610c1b6100a0600039600081816104c20152818161062301526107f00152610c1b6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063aa8c217c11610066578063aa8c217c146101f7578063b811540e14610200578063e366b7bb14610213578063f2fde38b1461021c57600080fd5b8063715018a6146101ae5780637172dea2146101b65780638da5cb5b146101c9578063a694fc3a146101e457600080fd5b80633ccfd60b116100d35780633ccfd60b14610175578063555d8ebb1461017d5780635c975abb14610190578063710fe6f8146101a657600080fd5b80630103c92b146100fa57806303314efa146101495780632e17de7814610160575b600080fd5b610129610108366004610a8d565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61015260975481565b604051908152602001610140565b61017361016e366004610adf565b61022f565b005b610173610431565b61015261018b366004610adf565b6105bc565b60335460ff166040519015158152602001610140565b6101526105ed565b6101736106b7565b6101736101c4366004610adf565b609b55565b6065546040516001600160a01b039091168152602001610140565b6101736101f2366004610adf565b61071d565b61015260985481565b61015261020e366004610adf565b61094f565b61015260995481565b61017361022a366004610a8d565b610970565b336000908152609a60205260409020816102a65760405162461bcd60e51b815260206004820152602d60248201527f5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f60448201526c756e74206f662073686172657360981b60648201526084015b60405180910390fd5b80548211156103085760405162461bcd60e51b815260206004820152602860248201527f5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e604482015267742073686172657360c01b606482015260840161029d565b806002015442116103655760405162461bcd60e51b815260206004820152602160248201527f5374616b696e67506f6f6c55736572496d706c3a207374616b65206c6f636b656044820152601960fa1b606482015260840161029d565b818160000160008282546103799190610bb8565b909155506000905061038a836105bc565b9050826097600082825461039e9190610bb8565b9250508190555080609860008282546103b79190610bb8565b92505081905550808260010160008282546103d29190610b5f565b9250508190555080609960008282546103eb9190610b5f565b9091555050604080518281526020810185905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28091015b60405180910390a2505050565b336000908152609a602052604090206001810154806104a65760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e63652060448201526a746f20776974686472617760a81b606482015260840161029d565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561050e57600080fd5b505af1158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190610abd565b6105625760405162461bcd60e51b815260040161029d90610b11565b60008260010181905550806099600082825461057e9190610bb8565b909155505060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b6000609754600014156105cd575090565b6097546098546105dd9084610b99565b6105e79190610b77565b92915050565b336000908152609a6020526040808220600181015491516370a0823160e01b815230600482015290919083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561066557600080fd5b505afa158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190610af8565b90508181116106ad5760006106af565b815b935050505090565b6065546001600160a01b031633146107115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029d565b61071b6000610a3b565b565b60335460ff16156107635760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161029d565b600081116107ce5760405162461bcd60e51b815260206004820152603260248201527f5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d75737460448201527102062652067726561746572207468616e20360741b606482015260840161029d565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561083c57600080fd5b505af1158015610850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108749190610abd565b6108905760405162461bcd60e51b815260040161029d90610b11565b600061089b8261094f565b336000908152609a60205260408120805492935091839183916108bf908490610b5f565b9091555050609b546108d19042610b5f565b816002018190555082609860008282546108eb9190610b5f565b9250508190555081609760008282546109049190610b5f565b9091555050600281015460408051858152602081018590529081019190915233907ff556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c44690606001610424565b600060985460001415610960575090565b6098546097546105dd9084610b99565b6065546001600160a01b031633146109ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029d565b6001600160a01b038116610a2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029d565b610a3881610a3b565b50565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215610a9f57600080fd5b81356001600160a01b0381168114610ab657600080fd5b9392505050565b600060208284031215610acf57600080fd5b81518015158114610ab657600080fd5b600060208284031215610af157600080fd5b5035919050565b600060208284031215610b0a57600080fd5b5051919050565b6020808252602e908201527f5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f207460408201526d72616e7366657220746f6b656e7360901b606082015260800190565b60008219821115610b7257610b72610bcf565b500190565b600082610b9457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610bb357610bb3610bcf565b500290565b600082821015610bca57610bca610bcf565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b6f6de0477c22006f97a39845d10d9d4928d53f63c7668aba1221ba484e290ab64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063aa8c217c11610066578063aa8c217c146101f7578063b811540e14610200578063e366b7bb14610213578063f2fde38b1461021c57600080fd5b8063715018a6146101ae5780637172dea2146101b65780638da5cb5b146101c9578063a694fc3a146101e457600080fd5b80633ccfd60b116100d35780633ccfd60b14610175578063555d8ebb1461017d5780635c975abb14610190578063710fe6f8146101a657600080fd5b80630103c92b146100fa57806303314efa146101495780632e17de7814610160575b600080fd5b610129610108366004610a8d565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61015260975481565b604051908152602001610140565b61017361016e366004610adf565b61022f565b005b610173610431565b61015261018b366004610adf565b6105bc565b60335460ff166040519015158152602001610140565b6101526105ed565b6101736106b7565b6101736101c4366004610adf565b609b55565b6065546040516001600160a01b039091168152602001610140565b6101736101f2366004610adf565b61071d565b61015260985481565b61015261020e366004610adf565b61094f565b61015260995481565b61017361022a366004610a8d565b610970565b336000908152609a60205260409020816102a65760405162461bcd60e51b815260206004820152602d60248201527f5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f60448201526c756e74206f662073686172657360981b60648201526084015b60405180910390fd5b80548211156103085760405162461bcd60e51b815260206004820152602860248201527f5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e604482015267742073686172657360c01b606482015260840161029d565b806002015442116103655760405162461bcd60e51b815260206004820152602160248201527f5374616b696e67506f6f6c55736572496d706c3a207374616b65206c6f636b656044820152601960fa1b606482015260840161029d565b818160000160008282546103799190610bb8565b909155506000905061038a836105bc565b9050826097600082825461039e9190610bb8565b9250508190555080609860008282546103b79190610bb8565b92505081905550808260010160008282546103d29190610b5f565b9250508190555080609960008282546103eb9190610b5f565b9091555050604080518281526020810185905233917ff960dbf9e5d0682f7a298ed974e33a28b4464914b7a2bfac12ae419a9afeb28091015b60405180910390a2505050565b336000908152609a602052604090206001810154806104a65760405162461bcd60e51b815260206004820152602b60248201527f5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e63652060448201526a746f20776974686472617760a81b606482015260840161029d565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561050e57600080fd5b505af1158015610522573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105469190610abd565b6105625760405162461bcd60e51b815260040161029d90610b11565b60008260010181905550806099600082825461057e9190610bb8565b909155505060405181815233907f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649060200160405180910390a25050565b6000609754600014156105cd575090565b6097546098546105dd9084610b99565b6105e79190610b77565b92915050565b336000908152609a6020526040808220600181015491516370a0823160e01b815230600482015290919083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561066557600080fd5b505afa158015610679573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069d9190610af8565b90508181116106ad5760006106af565b815b935050505090565b6065546001600160a01b031633146107115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029d565b61071b6000610a3b565b565b60335460ff16156107635760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161029d565b600081116107ce5760405162461bcd60e51b815260206004820152603260248201527f5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d75737460448201527102062652067726561746572207468616e20360741b606482015260840161029d565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561083c57600080fd5b505af1158015610850573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108749190610abd565b6108905760405162461bcd60e51b815260040161029d90610b11565b600061089b8261094f565b336000908152609a60205260408120805492935091839183916108bf908490610b5f565b9091555050609b546108d19042610b5f565b816002018190555082609860008282546108eb9190610b5f565b9250508190555081609760008282546109049190610b5f565b9091555050600281015460408051858152602081018590529081019190915233907ff556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c44690606001610424565b600060985460001415610960575090565b6098546097546105dd9084610b99565b6065546001600160a01b031633146109ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029d565b6001600160a01b038116610a2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161029d565b610a3881610a3b565b50565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208284031215610a9f57600080fd5b81356001600160a01b0381168114610ab657600080fd5b9392505050565b600060208284031215610acf57600080fd5b81518015158114610ab657600080fd5b600060208284031215610af157600080fd5b5035919050565b600060208284031215610b0a57600080fd5b5051919050565b6020808252602e908201527f5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f207460408201526d72616e7366657220746f6b656e7360901b606082015260800190565b60008219821115610b7257610b72610bcf565b500190565b600082610b9457634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610bb357610bb3610bcf565b500290565b600082821015610bca57610bca610bcf565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220b6f6de0477c22006f97a39845d10d9d4928d53f63c7668aba1221ba484e290ab64736f6c63430008060033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "__StakingPoolUser_init(uint256)": {
        "params": {
          "_lockTime": "The user stake lock period"
        }
      },
      "constructor": {
        "details": "Constructor",
        "params": {
          "_ctsi": "The contract that provides the staking pool's token"
        }
      },
      "getWithdrawBalance()": {
        "details": "there is no way to know the exact time in the future the requested tokens will be available",
        "returns": {
          "_0": "the amount of tokens that can be immediately withdrawn by the calling user"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "stake(uint256)": {
        "params": {
          "_amount": "amount of tokens deposited in the pool"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw()": {
        "details": "this will transfer all free tokens for the calling user"
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_3299": {
          "entryPoint": null,
          "id": 3299,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 68,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:306:40",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:40",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "95:209:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "141:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "150:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "153:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "143:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "143:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "143:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "116:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "125:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "112:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "112:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "137:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "108:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "108:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "105:2:40"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "166:29:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "185:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "179:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "179:16:40"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "170:5:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "258:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "267:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "270:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "260:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "260:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "260:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "217:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "228:5:40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "243:3:40",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "248:1:40",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "239:3:40"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "239:11:40"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "252:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:19:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "224:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "224:31:40"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "214:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "214:42:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "207:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "207:50:40"
                      },
                      "nodeType": "YulIf",
                      "src": "204:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "283:15:40",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "293:5:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "283:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "61:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "72:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "84:6:40",
                    "type": ""
                  }
                ],
                "src": "14:290:40"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
          "id": 40,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCBB CODESIZE SUB DUP1 PUSH2 0xCBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x44 JUMP JUMPDEST PUSH1 0x60 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT AND PUSH1 0x80 MSTORE PUSH2 0x74 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0xC1B PUSH2 0xA0 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x4C2 ADD MSTORE DUP2 DUP2 PUSH2 0x623 ADD MSTORE PUSH2 0x7F0 ADD MSTORE PUSH2 0xC1B PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xAA8C217C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x7172DEA2 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x710FE6F8 EQ PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH2 0x431 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x173 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x9B SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST PUSH2 0x152 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST PUSH2 0x152 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E76616C696420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x756E74206F6620736861726573 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7420736861726573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A207374616B65206C6F636B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x38A DUP4 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP1 PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F2062616C616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x746F207769746864726177 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x98 SLOAD PUSH2 0x5DD SWAP1 DUP5 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x679 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x6AD JUMPI PUSH1 0x0 PUSH2 0x6AF JUMP JUMPDEST DUP2 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29D JUMP JUMPDEST PUSH2 0x71B PUSH1 0x0 PUSH2 0xA3B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20616D6F756E74206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x2062652067726561746572207468616E203 PUSH1 0x74 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89B DUP3 PUSH2 0x94F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH2 0x8BF SWAP1 DUP5 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9B SLOAD PUSH2 0x8D1 SWAP1 TIMESTAMP PUSH2 0xB5F JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x904 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 PUSH32 0xF556991011E831BCFAC4F406D547E5E32CDD98267EFAB83935230D5F8D02C446 SWAP1 PUSH1 0x60 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x960 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH2 0x5DD SWAP1 DUP5 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH2 0xA38 DUP2 PUSH2 0xA3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206661696C656420746F2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x72616E7366657220746F6B656E73 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB72 PUSH2 0xBCF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB94 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0xBCF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBCA PUSH2 0xBCF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xF6 0xDE DIV PUSH24 0xC22006F97A39845D10D9D4928D53F63C7668ABA1221BA484 0xE2 SWAP1 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
      "sourceMap": "775:4428:27:-:0;;;1002:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1039:20;;-1:-1:-1;;;;;;1039:20:27;;;775:4428;;14:290:40;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;153:1;150;143:12;105:2;179:16;;-1:-1:-1;;;;;224:31:40;;214:42;;204:2;;270:1;267;260:12;204:2;293:5;95:209;-1:-1:-1;;;95:209:40:o;:::-;775:4428:27;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@__StakingPoolUser_init_3310": {
          "entryPoint": null,
          "id": 3310,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_msgSender_952": {
          "entryPoint": null,
          "id": 952,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setOwner_759": {
          "entryPoint": 2619,
          "id": 759,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@amountToShares_2425": {
          "entryPoint": 2383,
          "id": 2425,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@amount_2389": {
          "entryPoint": null,
          "id": 2389,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@getWithdrawBalance_3553": {
          "entryPoint": 1517,
          "id": 3553,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@owner_689": {
          "entryPoint": null,
          "id": 689,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@paused_863": {
          "entryPoint": null,
          "id": 863,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@renounceOwnership_717": {
          "entryPoint": 1719,
          "id": 717,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@requiredLiquidity_2391": {
          "entryPoint": null,
          "id": 2391,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@sharesToAmount_2447": {
          "entryPoint": 1468,
          "id": 2447,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@shares_2387": {
          "entryPoint": null,
          "id": 2387,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@stake_3387": {
          "entryPoint": 1821,
          "id": 3387,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@transferOwnership_740": {
          "entryPoint": 2416,
          "id": 740,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@unstake_3464": {
          "entryPoint": 559,
          "id": 3464,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@userBalance_2403": {
          "entryPoint": null,
          "id": 2403,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@withdraw_3516": {
          "entryPoint": 1073,
          "id": 3516,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 2701,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bool_fromMemory": {
          "entryPoint": 2749,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 2783,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256_fromMemory": {
          "entryPoint": 2808,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 2833,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_a6e287910b85e22857d8727d667dde1bdf1ac773479ea4c5f4e7c7c19f01a9bc__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 2911,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 2935,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 2969,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_sub_t_uint256": {
          "entryPoint": 3000,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 3023,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:7150:40",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:40",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:216:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "94:2:40"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "155:36:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "168:12:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:40"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "159:5:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "254:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "263:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "266:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "256:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "256:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "256:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "213:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "224:5:40"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "239:3:40",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "244:1:40",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "235:3:40"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "235:11:40"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "231:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "231:19:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "220:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "220:31:40"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "210:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "210:42:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "203:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "203:50:40"
                      },
                      "nodeType": "YulIf",
                      "src": "200:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "279:15:40",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "289:5:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "279:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:40",
                    "type": ""
                  }
                ],
                "src": "14:286:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "383:199:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "429:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "438:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "441:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "431:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "431:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "431:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "404:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "413:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "400:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "400:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "425:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "396:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "396:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "393:2:40"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "454:29:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "473:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "467:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "467:16:40"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "458:5:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "536:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "545:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "548:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "538:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "538:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "538:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "505:5:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "526:5:40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "519:6:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "519:13:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "512:21:40"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "502:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "502:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "495:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "495:40:40"
                      },
                      "nodeType": "YulIf",
                      "src": "492:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "561:15:40",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "571:5:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "561:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bool_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "349:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "360:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "372:6:40",
                    "type": ""
                  }
                ],
                "src": "305:277:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "657:110:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "703:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "712:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "715:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "705:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "705:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "705:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "678:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "687:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "674:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "674:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "699:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "670:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "670:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "667:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "728:33:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "751:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "738:12:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "738:23:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "728:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "623:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "634:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "646:6:40",
                    "type": ""
                  }
                ],
                "src": "587:180:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "853:103:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "899:16:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "908:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "911:1:40",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "901:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "901:12:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "901:12:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "874:7:40"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "883:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "870:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "870:23:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "895:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "866:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "866:32:40"
                      },
                      "nodeType": "YulIf",
                      "src": "863:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "924:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "940:9:40"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "934:5:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "934:16:40"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "924:6:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "819:9:40",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "830:7:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "842:6:40",
                    "type": ""
                  }
                ],
                "src": "772:184:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1062:102:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1072:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1084:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1095:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1080:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1080:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1072:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1114:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1129:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1145:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1150:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1141:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1141:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1154:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1137:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1137:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1125:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1125:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1107:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:51:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1107:51:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1031:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1042:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1053:4:40",
                    "type": ""
                  }
                ],
                "src": "961:203:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1326:218:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1336:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1348:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1336:4:40"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1371:29:40",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1389:3:40",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1394:1:40",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1385:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1385:11:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1398:1:40",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1381:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1381:19:40"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1375:2:40",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1416:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1431:6:40"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1439:2:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1427:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1427:15:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1409:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1409:34:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1463:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1474:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1459:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1459:18:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1483:6:40"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1491:2:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1479:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1479:15:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1452:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1452:43:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1452:43:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1515:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1526:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1511:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1511:18:40"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1531:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1504:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1504:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1504:34:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1279:9:40",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1290:6:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1298:6:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1306:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1317:4:40",
                    "type": ""
                  }
                ],
                "src": "1169:375:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1678:145:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1688:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1700:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1711:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1696:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1696:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1688:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1745:6:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1761:3:40",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1766:1:40",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1757:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1757:11:40"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1770:1:40",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1753:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1753:19:40"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1741:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1741:32:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1723:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:51:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1723:51:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1794:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1805:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1790:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1790:18:40"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1810:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1783:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1783:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1783:34:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1639:9:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1650:6:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1658:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1669:4:40",
                    "type": ""
                  }
                ],
                "src": "1549:274:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1923:92:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1933:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1945:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1956:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1941:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1941:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1933:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1975:9:40"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2000:6:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1993:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1993:14:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1986:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1986:22:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1968:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1968:41:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1968:41:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1892:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1903:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1914:4:40",
                    "type": ""
                  }
                ],
                "src": "1828:187:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2194:235:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2211:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2222:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2204:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2204:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2204:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2245:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2256:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2241:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2241:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2261:2:40",
                            "type": "",
                            "value": "45"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2234:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2234:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2234:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2284:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2295:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2280:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2280:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20696e76616c696420616d6f",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2300:34:40",
                            "type": "",
                            "value": "StakingPoolUserImpl: invalid amo"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2273:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2273:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2273:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2355:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2366:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2351:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2351:18:40"
                          },
                          {
                            "hexValue": "756e74206f6620736861726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2371:15:40",
                            "type": "",
                            "value": "unt of shares"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2344:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2344:43:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2344:43:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2396:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2419:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2404:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2404:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2396:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2171:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2185:4:40",
                    "type": ""
                  }
                ],
                "src": "2020:409:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2608:228:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2625:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2636:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2618:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2618:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2618:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2659:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2670:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2655:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2655:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2675:2:40",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2648:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2648:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2648:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2698:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2709:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2694:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2694:18:40"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2714:34:40",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2687:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2687:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2687:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2769:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2780:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2765:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2765:18:40"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2785:8:40",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2758:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2758:36:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2758:36:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2803:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2815:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2826:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2811:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2811:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2803:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2585:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2599:4:40",
                    "type": ""
                  }
                ],
                "src": "2434:402:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3015:236:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3032:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3043:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3025:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3025:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3025:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3066:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3077:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3062:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3062:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3082:2:40",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3055:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3055:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3055:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3105:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3116:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3101:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3101:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206661696c656420746f2074",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3121:34:40",
                            "type": "",
                            "value": "StakingPoolUserImpl: failed to t"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3094:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3094:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3094:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3176:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3187:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3172:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3172:18:40"
                          },
                          {
                            "hexValue": "72616e7366657220746f6b656e73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3192:16:40",
                            "type": "",
                            "value": "ransfer tokens"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3165:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3165:44:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3165:44:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3218:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3230:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3226:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3218:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2992:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3006:4:40",
                    "type": ""
                  }
                ],
                "src": "2841:410:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3430:166:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3447:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3458:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3440:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3440:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3440:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3481:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3492:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3477:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3477:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3497:2:40",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3470:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3470:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3470:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3520:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3531:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3516:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3516:18:40"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3536:18:40",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3509:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3509:46:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3509:46:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3564:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3576:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3587:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3572:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3572:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3564:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3407:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3421:4:40",
                    "type": ""
                  }
                ],
                "src": "3256:340:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3775:233:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3792:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3803:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3785:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3785:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3785:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3826:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3837:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3822:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3822:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3842:2:40",
                            "type": "",
                            "value": "43"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3815:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3815:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3815:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3865:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3876:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3861:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3861:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a206e6f2062616c616e636520",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3881:34:40",
                            "type": "",
                            "value": "StakingPoolUserImpl: no balance "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3854:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3854:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3854:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3936:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3947:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3932:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3932:18:40"
                          },
                          {
                            "hexValue": "746f207769746864726177",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3952:13:40",
                            "type": "",
                            "value": "to withdraw"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3925:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3925:41:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3925:41:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3975:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3987:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3998:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3983:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3983:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3975:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3752:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3766:4:40",
                    "type": ""
                  }
                ],
                "src": "3601:407:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4187:182:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4204:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4215:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4197:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4197:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4197:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4238:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4249:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4234:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4234:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4254:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4227:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4227:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4227:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4277:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4288:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4273:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4273:18:40"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4293:34:40",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4266:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4266:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4266:62:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4337:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4349:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4360:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4345:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4345:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4337:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4164:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4178:4:40",
                    "type": ""
                  }
                ],
                "src": "4013:356:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4548:230:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4565:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4576:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4558:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4558:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4558:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4599:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4610:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4595:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4595:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4615:2:40",
                            "type": "",
                            "value": "40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4588:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4588:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4588:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4638:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4649:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4634:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4634:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20696e73756666696369656e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4654:34:40",
                            "type": "",
                            "value": "StakingPoolUserImpl: insufficien"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4627:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4627:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4627:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4709:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4720:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4705:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4705:18:40"
                          },
                          {
                            "hexValue": "7420736861726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4725:10:40",
                            "type": "",
                            "value": "t shares"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4698:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4698:38:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4698:38:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4745:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4757:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4768:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4753:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4753:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4745:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4525:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4539:4:40",
                    "type": ""
                  }
                ],
                "src": "4374:404:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4957:223:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4974:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4985:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4967:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4967:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4967:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5008:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5019:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5004:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5004:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5024:2:40",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4997:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4997:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4997:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5047:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5058:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5043:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5043:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a207374616b65206c6f636b65",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5063:34:40",
                            "type": "",
                            "value": "StakingPoolUserImpl: stake locke"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5036:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5036:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5036:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5118:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5129:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5114:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5114:18:40"
                          },
                          {
                            "hexValue": "64",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5134:3:40",
                            "type": "",
                            "value": "d"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5107:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5107:31:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5107:31:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5147:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5159:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5170:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5155:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5155:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5147:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_a6e287910b85e22857d8727d667dde1bdf1ac773479ea4c5f4e7c7c19f01a9bc__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4934:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4948:4:40",
                    "type": ""
                  }
                ],
                "src": "4783:397:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5359:240:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5376:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5387:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5369:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5369:21:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5369:21:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5410:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5421:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5406:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5406:18:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5426:2:40",
                            "type": "",
                            "value": "50"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5399:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5399:30:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5399:30:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5449:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5460:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5445:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5445:18:40"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c55736572496d706c3a20616d6f756e74206d757374",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5465:34:40",
                            "type": "",
                            "value": "StakingPoolUserImpl: amount must"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5438:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5438:62:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5438:62:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5520:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5531:2:40",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5516:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5516:18:40"
                          },
                          {
                            "hexValue": "2062652067726561746572207468616e2030",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5536:20:40",
                            "type": "",
                            "value": " be greater than 0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5509:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5509:48:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5509:48:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5566:27:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5578:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5589:3:40",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5574:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5574:19:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5566:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5336:9:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5350:4:40",
                    "type": ""
                  }
                ],
                "src": "5185:414:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5705:76:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5715:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5727:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5738:2:40",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5723:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5723:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5715:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5757:9:40"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5768:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5750:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5750:25:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5750:25:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5674:9:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5685:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5696:4:40",
                    "type": ""
                  }
                ],
                "src": "5604:177:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5915:119:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5925:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5937:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5948:2:40",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5933:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5933:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5925:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5967:9:40"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5978:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5960:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5960:25:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5960:25:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6005:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6016:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6001:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6001:18:40"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6021:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5994:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5994:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5994:34:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5876:9:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5887:6:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5895:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5906:4:40",
                    "type": ""
                  }
                ],
                "src": "5786:248:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6196:162:40",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "6206:26:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6218:9:40"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6229:2:40",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6214:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6214:18:40"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6206:4:40"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6248:9:40"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6259:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6241:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6241:25:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6241:25:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6286:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6297:2:40",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6282:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6282:18:40"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6302:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6275:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6275:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6275:34:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6329:9:40"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6340:2:40",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6325:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6325:18:40"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "6345:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6318:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6318:34:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6318:34:40"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6149:9:40",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "6160:6:40",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "6168:6:40",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6176:6:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6187:4:40",
                    "type": ""
                  }
                ],
                "src": "6039:319:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6411:80:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6438:22:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "6440:16:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6440:18:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6440:18:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "6427:1:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "6434:1:40"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "6430:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6430:6:40"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "6424:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6424:13:40"
                      },
                      "nodeType": "YulIf",
                      "src": "6421:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6469:16:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "6480:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6483:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6476:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6476:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "6469:3:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "6394:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "6397:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "6403:3:40",
                    "type": ""
                  }
                ],
                "src": "6363:128:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6542:171:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6573:111:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6594:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6601:3:40",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6606:10:40",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "6597:3:40"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6597:20:40"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6587:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6587:31:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6587:31:40"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6638:1:40",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6641:4:40",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "6631:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6631:15:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6631:15:40"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6666:1:40",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6669:4:40",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6659:6:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6659:15:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6659:15:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6562:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6555:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6555:9:40"
                      },
                      "nodeType": "YulIf",
                      "src": "6552:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6693:14:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "6702:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6705:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "6698:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6698:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "6693:1:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "6527:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "6530:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "6536:1:40",
                    "type": ""
                  }
                ],
                "src": "6496:217:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6770:116:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6829:22:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "6831:16:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6831:18:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6831:18:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6801:1:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6794:6:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6794:9:40"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6787:6:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6787:17:40"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "6809:1:40"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6820:1:40",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "6816:3:40"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6816:6:40"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6824:1:40"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "6812:3:40"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6812:14:40"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6806:2:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6806:21:40"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6783:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6783:45:40"
                      },
                      "nodeType": "YulIf",
                      "src": "6780:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6860:20:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "6875:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6878:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "6871:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6871:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "6860:7:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "6749:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "6752:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "6758:7:40",
                    "type": ""
                  }
                ],
                "src": "6718:168:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6940:76:40",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6962:22:40",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "6964:16:40"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6964:18:40"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6964:18:40"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "6956:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6959:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "6953:2:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6953:8:40"
                      },
                      "nodeType": "YulIf",
                      "src": "6950:2:40"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6993:17:40",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "7005:1:40"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7008:1:40"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7001:3:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7001:9:40"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "6993:4:40"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "6922:1:40",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "6925:1:40",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "6931:4:40",
                    "type": ""
                  }
                ],
                "src": "6891:125:40"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7053:95:40",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7070:1:40",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7077:3:40",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7082:10:40",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "7073:3:40"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7073:20:40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7063:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7063:31:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7063:31:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7110:1:40",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7113:4:40",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7103:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7103:15:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7103:15:40"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7134:1:40",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7137:4:40",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "7127:6:40"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7127:15:40"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7127:15:40"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "7021:127:40"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_241f18ac42e09a22af8289c5c23735b3ba15465af7d5170b618b66162b4606fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: invalid amo\")\n        mstore(add(headStart, 96), \"unt of shares\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_464476c2d99f0b69153e9fef4459393385eccefd615a33d966adb609fbe31e94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: failed to t\")\n        mstore(add(headStart, 96), \"ransfer tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6d7a2c00a2f8c2f789d8f86a8dcb5aebc9d4b453911bbe5d12770e115b7e13f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: no balance \")\n        mstore(add(headStart, 96), \"to withdraw\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9a8b81ea638933243192a2238f248847b3709c57f7296cbf65fd7284427d2c5b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: insufficien\")\n        mstore(add(headStart, 96), \"t shares\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a6e287910b85e22857d8727d667dde1bdf1ac773479ea4c5f4e7c7c19f01a9bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: stake locke\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c6284440c8bacfdc6353766e883ccaf3e85ccc6119f36ee5f2b7faabde78ae9f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"StakingPoolUserImpl: amount must\")\n        mstore(add(headStart, 96), \" be greater than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
          "id": 40,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "3284": [
          {
            "length": 32,
            "start": 1218
          },
          {
            "length": 32,
            "start": 1571
          },
          {
            "length": 32,
            "start": 2032
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xAA8C217C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x7172DEA2 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x1E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x710FE6F8 EQ PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x160 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x129 PUSH2 0x108 CALLDATASIZE PUSH1 0x4 PUSH2 0xA8D JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x22F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x173 PUSH2 0x431 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x18B CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x5BC JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x5ED JUMP JUMPDEST PUSH2 0x173 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x9B SSTORE JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1F2 CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x71D JUMP JUMPDEST PUSH2 0x152 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x152 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0xADF JUMP JUMPDEST PUSH2 0x94F JUMP JUMPDEST PUSH2 0x152 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xA8D JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 PUSH2 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E76616C696420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x756E74206F6620736861726573 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD DUP3 GT ISZERO PUSH2 0x308 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20696E73756666696369656E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x7420736861726573 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A207374616B65206C6F636B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST DUP2 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x379 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x38A DUP4 PUSH2 0x5BC JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF960DBF9E5D0682F7A298ED974E33A28B4464914B7A2BFAC12AE419A9AFEB280 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD DUP1 PUSH2 0x4A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206E6F2062616C616E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x746F207769746864726177 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x522 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x546 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x562 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x99 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x57E SWAP2 SWAP1 PUSH2 0xBB8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x5CD JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x97 SLOAD PUSH1 0x98 SLOAD PUSH2 0x5DD SWAP1 DUP5 PUSH2 0xB99 JUMP JUMPDEST PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0xB77 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x665 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x679 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69D SWAP2 SWAP1 PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT PUSH2 0x6AD JUMPI PUSH1 0x0 PUSH2 0x6AF JUMP JUMPDEST DUP2 JUMPDEST SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29D JUMP JUMPDEST PUSH2 0x71B PUSH1 0x0 PUSH2 0xA3B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x763 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A20616D6F756E74206D757374 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x2062652067726561746572207468616E203 PUSH1 0x74 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x850 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x874 SWAP2 SWAP1 PUSH2 0xABD JUMP JUMPDEST PUSH2 0x890 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D SWAP1 PUSH2 0xB11 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x89B DUP3 PUSH2 0x94F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP SWAP2 DUP4 SWAP2 DUP4 SWAP2 PUSH2 0x8BF SWAP1 DUP5 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9B SLOAD PUSH2 0x8D1 SWAP1 TIMESTAMP PUSH2 0xB5F JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x98 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x97 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x904 SWAP2 SWAP1 PUSH2 0xB5F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER SWAP1 PUSH32 0xF556991011E831BCFAC4F406D547E5E32CDD98267EFAB83935230D5F8D02C446 SWAP1 PUSH1 0x60 ADD PUSH2 0x424 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x960 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x97 SLOAD PUSH2 0x5DD SWAP1 DUP5 PUSH2 0xB99 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x29D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29D JUMP JUMPDEST PUSH2 0xA38 DUP2 PUSH2 0xA3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C55736572496D706C3A206661696C656420746F2074 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x72616E7366657220746F6B656E73 PUSH1 0x90 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xB72 JUMPI PUSH2 0xB72 PUSH2 0xBCF JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xB94 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0xBCF JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBCA JUMPI PUSH2 0xBCA PUSH2 0xBCF JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 0xF6 0xDE DIV PUSH24 0xC22006F97A39845D10D9D4928D53F63C7668ABA1221BA484 0xE2 SWAP1 0xAB PUSH5 0x736F6C6343 STOP ADDMOD MOD STOP CALLER ",
      "sourceMap": "775:4428:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1433:50:21;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6241:25:40;;;6297:2;6282:18;;6275:34;;;;6325:18;;;6318:34;6229:2;6214:18;1433:50:21;;;;;;;;975:21;;;;;;;;;5750:25:40;;;5738:2;5723:18;975:21:21;5705:76:40;2751:1161:27;;;;;;:::i;:::-;;:::i;:::-;;4047:679;;;:::i;1766:270:21:-;;;;;;:::i;:::-;;:::i;1310:84:9:-;1380:7;;;;1310:84;;1993:14:40;;1986:22;1968:41;;1956:2;1941:18;1310:84:9;1923:92:40;4732:469:27;;;:::i;1871:92:7:-;;;:::i;1124:95:27:-;;;;;;:::i;:::-;1192:8;:20;1124:95;1239:85:7;1311:6;;1239:85;;-1:-1:-1;;;;;1311:6:7;;;1107:51:40;;1095:2;1080:18;1239:85:7;1062:102:40;1373:1226:27;;;;;;:::i;:::-;;:::i;1028:21:21:-;;;;;;1490:270;;;;;;:::i;:::-;;:::i;1106:32::-;;;;;;2112:189:7;;;;;;:::i;:::-;;:::i;2751:1161:27:-;2850:10;2811:24;2838:23;;;:11;:23;;;;;2922:11;2914:69;;;;-1:-1:-1;;;2914:69:27;;2222:2:40;2914:69:27;;;2204:21:40;2261:2;2241:18;;;2234:30;2300:34;2280:18;;;2273:62;-1:-1:-1;;;2351:18:40;;;2344:43;2404:19;;2914:69:27;;;;;;;;;3069:11;;:22;-1:-1:-1;3069:22:27;3048:109;;;;-1:-1:-1;;;3048:109:27;;4576:2:40;3048:109:27;;;4558:21:40;4615:2;4595:18;;;4588:30;4654:34;4634:18;;;4627:62;-1:-1:-1;;;4705:18:40;;;4698:38;4753:19;;3048:109:27;4548:230:40;3048:109:27;3276:4;:21;;;3258:15;:39;3237:119;;;;-1:-1:-1;;;3237:119:27;;4985:2:40;3237:119:27;;;4967:21:40;5024:2;5004:18;;;4997:30;5063:34;5043:18;;;5036:62;-1:-1:-1;;;5114:18:40;;;5107:31;5155:19;;3237:119:27;4957:223:40;3237:119:27;3422:7;3407:4;:11;;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;3490:15:27;;-1:-1:-1;3508:23:27;3523:7;3508:14;:23::i;:::-;3490:41;;3594:7;3584:6;;:17;;;;;;;:::i;:::-;;;;;;;;3621:7;3611:6;;:17;;;;;;;:::i;:::-;;;;;;;;3710:7;3693:4;:13;;;:24;;;;;;;:::i;:::-;;;;;;;;3788:7;3767:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;3868:37:27;;;5960:25:40;;;6016:2;6001:18;;5994:34;;;3876:10:27;;3868:37;;5933:18:40;3868:37:27;;;;;;;;2801:1111;;2751:1161;:::o;4047:679::-;4132:10;4093:24;4120:23;;;:11;:23;;;;;4171:13;;;;4240:11;4232:67;;;;-1:-1:-1;;;4232:67:27;;3803:2:40;4232:67:27;;;3785:21:40;3842:2;3822:18;;;3815:30;3881:34;3861:18;;;3854:62;-1:-1:-1;;;3932:18:40;;;3925:41;3983:19;;4232:67:27;3775:233:40;4232:67:27;4370:34;;-1:-1:-1;;;4370:34:27;;4384:10;4370:34;;;1723:51:40;1790:18;;;1783:34;;;4370:4:27;-1:-1:-1;;;;;4370:13:27;;;;1696:18:40;;4370:34:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4349:127;;;;-1:-1:-1;;;4349:127:27;;;;;;;:::i;:::-;4540:1;4524:4;:13;;:17;;;;4612:7;4591:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;4690:29:27;;5750:25:40;;;4699:10:27;;4690:29;;5738:2:40;5723:18;4690:29:27;;;;;;;4083:643;;4047:679::o;1766:270:21:-;1828:7;1884:6;;1894:1;1884:11;1880:106;;;-1:-1:-1;1968:7:21;1766:270::o;1880:106::-;2023:6;;2013;;2003:16;;:7;:16;:::i;:::-;2002:27;;;;:::i;:::-;1995:34;1766:270;-1:-1:-1;;1766:270:21:o;4732:469:27:-;4850:10;4792:7;4838:23;;;:11;:23;;;;;;4927:13;;;;5037:29;;-1:-1:-1;;;5037:29:27;;5060:4;5037:29;;;1107:51:40;4838:23:27;;4927:13;4792:7;;-1:-1:-1;;;;;5037:4:27;:14;;;;1080:18:40;;5037:29:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5019:47;;5173:7;5163;:17;:31;;5193:1;5163:31;;;5183:7;5163:31;5156:38;;;;;4732:469;:::o;1871:92:7:-;1311:6;;-1:-1:-1;;;;;1311:6:7;901:10:10;1451:23:7;1443:68;;;;-1:-1:-1;;;1443:68:7;;4215:2:40;1443:68:7;;;4197:21:40;;;4234:18;;;4227:30;4293:34;4273:18;;;4266:62;4345:18;;1443:68:7;4187:182:40;1443:68:7;1935:21:::1;1953:1;1935:9;:21::i;:::-;1871:92::o:0;1373:1226:27:-;1380:7:9;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:9;;3458:2:40;1615:38:9;;;3440:21:40;3497:2;3477:18;;;3470:30;-1:-1:-1;;;3516:18:40;;;3509:46;3572:18;;1615:38:9;3430:166:40;1615:38:9;1681:1:27::1;1671:7;:11;1650:108;;;::::0;-1:-1:-1;;;1650:108:27;;5387:2:40;1650:108:27::1;::::0;::::1;5369:21:40::0;5426:2;5406:18;;;5399:30;5465:34;5445:18;;;5438:62;-1:-1:-1;;;5516:18:40;;;5509:48;5574:19;;1650:108:27::1;5359:240:40::0;1650:108:27::1;1789:53;::::0;-1:-1:-1;;;1789:53:27;;1807:10:::1;1789:53;::::0;::::1;1409:34:40::0;1827:4:27::1;1459:18:40::0;;;1452:43;1511:18;;;1504:34;;;1789:4:27::1;-1:-1:-1::0;;;;;1789:17:27::1;::::0;::::1;::::0;1344:18:40;;1789:53:27::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1768:146;;;;-1:-1:-1::0;;;1768:146:27::1;;;;;;;:::i;:::-;1973:15;1991:23;2006:7;1991:14;:23::i;:::-;2064:10;2025:24;2052:23:::0;;;:11:::1;:23;::::0;;;;2138:22;;1973:41;;-1:-1:-1;2052:23:27;1973:41;;2052:23;;2138:22:::1;::::0;1973:41;;2138:22:::1;:::i;:::-;::::0;;;-1:-1:-1;;2314:8:27::1;::::0;2296:26:::1;::::0;:15:::1;:26;:::i;:::-;2272:4;:21;;:50;;;;2414:7;2404:6;;:17;;;;;;;:::i;:::-;;;;;;;;2441:7;2431:6;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2570:21:27::1;::::0;::::1;::::0;2534:58:::1;::::0;;6241:25:40;;;6297:2;6282:18;;6275:34;;;6325:18;;;6318:34;;;;2540:10:27::1;::::0;2534:58:::1;::::0;6229:2:40;6214:18;2534:58:27::1;6196:162:40::0;1490:270:21;1552:7;1608:6;;1618:1;1608:11;1604:106;;;-1:-1:-1;1692:7:21;1490:270::o;1604:106::-;1747:6;;1737;;1727:16;;:7;:16;:::i;2112:189:7:-;1311:6;;-1:-1:-1;;;;;1311:6:7;901:10:10;1451:23:7;1443:68;;;;-1:-1:-1;;;1443:68:7;;4215:2:40;1443:68:7;;;4197:21:40;;;4234:18;;;4227:30;4293:34;4273:18;;;4266:62;4345:18;;1443:68:7;4187:182:40;1443:68:7;-1:-1:-1;;;;;2200:22:7;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:7;;2636:2:40;2192:73:7::1;::::0;::::1;2618:21:40::0;2675:2;2655:18;;;2648:30;2714:34;2694:18;;;2687:62;-1:-1:-1;;;2765:18:40;;;2758:36;2811:19;;2192:73:7::1;2608:228:40::0;2192:73:7::1;2275:19;2285:8;2275:9;:19::i;:::-;2112:189:::0;:::o;2307:169::-;2381:6;;;-1:-1:-1;;;;;2397:17:7;;;-1:-1:-1;;;;;;2397:17:7;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;2362:16;;2429:40;2352:124;2307:169;:::o;14:286:40:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;142:1;139;132:12;94:2;168:23;;-1:-1:-1;;;;;220:31:40;;210:42;;200:2;;266:1;263;256:12;200:2;289:5;84:216;-1:-1:-1;;;84:216:40:o;305:277::-;372:6;425:2;413:9;404:7;400:23;396:32;393:2;;;441:1;438;431:12;393:2;473:9;467:16;526:5;519:13;512:21;505:5;502:32;492:2;;548:1;545;538:12;587:180;646:6;699:2;687:9;678:7;674:23;670:32;667:2;;;715:1;712;705:12;667:2;-1:-1:-1;738:23:40;;657:110;-1:-1:-1;657:110:40:o;772:184::-;842:6;895:2;883:9;874:7;870:23;866:32;863:2;;;911:1;908;901:12;863:2;-1:-1:-1;934:16:40;;853:103;-1:-1:-1;853:103:40:o;2841:410::-;3043:2;3025:21;;;3082:2;3062:18;;;3055:30;3121:34;3116:2;3101:18;;3094:62;-1:-1:-1;;;3187:2:40;3172:18;;3165:44;3241:3;3226:19;;3015:236::o;6363:128::-;6403:3;6434:1;6430:6;6427:1;6424:13;6421:2;;;6440:18;;:::i;:::-;-1:-1:-1;6476:9:40;;6411:80::o;6496:217::-;6536:1;6562;6552:2;;6606:10;6601:3;6597:20;6594:1;6587:31;6641:4;6638:1;6631:15;6669:4;6666:1;6659:15;6552:2;-1:-1:-1;6698:9:40;;6542:171::o;6718:168::-;6758:7;6824:1;6820;6816:6;6812:14;6809:1;6806:21;6801:1;6794:9;6787:17;6783:45;6780:2;;;6831:18;;:::i;:::-;-1:-1:-1;6871:9:40;;6770:116::o;6891:125::-;6931:4;6959:1;6956;6953:8;6950:2;;;6964:18;;:::i;:::-;-1:-1:-1;7001:9:40;;6940:76::o;7021:127::-;7082:10;7077:3;7073:20;7070:1;7063:31;7113:4;7110:1;7103:15;7137:4;7134:1;7127:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "619800",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "__StakingPoolUser_init(uint256)": "22357",
        "amount()": "2317",
        "amountToShares(uint256)": "6819",
        "getWithdrawBalance()": "infinite",
        "owner()": "2368",
        "paused()": "2359",
        "renounceOwnership()": "28140",
        "requiredLiquidity()": "2361",
        "shares()": "2341",
        "sharesToAmount(uint256)": "6820",
        "stake(uint256)": "infinite",
        "transferOwnership(address)": "28365",
        "unstake(uint256)": "infinite",
        "userBalance(address)": "6772",
        "withdraw()": "infinite"
      }
    },
    "methodIdentifiers": {
      "__StakingPoolUser_init(uint256)": "7172dea2",
      "amount()": "aa8c217c",
      "amountToShares(uint256)": "b811540e",
      "getWithdrawBalance()": "710fe6f8",
      "owner()": "8da5cb5b",
      "paused()": "5c975abb",
      "renounceOwnership()": "715018a6",
      "requiredLiquidity()": "e366b7bb",
      "shares()": "03314efa",
      "sharesToAmount(uint256)": "555d8ebb",
      "stake(uint256)": "a694fc3a",
      "transferOwnership(address)": "f2fde38b",
      "unstake(uint256)": "2e17de78",
      "userBalance(address)": "0103c92b",
      "withdraw()": "3ccfd60b"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ctsi\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockTimestamp\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"__StakingPoolUser_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"amountToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"sharesToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"released\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unstakeTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"__StakingPoolUser_init(uint256)\":{\"params\":{\"_lockTime\":\"The user stake lock period\"}},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"_ctsi\":\"The contract that provides the staking pool's token\"}},\"getWithdrawBalance()\":{\"details\":\"there is no way to know the exact time in the future the requested tokens will be available\",\"returns\":{\"_0\":\"the amount of tokens that can be immediately withdrawn by the calling user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"stake(uint256)\":{\"params\":{\"_amount\":\"amount of tokens deposited in the pool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw()\":{\"details\":\"this will transfer all free tokens for the calling user\"}},\"version\":1},\"userdoc\":{\"events\":{\"Stake(address,uint256,uint256,uint256)\":{\"notice\":\"Tokens were deposited, they count as shares immediatly\"},\"Unstake(address,uint256,uint256)\":{\"notice\":\"Request to unstake tokens. Additional liquidity requested for the pool\"},\"Withdraw(address,uint256)\":{\"notice\":\"Withdraw performed by a user\"}},\"kind\":\"user\",\"methods\":{\"getWithdrawBalance()\":{\"notice\":\"Returns the amount of tokens that can be immediately withdrawn by the calling user\"},\"stake(uint256)\":{\"notice\":\"Stake an amount of tokens, immediately earning pool shares in returns\"},\"unstake(uint256)\":{\"notice\":\"allow for users to defined exactly how many shares they want to unstake. Estimated value is then emitted on Unstake event\"},\"withdraw()\":{\"notice\":\"Transfer tokens back to calling user wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolUserImpl.sol\":\"StakingPoolUserImpl\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"contracts/StakingPoolData.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\ncontract StakingPoolData is\\n    Initializable,\\n    PausableUpgradeable,\\n    OwnableUpgradeable\\n{\\n    uint256 public shares; // total number of shares\\n    uint256 public amount; // amount of staked tokens (no matter where it is)\\n    uint256 public requiredLiquidity; // amount of required tokens for withdraw requests\\n\\n    struct UserBalance {\\n        uint256 shares; // amount of shares beloging to this user\\n        uint256 released; // amount of tokens released to this user\\n        uint256 unstakeTimestamp; // timestamp of when user can unstake\\n    }\\n    mapping(address => UserBalance) public userBalance;\\n\\n    function amountToShares(uint256 _amount) public view returns (uint256) {\\n        // TODO: rounding errors\\n        if (amount == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _amount;\\n        }\\n        return (_amount * shares) / amount;\\n    }\\n\\n    function sharesToAmount(uint256 _shares) public view returns (uint256) {\\n        // TODO: rounding errors\\n        if (shares == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _shares;\\n        }\\n        return (_shares * amount) / shares;\\n    }\\n}\\n\",\"keccak256\":\"0xf4071d9ebdf19f1366d7fb6317bf87a89bd27699dfd691ef5e861aa5517664ab\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolUserImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./interfaces/StakingPoolUser.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolUserImpl is StakingPoolUser, StakingPoolData {\\n    IERC20 private immutable ctsi;\\n    uint256 lockTime;\\n\\n    /// @dev Constructor\\n    /// @param _ctsi The contract that provides the staking pool's token\\n    constructor(address _ctsi) {\\n        ctsi = IERC20(_ctsi);\\n    }\\n\\n    /// @param _lockTime The user stake lock period\\n    function __StakingPoolUser_init(uint256 _lockTime) public {\\n        lockTime = _lockTime;\\n    }\\n\\n    /// @notice Stake an amount of tokens, immediately earning pool shares in returns\\n    /// @param _amount amount of tokens deposited in the pool\\n    function stake(uint256 _amount) public override whenNotPaused {\\n        // transfer tokens from caller to this contract\\n        // user must have approved the transfer a priori\\n        // tokens will be lying around, until actually staked by pool owner at a later time\\n        require(\\n            _amount > 0,\\n            \\\"StakingPoolUserImpl: amount must be greater than 0\\\"\\n        );\\n        require(\\n            ctsi.transferFrom(msg.sender, address(this), _amount),\\n            \\\"StakingPoolUserImpl: failed to transfer tokens\\\"\\n        );\\n\\n        // calculate amount of shares as of now\\n        uint256 _shares = amountToShares(_amount);\\n\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // allocate new shares to user, immediately\\n        user.shares += _shares;\\n\\n        // lock his shares for a period of time\\n        // this may reset a previously set lock time\\n        user.unstakeTimestamp = block.timestamp + lockTime;\\n\\n        // increase total shares and amount (not changing share value)\\n        amount += _amount;\\n        shares += _shares;\\n\\n        // emit event containing user, amount, shares and unlock time\\n        emit Stake(msg.sender, _amount, _shares, user.unstakeTimestamp);\\n    }\\n\\n    /// @notice allow for users to defined exactly how many shares they\\n    /// want to unstake. Estimated value is then emitted on Unstake event\\n    function unstake(uint256 _shares) public override {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // check if shares is valid value\\n        require(_shares > 0, \\\"StakingPoolUserImpl: invalid amount of shares\\\");\\n\\n        // check if user has enough shares to unstake\\n        require(\\n            user.shares >= _shares,\\n            \\\"StakingPoolUserImpl: insufficient shares\\\"\\n        );\\n\\n        // check if user can already unstake or if it's still locked\\n        require(\\n            block.timestamp > user.unstakeTimestamp,\\n            \\\"StakingPoolUserImpl: stake locked\\\"\\n        );\\n\\n        // reduce user number of shares\\n        user.shares -= _shares;\\n\\n        // calculate amount of tokens from shares\\n        uint256 _amount = sharesToAmount(_shares);\\n\\n        // reduce total shares and amount\\n        shares -= _shares;\\n        amount -= _amount;\\n\\n        // add amout user can withdraw (if available)\\n        user.released += _amount;\\n\\n        // increase required liquidity\\n        requiredLiquidity += _amount;\\n\\n        // emit event containing user, amount and shares\\n        emit Unstake(msg.sender, _amount, _shares);\\n    }\\n\\n    /// @notice Transfer tokens back to calling user wallet\\n    /// @dev this will transfer all free tokens for the calling user\\n    function withdraw() public override {\\n        UserBalance storage user = userBalance[msg.sender];\\n        uint256 _amount = user.released;\\n\\n        // check user released value\\n        require(_amount > 0, \\\"StakingPoolUserImpl: no balance to withdraw\\\");\\n\\n        // transfer token back to user\\n        require(\\n            ctsi.transfer(msg.sender, _amount),\\n            \\\"StakingPoolUserImpl: failed to transfer tokens\\\"\\n        );\\n\\n        // clear user released value\\n        user.released = 0;\\n\\n        // decrease required liquidity\\n        requiredLiquidity -= _amount;\\n\\n        // emit event containing user and token amount\\n        emit Withdraw(msg.sender, _amount);\\n    }\\n\\n    function getWithdrawBalance() public view override returns (uint256) {\\n        UserBalance storage user = userBalance[msg.sender];\\n\\n        // get amount user requested\\n        uint256 _amount = user.released;\\n\\n        // check contract balance, if it has enough, let him get it\\n        uint256 balance = ctsi.balanceOf(address(this));\\n\\n        // only allow full withdraw, so if contract has enough, let him get it\\n        return balance > _amount ? _amount : 0;\\n    }\\n}\\n\",\"keccak256\":\"0x7c7cdbc3e7720e2f1adfcaba9a89b51ef9d39ab3ded3b6fa43a5a9ab0a086c78\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolUser.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool user and a pool\\n/// @author Danilo Tuler\\n/// @notice This interface models all interactions between a pool user and a pool,\\n/// including staking, unstaking and withdrawing. A pool user always holds pool shares.\\n/// When a user stakes tokens, he immediately receive shares. When he unstakes shares\\n/// he is asking to release tokens. Those tokens need to be withdrawn by an additional\\n/// call to withdraw()\\ninterface StakingPoolUser {\\n    /// @notice Stake an amount of tokens, immediately earning pool shares in returns\\n    /// @param amount amount of tokens deposited in the pool\\n    function stake(uint256 amount) external;\\n\\n    /// @notice Unstake an specified amount of shares of the calling user\\n    /// @dev Shares are immediately converted to tokens, and added to the pool liquidity requirement\\n    function unstake(uint256 shares) external;\\n\\n    /// @notice Transfer tokens back to calling user wallet\\n    /// @dev this will transfer all free tokens for the calling user\\n    function withdraw() external;\\n\\n    /// @notice Returns the amount of tokens that can be immediately withdrawn by the calling user\\n    /// @dev there is no way to know the exact time in the future the requested tokens will be available\\n    /// @return the amount of tokens that can be immediately withdrawn by the calling user\\n    function getWithdrawBalance() external returns (uint256);\\n\\n    /// @notice Tokens were deposited, they count as shares immediatly\\n    /// @param user address of msg.sender\\n    /// @param amount amount deposited by the user\\n    /// @param shares number of shares emitted for user\\n    /// @param unlockTimestamp instant when the stake can be unstaked\\n    event Stake(\\n        address indexed user,\\n        uint256 amount,\\n        uint256 shares,\\n        uint256 unlockTimestamp\\n    );\\n\\n    /// @notice Request to unstake tokens. Additional liquidity requested for the pool\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens to be released\\n    /// @param shares number of shares being liquidated\\n    event Unstake(address indexed user, uint256 amount, uint256 shares);\\n\\n    /// @notice Withdraw performed by a user\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens withdrawn\\n    event Withdraw(address indexed user, uint256 amount);\\n}\\n\",\"keccak256\":\"0x262d7fa510c01d8a13718c9033a498d965397f94f39f886f9e8300be55447bf4\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 770,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 773,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 965,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 831,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_paused",
        "offset": 0,
        "slot": "51",
        "type": "t_bool"
      },
      {
        "astId": 922,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 650,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 763,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 2387,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "shares",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 2389,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "amount",
        "offset": 0,
        "slot": "152",
        "type": "t_uint256"
      },
      {
        "astId": 2391,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "requiredLiquidity",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 2403,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "userBalance",
        "offset": 0,
        "slot": "154",
        "type": "t_mapping(t_address,t_struct(UserBalance)2398_storage)"
      },
      {
        "astId": 3286,
        "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
        "label": "lockTime",
        "offset": 0,
        "slot": "155",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(UserBalance)2398_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPoolData.UserBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(UserBalance)2398_storage"
      },
      "t_struct(UserBalance)2398_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolData.UserBalance",
        "members": [
          {
            "astId": 2393,
            "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
            "label": "shares",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2395,
            "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
            "label": "released",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2397,
            "contract": "contracts/StakingPoolUserImpl.sol:StakingPoolUserImpl",
            "label": "unstakeTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "Stake(address,uint256,uint256,uint256)": {
        "notice": "Tokens were deposited, they count as shares immediatly"
      },
      "Unstake(address,uint256,uint256)": {
        "notice": "Request to unstake tokens. Additional liquidity requested for the pool"
      },
      "Withdraw(address,uint256)": {
        "notice": "Withdraw performed by a user"
      }
    },
    "kind": "user",
    "methods": {
      "getWithdrawBalance()": {
        "notice": "Returns the amount of tokens that can be immediately withdrawn by the calling user"
      },
      "stake(uint256)": {
        "notice": "Stake an amount of tokens, immediately earning pool shares in returns"
      },
      "unstake(uint256)": {
        "notice": "allow for users to defined exactly how many shares they want to unstake. Estimated value is then emitted on Unstake event"
      },
      "withdraw()": {
        "notice": "Transfer tokens back to calling user wallet"
      }
    },
    "version": 1
  }
}