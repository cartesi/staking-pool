{
  "contractName": "StakingPoolFactoryImpl",
  "sourceName": "contracts/StakingPoolFactoryImpl.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gasOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_pos",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_feeRaiseTimeout",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxGasRaise",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxFeePercentageRaise",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fee",
          "type": "address"
        }
      ],
      "name": "NewFlatRateCommissionStakingPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fee",
          "type": "address"
        }
      ],
      "name": "NewGasTaxCommissionStakingPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_pos",
          "type": "address"
        }
      ],
      "name": "PoSAddressChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "ReferencePoolChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "commission",
          "type": "uint256"
        }
      ],
      "name": "createFlatRateCommission",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "gas",
          "type": "uint256"
        }
      ],
      "name": "createGasTaxCommission",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRaiseTimeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gasOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPoS",
      "outputs": [
        {
          "internalType": "address",
          "name": "_pos",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxFeePercentageRaise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxGasRaise",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pos",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "referencePool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pos",
          "type": "address"
        }
      ],
      "name": "setPoSAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referencePool",
          "type": "address"
        }
      ],
      "name": "setReferencePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": "0x6101206040523480156200001257600080fd5b506040516200234e3803806200234e8339810160408190526200003591620001eb565b62000040336200017e565b6000805460ff60a01b191690556001600160a01b038616620000be5760405162461bcd60e51b815260206004820152603a60248201526000805160206200232e83398151915260448201527f722063616e206e6f74206265207a65726f20616464726573732e00000000000060648201526084015b60405180910390fd5b6001600160a01b0385166200012b5760405162461bcd60e51b815260206004820152603a60248201526000805160206200232e83398151915260448201527f722063616e206e6f74206265207a65726f20616464726573732e0000000000006064820152608401620000b5565b606095861b6001600160601b03199081166080529490951b90931660a05260c05260e09190915261010091909152600280546001600160a01b0319166001600160a01b0390921691909117905562000251565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620001e657600080fd5b919050565b60008060008060008060c087890312156200020557600080fd5b6200021087620001ce565b95506200022060208801620001ce565b94506200023060408801620001ce565b9350606087015192506080870151915060a087015190509295509295509295565b60805160601c60a05160601c60c05160e05161010051612068620002c66000396000818161027101526105470152600081816102e201526108d701526000818161012b0152818161052601526108b6015260008181610172015261089401526000818161023d015261087301526120686000f3fe60806040526004361061010d5760003560e01c80638456cb591161009557806395994ef71161006457806395994ef714610322578063964658b614610342578063c56551b614610355578063df6efe1514610375578063f2fde38b1461039557600080fd5b80638456cb59146102a857806386f1a717146102bd578063896c5107146102d05780638da5cb5b1461030457600080fd5b8063533135b6116100dc578063533135b6146101e15780635c975abb146102015780635d62a8dd1461022b5780636c678ff11461025f578063715018a61461029357600080fd5b8063112cde6a146101195780632630c12f146101605780632686e29d146101ac5780633f4ba83a146101ca57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561016c57600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610157565b3480156101b857600080fd5b506002546001600160a01b0316610194565b3480156101d657600080fd5b506101df6103b5565b005b3480156101ed57600080fd5b50600154610194906001600160a01b031681565b34801561020d57600080fd5b50600054600160a01b900460ff166040519015158152602001610157565b34801561023757600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b34801561026b57600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561029f57600080fd5b506101df61043e565b3480156102b457600080fd5b506101df610472565b6101946102cb366004610e87565b6104ce565b3480156102dc57600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561031057600080fd5b506000546001600160a01b0316610194565b34801561032e57600080fd5b506101df61033d366004610e57565b6107a8565b610194610350366004610e87565b61081c565b34801561036157600080fd5b50600254610194906001600160a01b031681565b34801561038157600080fd5b506101df610390366004610e57565b610b42565b3480156103a157600080fd5b506101df6103b0366004610e57565b610bb6565b600054600160a01b900460ff1661040a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064015b60405180910390fd5b6000546001600160a01b031633146104345760405162461bcd60e51b815260040161040190610eca565b61043c610c51565b565b6000546001600160a01b031633146104685760405162461bcd60e51b815260040161040190610eca565b61043c6000610cee565b600054600160a01b900460ff161561049c5760405162461bcd60e51b815260040161040190610ea0565b6000546001600160a01b031633146104c65760405162461bcd60e51b815260040161040190610eca565b61043c610d3e565b60008054600160a01b900460ff16156104f95760405162461bcd60e51b815260040161040190610ea0565b6001546001600160a01b03166105215760405162461bcd60e51b815260040161040190610eff565b6000827f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060405161057290610e3b565b92835260208301919091526040820152606001604051809103906000f0801580156105a1573d6000803e3d6000fd5b506001549091506000906105bd906001600160a01b0316610da3565b60025460405163485cc95560e01b81526001600160a01b038581166004830152918216602482015291925082919082169063485cc95590604401600060405180830381600087803b15801561061157600080fd5b505af1158015610625573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038416925063f2fde38b9150602401600060405180830381600087803b15801561066a57600080fd5b505af115801561067e573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038616925063f2fde38b9150602401600060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b50505050806001600160a01b0316636ff46a6c346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b50506040513393503480156108fc02935091506000818181858888f1935050505015801561075c573d6000803e3d6000fd5b506040516001600160a01b0384811682528216907fdca0276ad17c3c65434ae45a0754677f87ae465de69763ebe79ceaeff2805bc7906020015b60405180910390a2925050505b919050565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260040161040190610eca565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f5e3b1dda0e29fe5d32248c3be6ac8f07890d4bc593a7810238b65d512197042490600090a250565b60008054600160a01b900460ff16156108475760405162461bcd60e51b815260040161040190610ea0565b6001546001600160a01b031661086f5760405162461bcd60e51b815260040161040190610eff565b60007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000847f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060405161090290610e49565b6001600160a01b03958616815294909316602085015260408401919091526060830152608082015260a001604051809103906000f080158015610949573d6000803e3d6000fd5b50600154909150600090610965906001600160a01b0316610da3565b60025460405163485cc95560e01b81526001600160a01b038581166004830152918216602482015291925082919082169063485cc95590604401600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038416925063f2fde38b9150602401600060405180830381600087803b158015610a1257600080fd5b505af1158015610a26573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038616925063f2fde38b9150602401600060405180830381600087803b158015610a6b57600080fd5b505af1158015610a7f573d6000803e3d6000fd5b50505050806001600160a01b0316636ff46a6c346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610abe57600080fd5b505af1158015610ad2573d6000803e3d6000fd5b50506040513393503480156108fc02935091506000818181858888f19350505050158015610b04573d6000803e3d6000fd5b506040516001600160a01b0384811682528216907f93b9326c0865b177ab4a6131c8e6806a0edc9f3585dbaeb773542d3582d0457190602001610796565b6000546001600160a01b03163314610b6c5760405162461bcd60e51b815260040161040190610eca565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f961b87fd32dc3f26edfd7988b7e4b99084f44baeee37421669be170af4e3e61e90600090a250565b6000546001600160a01b03163314610be05760405162461bcd60e51b815260040161040190610eca565b6001600160a01b038116610c455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610401565b610c4e81610cee565b50565b600054600160a01b900460ff16610ca15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610401565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610d685760405162461bcd60e51b815260040161040190610ea0565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cd13390565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166107a35760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610401565b61074f8062000f5083390190565b610994806200169f83390190565b600060208284031215610e6957600080fd5b81356001600160a01b0381168114610e8057600080fd5b9392505050565b600060208284031215610e9957600080fd5b5035919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526030908201527f5374616b696e67506f6f6c466163746f7279496d706c3a20756e646566696e6560408201526f19081c9959995c995b98d9481c1bdbdb60821b60608201526080019056fe60c060405234801561001057600080fd5b5060405161074f38038061074f83398101604081905261002f916100dc565b6100383361008c565b6001839055608082905260a08190526002546040805185815260208101929092527f8a36c5a730a168f010484976acd9da00019dde58dcdaa557ec1035ade3805c92910160405180910390a150505061010a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100f157600080fd5b8351925060208401519150604084015190509250925092565b60805160a05161061361013c60003960008181610108015261023401526000818160a801526102f101526106136000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012a578063b1fc8ad414610145578063c2ce5e8614610158578063ec342ad014610161578063f2fde38b1461016a57600080fd5b8063112cde6a146100a35780632c4e722e146100dd57806334fcf437146100e6578063715018a6146100fb578063719ec6b114610103575b600080fd5b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100ca60015481565b6100f96100f43660046104e7565b61017d565b005b6100f961035f565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6000546040516001600160a01b0390911681526020016100d4565b6100ca610153366004610500565b610395565b6100ca60025481565b6100ca61271081565b6100f96101783660046104b7565b6103cc565b6000546001600160a01b031633146101b05760405162461bcd60e51b81526004016101a790610522565b60405180910390fd5b60015481111561031a574260025411156102325760405162461bcd60e51b815260206004820152603c60248201527f466c617452617465436f6d6d697373696f6e3a2074686520666565207261697360448201527f652074696d656f7574206973206e6f742065787069726564207965740000000060648201526084016101a7565b7f00000000000000000000000000000000000000000000000000000000000000006001548261026191906105b0565b11156102ec5760405162461bcd60e51b815260206004820152604e60248201527f466c617452617465436f6d6d697373696f6e3a2074686520666565207261697360448201527f65206973206f76657220746865206d6178696d756d20616c6c6f77656420706560648201526d7263656e746167652076616c756560901b608482015260a4016101a7565b6103167f000000000000000000000000000000000000000000000000000000000000000042610557565b6002555b60018190556002546040805183815260208101929092527f8a36c5a730a168f010484976acd9da00019dde58dcdaa557ec1035ade3805c92910160405180910390a150565b6000546001600160a01b031633146103895760405162461bcd60e51b81526004016101a790610522565b6103936000610467565b565b600080612710600154846103a99190610591565b6103b3919061056f565b90508281116103c257806103c4565b825b949350505050565b6000546001600160a01b031633146103f65760405162461bcd60e51b81526004016101a790610522565b6001600160a01b03811661045b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a7565b61046481610467565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104c957600080fd5b81356001600160a01b03811681146104e057600080fd5b9392505050565b6000602082840312156104f957600080fd5b5035919050565b6000806040838503121561051357600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561056a5761056a6105c7565b500190565b60008261058c57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156105ab576105ab6105c7565b500290565b6000828210156105c2576105c26105c7565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122085d5e30b0c1c3dd32e67b134dcbea33c284a9d2d18b3b24dc7185d78620b356664736f6c6343000807003361010060405234801561001157600080fd5b506040516109943803806109948339810160408190526100309161011d565b610039336100b1565b6001600160601b0319606086811b821660c05285901b1660e0526002839055608082905260a08190526001546040517fefb1b20d1d12d754c2da7fe3a7f0b7ea7f1d320144c1a2f873d1eeed95e5c54a9161009f91869190918252602082015260400190565b60405180910390a1505050505061016b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461011857600080fd5b919050565b600080600080600060a0868803121561013557600080fd5b61013e86610101565b945061014c60208701610101565b6040870151606088015160809098015196999198509695945092505050565b60805160a05160c05160601c60e05160601c6107d06101c46000396000818160ed01526102c601526000818161012c015261021f015260008181610166015261044e01526000818160b3015261050201526107d06000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063719ec6b111610071578063719ec6b1146101615780638da5cb5b14610188578063b1fc8ad414610199578063c2ce5e86146101ac578063dd51faa2146101b5578063f2fde38b146101c857600080fd5b8063112cde6a146100ae5780632630c12f146100e85780635d62a8dd146101275780636ca7c2161461014e578063715018a614610157575b600080fd5b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100df565b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b6100d560025481565b61015f6101db565b005b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031661010f565b6100d56101a73660046106bd565b61021a565b6100d560015481565b61015f6101c336600461068b565b6103a0565b61015f6101d636600461065b565b610570565b6000546001600160a01b0316331461020e5760405162461bcd60e51b8152600401610205906106df565b60405180910390fd5b610218600061060b565b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663455259cb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906106a4565b90506000600254826102c0919061074e565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561031d57600080fd5b505afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906106a4565b90506000808211610367576000610384565b8161037a84670de0b6b3a764000061074e565b610384919061072c565b90508581116103935780610395565b855b979650505050505050565b6000546001600160a01b031633146103ca5760405162461bcd60e51b8152600401610205906106df565b60025481111561052b5742600154111561044c5760405162461bcd60e51b815260206004820152603a60248201527f476173546178436f6d6d697373696f6e3a20746865206665652072616973652060448201527f74696d656f7574206973206e6f742065787069726564207965740000000000006064820152608401610205565b7f00000000000000000000000000000000000000000000000000000000000000006002548261047b919061076d565b11156104fd5760405162461bcd60e51b815260206004820152604560248201527f476173546178436f6d6d697373696f6e3a20746865206665652072616973652060448201527f6973206f76657220746865206d6178696d756d20616c6c6f776564206761732060648201526476616c756560d81b608482015260a401610205565b6105277f000000000000000000000000000000000000000000000000000000000000000042610714565b6001555b60028190556001546040805183815260208101929092527fefb1b20d1d12d754c2da7fe3a7f0b7ea7f1d320144c1a2f873d1eeed95e5c54a910160405180910390a150565b6000546001600160a01b0316331461059a5760405162461bcd60e51b8152600401610205906106df565b6001600160a01b0381166105ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610205565b6106088161060b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561066d57600080fd5b81356001600160a01b038116811461068457600080fd5b9392505050565b60006020828403121561069d57600080fd5b5035919050565b6000602082840312156106b657600080fd5b5051919050565b600080604083850312156106d057600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561072757610727610784565b500190565b60008261074957634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561076857610768610784565b500290565b60008282101561077f5761077f610784565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202a34e654068e336e0a34dcb92a0711e3100f288563a3cd159b7e93312093ab8f64736f6c63430008070033a26469706673582212204e8fdf47fa57242741f4072fecfebd30263ff375e9c3e1c1b79ab3add346eaf164736f6c634300080700335374616b696e67506f6f6c466163746f7279496d706c3a20706172616d657465",
  "deployedBytecode": "0x60806040526004361061010d5760003560e01c80638456cb591161009557806395994ef71161006457806395994ef714610322578063964658b614610342578063c56551b614610355578063df6efe1514610375578063f2fde38b1461039557600080fd5b80638456cb59146102a857806386f1a717146102bd578063896c5107146102d05780638da5cb5b1461030457600080fd5b8063533135b6116100dc578063533135b6146101e15780635c975abb146102015780635d62a8dd1461022b5780636c678ff11461025f578063715018a61461029357600080fd5b8063112cde6a146101195780632630c12f146101605780632686e29d146101ac5780633f4ba83a146101ca57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561016c57600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610157565b3480156101b857600080fd5b506002546001600160a01b0316610194565b3480156101d657600080fd5b506101df6103b5565b005b3480156101ed57600080fd5b50600154610194906001600160a01b031681565b34801561020d57600080fd5b50600054600160a01b900460ff166040519015158152602001610157565b34801561023757600080fd5b506101947f000000000000000000000000000000000000000000000000000000000000000081565b34801561026b57600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561029f57600080fd5b506101df61043e565b3480156102b457600080fd5b506101df610472565b6101946102cb366004610e87565b6104ce565b3480156102dc57600080fd5b5061014d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561031057600080fd5b506000546001600160a01b0316610194565b34801561032e57600080fd5b506101df61033d366004610e57565b6107a8565b610194610350366004610e87565b61081c565b34801561036157600080fd5b50600254610194906001600160a01b031681565b34801561038157600080fd5b506101df610390366004610e57565b610b42565b3480156103a157600080fd5b506101df6103b0366004610e57565b610bb6565b600054600160a01b900460ff1661040a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064015b60405180910390fd5b6000546001600160a01b031633146104345760405162461bcd60e51b815260040161040190610eca565b61043c610c51565b565b6000546001600160a01b031633146104685760405162461bcd60e51b815260040161040190610eca565b61043c6000610cee565b600054600160a01b900460ff161561049c5760405162461bcd60e51b815260040161040190610ea0565b6000546001600160a01b031633146104c65760405162461bcd60e51b815260040161040190610eca565b61043c610d3e565b60008054600160a01b900460ff16156104f95760405162461bcd60e51b815260040161040190610ea0565b6001546001600160a01b03166105215760405162461bcd60e51b815260040161040190610eff565b6000827f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060405161057290610e3b565b92835260208301919091526040820152606001604051809103906000f0801580156105a1573d6000803e3d6000fd5b506001549091506000906105bd906001600160a01b0316610da3565b60025460405163485cc95560e01b81526001600160a01b038581166004830152918216602482015291925082919082169063485cc95590604401600060405180830381600087803b15801561061157600080fd5b505af1158015610625573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038416925063f2fde38b9150602401600060405180830381600087803b15801561066a57600080fd5b505af115801561067e573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038616925063f2fde38b9150602401600060405180830381600087803b1580156106c357600080fd5b505af11580156106d7573d6000803e3d6000fd5b50505050806001600160a01b0316636ff46a6c346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b50506040513393503480156108fc02935091506000818181858888f1935050505015801561075c573d6000803e3d6000fd5b506040516001600160a01b0384811682528216907fdca0276ad17c3c65434ae45a0754677f87ae465de69763ebe79ceaeff2805bc7906020015b60405180910390a2925050505b919050565b6000546001600160a01b031633146107d25760405162461bcd60e51b815260040161040190610eca565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f5e3b1dda0e29fe5d32248c3be6ac8f07890d4bc593a7810238b65d512197042490600090a250565b60008054600160a01b900460ff16156108475760405162461bcd60e51b815260040161040190610ea0565b6001546001600160a01b031661086f5760405162461bcd60e51b815260040161040190610eff565b60007f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000847f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060405161090290610e49565b6001600160a01b03958616815294909316602085015260408401919091526060830152608082015260a001604051809103906000f080158015610949573d6000803e3d6000fd5b50600154909150600090610965906001600160a01b0316610da3565b60025460405163485cc95560e01b81526001600160a01b038581166004830152918216602482015291925082919082169063485cc95590604401600060405180830381600087803b1580156109b957600080fd5b505af11580156109cd573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038416925063f2fde38b9150602401600060405180830381600087803b158015610a1257600080fd5b505af1158015610a26573d6000803e3d6000fd5b505060405163f2fde38b60e01b81523360048201526001600160a01b038616925063f2fde38b9150602401600060405180830381600087803b158015610a6b57600080fd5b505af1158015610a7f573d6000803e3d6000fd5b50505050806001600160a01b0316636ff46a6c346040518263ffffffff1660e01b81526004016000604051808303818588803b158015610abe57600080fd5b505af1158015610ad2573d6000803e3d6000fd5b50506040513393503480156108fc02935091506000818181858888f19350505050158015610b04573d6000803e3d6000fd5b506040516001600160a01b0384811682528216907f93b9326c0865b177ab4a6131c8e6806a0edc9f3585dbaeb773542d3582d0457190602001610796565b6000546001600160a01b03163314610b6c5760405162461bcd60e51b815260040161040190610eca565b600280546001600160a01b0319166001600160a01b0383169081179091556040517f961b87fd32dc3f26edfd7988b7e4b99084f44baeee37421669be170af4e3e61e90600090a250565b6000546001600160a01b03163314610be05760405162461bcd60e51b815260040161040190610eca565b6001600160a01b038116610c455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610401565b610c4e81610cee565b50565b600054600160a01b900460ff16610ca15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610401565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610d685760405162461bcd60e51b815260040161040190610ea0565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cd13390565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166107a35760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610401565b61074f8062000f5083390190565b610994806200169f83390190565b600060208284031215610e6957600080fd5b81356001600160a01b0381168114610e8057600080fd5b9392505050565b600060208284031215610e9957600080fd5b5035919050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526030908201527f5374616b696e67506f6f6c466163746f7279496d706c3a20756e646566696e6560408201526f19081c9959995c995b98d9481c1bdbdb60821b60608201526080019056fe60c060405234801561001057600080fd5b5060405161074f38038061074f83398101604081905261002f916100dc565b6100383361008c565b6001839055608082905260a08190526002546040805185815260208101929092527f8a36c5a730a168f010484976acd9da00019dde58dcdaa557ec1035ade3805c92910160405180910390a150505061010a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156100f157600080fd5b8351925060208401519150604084015190509250925092565b60805160a05161061361013c60003960008181610108015261023401526000818160a801526102f101526106136000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012a578063b1fc8ad414610145578063c2ce5e8614610158578063ec342ad014610161578063f2fde38b1461016a57600080fd5b8063112cde6a146100a35780632c4e722e146100dd57806334fcf437146100e6578063715018a6146100fb578063719ec6b114610103575b600080fd5b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6100ca60015481565b6100f96100f43660046104e7565b61017d565b005b6100f961035f565b6100ca7f000000000000000000000000000000000000000000000000000000000000000081565b6000546040516001600160a01b0390911681526020016100d4565b6100ca610153366004610500565b610395565b6100ca60025481565b6100ca61271081565b6100f96101783660046104b7565b6103cc565b6000546001600160a01b031633146101b05760405162461bcd60e51b81526004016101a790610522565b60405180910390fd5b60015481111561031a574260025411156102325760405162461bcd60e51b815260206004820152603c60248201527f466c617452617465436f6d6d697373696f6e3a2074686520666565207261697360448201527f652074696d656f7574206973206e6f742065787069726564207965740000000060648201526084016101a7565b7f00000000000000000000000000000000000000000000000000000000000000006001548261026191906105b0565b11156102ec5760405162461bcd60e51b815260206004820152604e60248201527f466c617452617465436f6d6d697373696f6e3a2074686520666565207261697360448201527f65206973206f76657220746865206d6178696d756d20616c6c6f77656420706560648201526d7263656e746167652076616c756560901b608482015260a4016101a7565b6103167f000000000000000000000000000000000000000000000000000000000000000042610557565b6002555b60018190556002546040805183815260208101929092527f8a36c5a730a168f010484976acd9da00019dde58dcdaa557ec1035ade3805c92910160405180910390a150565b6000546001600160a01b031633146103895760405162461bcd60e51b81526004016101a790610522565b6103936000610467565b565b600080612710600154846103a99190610591565b6103b3919061056f565b90508281116103c257806103c4565b825b949350505050565b6000546001600160a01b031633146103f65760405162461bcd60e51b81526004016101a790610522565b6001600160a01b03811661045b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a7565b61046481610467565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156104c957600080fd5b81356001600160a01b03811681146104e057600080fd5b9392505050565b6000602082840312156104f957600080fd5b5035919050565b6000806040838503121561051357600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561056a5761056a6105c7565b500190565b60008261058c57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156105ab576105ab6105c7565b500290565b6000828210156105c2576105c26105c7565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122085d5e30b0c1c3dd32e67b134dcbea33c284a9d2d18b3b24dc7185d78620b356664736f6c6343000807003361010060405234801561001157600080fd5b506040516109943803806109948339810160408190526100309161011d565b610039336100b1565b6001600160601b0319606086811b821660c05285901b1660e0526002839055608082905260a08190526001546040517fefb1b20d1d12d754c2da7fe3a7f0b7ea7f1d320144c1a2f873d1eeed95e5c54a9161009f91869190918252602082015260400190565b60405180910390a1505050505061016b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461011857600080fd5b919050565b600080600080600060a0868803121561013557600080fd5b61013e86610101565b945061014c60208701610101565b6040870151606088015160809098015196999198509695945092505050565b60805160a05160c05160601c60e05160601c6107d06101c46000396000818160ed01526102c601526000818161012c015261021f015260008181610166015261044e01526000818160b3015261050201526107d06000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063719ec6b111610071578063719ec6b1146101615780638da5cb5b14610188578063b1fc8ad414610199578063c2ce5e86146101ac578063dd51faa2146101b5578063f2fde38b146101c857600080fd5b8063112cde6a146100ae5780632630c12f146100e85780635d62a8dd146101275780636ca7c2161461014e578063715018a614610157575b600080fd5b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100df565b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b6100d560025481565b61015f6101db565b005b6100d57f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031661010f565b6100d56101a73660046106bd565b61021a565b6100d560015481565b61015f6101c336600461068b565b6103a0565b61015f6101d636600461065b565b610570565b6000546001600160a01b0316331461020e5760405162461bcd60e51b8152600401610205906106df565b60405180910390fd5b610218600061060b565b565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663455259cb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561027657600080fd5b505afa15801561028a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ae91906106a4565b90506000600254826102c0919061074e565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166398d5fdca6040518163ffffffff1660e01b815260040160206040518083038186803b15801561031d57600080fd5b505afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035591906106a4565b90506000808211610367576000610384565b8161037a84670de0b6b3a764000061074e565b610384919061072c565b90508581116103935780610395565b855b979650505050505050565b6000546001600160a01b031633146103ca5760405162461bcd60e51b8152600401610205906106df565b60025481111561052b5742600154111561044c5760405162461bcd60e51b815260206004820152603a60248201527f476173546178436f6d6d697373696f6e3a20746865206665652072616973652060448201527f74696d656f7574206973206e6f742065787069726564207965740000000000006064820152608401610205565b7f00000000000000000000000000000000000000000000000000000000000000006002548261047b919061076d565b11156104fd5760405162461bcd60e51b815260206004820152604560248201527f476173546178436f6d6d697373696f6e3a20746865206665652072616973652060448201527f6973206f76657220746865206d6178696d756d20616c6c6f776564206761732060648201526476616c756560d81b608482015260a401610205565b6105277f000000000000000000000000000000000000000000000000000000000000000042610714565b6001555b60028190556001546040805183815260208101929092527fefb1b20d1d12d754c2da7fe3a7f0b7ea7f1d320144c1a2f873d1eeed95e5c54a910160405180910390a150565b6000546001600160a01b0316331461059a5760405162461bcd60e51b8152600401610205906106df565b6001600160a01b0381166105ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610205565b6106088161060b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561066d57600080fd5b81356001600160a01b038116811461068457600080fd5b9392505050565b60006020828403121561069d57600080fd5b5035919050565b6000602082840312156106b657600080fd5b5051919050565b600080604083850312156106d057600080fd5b50508035926020909101359150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561072757610727610784565b500190565b60008261074957634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561076857610768610784565b500290565b60008282101561077f5761077f610784565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202a34e654068e336e0a34dcb92a0711e3100f288563a3cd159b7e93312093ab8f64736f6c63430008070033a26469706673582212204e8fdf47fa57242741f4072fecfebd30263ff375e9c3e1c1b79ab3add346eaf164736f6c63430008070033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createFlatRateCommission(uint256)": {
        "returns": {
          "_0": "new pool address"
        }
      },
      "createGasTaxCommission(uint256)": {
        "returns": {
          "_0": "new pool address"
        }
      },
      "getPoS()": {
        "returns": {
          "_pos": "address for the PoS contract"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_1200": {
          "entryPoint": null,
          "id": 1200,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_1387": {
          "entryPoint": null,
          "id": 1387,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_2054": {
          "entryPoint": null,
          "id": 2054,
          "parameterSlots": 6,
          "returnSlots": 0
        },
        "@_msgSender_1542": {
          "entryPoint": null,
          "id": 1542,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_setOwner_1279": {
          "entryPoint": 382,
          "id": 1279,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "abi_decode_address_fromMemory": {
          "entryPoint": 462,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory": {
          "entryPoint": 491,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 6
        },
        "abi_encode_tuple_t_stringliteral_dc38fc293d9266e53ec365e353269bc7fac3d9e694dd87a4bb6108acd1ddcc9e__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1189:42",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:42",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "74:117:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "84:22:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "99:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "93:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:13:42"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "84:5:42"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "169:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "178:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "181:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "171:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "171:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "171:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "128:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "139:5:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "154:3:42",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "159:1:42",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "150:11:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "163:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:19:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "135:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "135:31:42"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "125:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "125:42:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "118:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "118:50:42"
                      },
                      "nodeType": "YulIf",
                      "src": "115:70:42"
                    }
                  ]
                },
                "name": "abi_decode_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "53:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "64:5:42",
                    "type": ""
                  }
                ],
                "src": "14:177:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "362:398:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "409:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "418:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "421:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "411:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "411:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "411:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "383:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "392:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "379:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "379:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "404:3:42",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "375:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "375:33:42"
                      },
                      "nodeType": "YulIf",
                      "src": "372:53:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "434:50:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "474:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "444:29:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "444:40:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "434:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "493:59:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "537:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "548:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "533:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "533:18:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "503:29:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "503:49:42"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "493:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "561:59:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "605:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "616:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "601:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "601:18:42"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "571:29:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "571:49:42"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "561:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "629:35:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "649:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "660:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "645:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "645:18:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "639:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "639:25:42"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "629:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "673:36:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "693:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "704:3:42",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "689:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "689:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "683:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "683:26:42"
                      },
                      "variableNames": [
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "673:6:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "718:36:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "738:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "749:3:42",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "734:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "734:19:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "728:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "728:26:42"
                      },
                      "variableNames": [
                        {
                          "name": "value5",
                          "nodeType": "YulIdentifier",
                          "src": "718:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "288:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "299:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "311:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "319:6:42",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "327:6:42",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "335:6:42",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "343:6:42",
                    "type": ""
                  },
                  {
                    "name": "value5",
                    "nodeType": "YulTypedName",
                    "src": "351:6:42",
                    "type": ""
                  }
                ],
                "src": "196:564:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "939:248:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "956:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "967:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "949:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "949:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "990:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1001:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "986:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "986:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1006:2:42",
                            "type": "",
                            "value": "58"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "979:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "979:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "979:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1029:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1040:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1025:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1025:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c466163746f7279496d706c3a20706172616d657465",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1045:34:42",
                            "type": "",
                            "value": "StakingPoolFactoryImpl: paramete"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1018:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1018:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1018:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1100:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1111:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1096:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1096:18:42"
                          },
                          {
                            "hexValue": "722063616e206e6f74206265207a65726f20616464726573732e",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1116:28:42",
                            "type": "",
                            "value": "r can not be zero address."
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1089:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1089:56:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1089:56:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1154:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1166:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1177:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1162:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1162:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1154:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_dc38fc293d9266e53ec365e353269bc7fac3d9e694dd87a4bb6108acd1ddcc9e__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "916:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "930:4:42",
                    "type": ""
                  }
                ],
                "src": "765:422:42"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_dc38fc293d9266e53ec365e353269bc7fac3d9e694dd87a4bb6108acd1ddcc9e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"StakingPoolFactoryImpl: paramete\")\n        mstore(add(headStart, 96), \"r can not be zero address.\")\n        tail := add(headStart, 128)\n    }\n}",
          "id": 42,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x234E CODESIZE SUB DUP1 PUSH3 0x234E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x1EB JUMP JUMPDEST PUSH3 0x40 CALLER PUSH3 0x17E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH3 0xBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x232E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616E206E6F74206265207A65726F20616464726573732E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0x12B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x232E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616E206E6F74206265207A65726F20616464726573732E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0xB5 JUMP JUMPDEST PUSH1 0x60 SWAP6 DUP7 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x80 MSTORE SWAP5 SWAP1 SWAP6 SHL SWAP1 SWAP4 AND PUSH1 0xA0 MSTORE PUSH1 0xC0 MSTORE PUSH1 0xE0 SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x251 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x210 DUP8 PUSH3 0x1CE JUMP JUMPDEST SWAP6 POP PUSH3 0x220 PUSH1 0x20 DUP9 ADD PUSH3 0x1CE JUMP JUMPDEST SWAP5 POP PUSH3 0x230 PUSH1 0x40 DUP9 ADD PUSH3 0x1CE JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x80 DUP8 ADD MLOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x2068 PUSH3 0x2C6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x271 ADD MSTORE PUSH2 0x547 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2E2 ADD MSTORE PUSH2 0x8D7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x12B ADD MSTORE DUP2 DUP2 PUSH2 0x526 ADD MSTORE PUSH2 0x8B6 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x172 ADD MSTORE PUSH2 0x894 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x23D ADD MSTORE PUSH2 0x873 ADD MSTORE PUSH2 0x2068 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95994EF7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95994EF7 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x964658B6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xDF6EFE15 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x86F1A717 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x896C5107 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x533135B6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x533135B6 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x5D62A8DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x6C678FF1 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x112CDE6A EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x2686E29D EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x114 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x3B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x43E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x472 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x43C PUSH2 0xC51 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x43C PUSH1 0x0 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x43C PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x572 SWAP1 PUSH2 0xE3B JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x5A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x5BD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x485CC955 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x625 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FF46A6C CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP4 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP4 POP SWAP2 POP PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MSTORE DUP3 AND SWAP1 PUSH32 0xDCA0276AD17C3C65434AE45A0754677F87AE465DE69763EBE79CEAEFF2805BC7 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5E3B1DDA0E29FE5D32248C3BE6AC8F07890D4BC593A7810238B65D5121970424 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 DUP5 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x902 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x949 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x965 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x485CC955 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FF46A6C CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP4 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP4 POP SWAP2 POP PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MSTORE DUP3 AND SWAP1 PUSH32 0x93B9326C0865B177AB4A6131C8E6806A0EDC9F3585DBAEB773542D3582D04571 SWAP1 PUSH1 0x20 ADD PUSH2 0x796 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x961B87FD32DC3F26EDFD7988B7E4B99084F44BAEEE37421669BE170AF4E3E61E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x401 JUMP JUMPDEST PUSH2 0xC4E DUP2 PUSH2 0xCEE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x401 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xCD1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x401 JUMP JUMPDEST PUSH2 0x74F DUP1 PUSH3 0xF50 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x994 DUP1 PUSH3 0x169F DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C466163746F7279496D706C3A20756E646566696E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x19081C9959995C995B98D9481C1BDBDB PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x74F CODESIZE SUB DUP1 PUSH2 0x74F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x8C JUMP JUMPDEST PUSH1 0x1 DUP4 SWAP1 SSTORE PUSH1 0x80 DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8A36C5A730A168F010484976ACD9DA00019DDE58DCDAA557EC1035ADE3805C92 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x10A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x613 PUSH2 0x13C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x108 ADD MSTORE PUSH2 0x234 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xA8 ADD MSTORE PUSH2 0x2F1 ADD MSTORE PUSH2 0x613 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xB1FC8AD4 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xC2CE5E86 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x112CDE6A EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x719EC6B1 EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x35F JUMP JUMPDEST PUSH2 0xCA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x500 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH2 0xCA PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x31A JUMPI TIMESTAMP PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617452617465436F6D6D697373696F6E3A20746865206665652072616973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652074696D656F7574206973206E6F7420657870697265642079657400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617452617465436F6D6D697373696F6E3A20746865206665652072616973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206973206F76657220746865206D6178696D756D20616C6C6F776564207065 PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x7263656E746167652076616C7565 PUSH1 0x90 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x316 PUSH32 0x0 TIMESTAMP PUSH2 0x557 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8A36C5A730A168F010484976ACD9DA00019DDE58DCDAA557EC1035ADE3805C92 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x393 PUSH1 0x0 PUSH2 0x467 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH1 0x1 SLOAD DUP5 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x56F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT PUSH2 0x3C2 JUMPI DUP1 PUSH2 0x3C4 JUMP JUMPDEST DUP3 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x467 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x56A JUMPI PUSH2 0x56A PUSH2 0x5C7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x58C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5AB JUMPI PUSH2 0x5AB PUSH2 0x5C7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5C2 PUSH2 0x5C7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD5 0xE3 SIGNEXTEND 0xC SHR RETURNDATASIZE 0xD3 0x2E PUSH8 0xB134DCBEA33C284A SWAP14 0x2D XOR 0xB3 0xB2 0x4D 0xC7 XOR 0x5D PUSH25 0x620B356664736F6C6343000807003361010060405234801561 STOP GT JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x994 CODESIZE SUB DUP1 PUSH2 0x994 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x11D JUMP JUMPDEST PUSH2 0x39 CALLER PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND PUSH1 0xC0 MSTORE DUP6 SWAP1 SHL AND PUSH1 0xE0 MSTORE PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x80 DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xEFB1B20D1D12D754C2DA7FE3A7F0B7EA7F1D320144C1A2F873D1EEED95E5C54A SWAP2 PUSH2 0x9F SWAP2 DUP7 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0x16B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP7 PUSH2 0x101 JUMP JUMPDEST SWAP5 POP PUSH2 0x14C PUSH1 0x20 DUP8 ADD PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD SWAP7 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x7D0 PUSH2 0x1C4 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xED ADD MSTORE PUSH2 0x2C6 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x12C ADD MSTORE PUSH2 0x21F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x166 ADD MSTORE PUSH2 0x44E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xB3 ADD MSTORE PUSH2 0x502 ADD MSTORE PUSH2 0x7D0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x719EC6B1 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x719EC6B1 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xB1FC8AD4 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xC2CE5E86 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD51FAA2 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x112CDE6A EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x5D62A8DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x6CA7C216 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x157 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0x10F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x218 PUSH1 0x0 PUSH2 0x60B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x455259CB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x98D5FDCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x367 JUMPI PUSH1 0x0 PUSH2 0x384 JUMP JUMPDEST DUP2 PUSH2 0x37A DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x74E JUMP JUMPDEST PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x72C JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT PUSH2 0x393 JUMPI DUP1 PUSH2 0x395 JUMP JUMPDEST DUP6 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x52B JUMPI TIMESTAMP PUSH1 0x1 SLOAD GT ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476173546178436F6D6D697373696F6E3A207468652066656520726169736520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696D656F7574206973206E6F74206578706972656420796574000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x205 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x76D JUMP JUMPDEST GT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476173546178436F6D6D697373696F6E3A207468652066656520726169736520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6973206F76657220746865206D6178696D756D20616C6C6F7765642067617320 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x76616C7565 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x205 JUMP JUMPDEST PUSH2 0x527 PUSH32 0x0 TIMESTAMP PUSH2 0x714 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xEFB1B20D1D12D754C2DA7FE3A7F0B7EA7F1D320144C1A2F873D1EEED95E5C54A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x205 JUMP JUMPDEST PUSH2 0x608 DUP2 PUSH2 0x60B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x727 JUMPI PUSH2 0x727 PUSH2 0x784 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x749 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x784 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x784 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CALLVALUE 0xE6 SLOAD MOD DUP15 CALLER PUSH15 0xA34DCB92A0711E3100F288563A3CD ISZERO SWAP12 PUSH31 0x93312093AB8F64736F6C63430008070033A26469706673582212204E8FDF47 STATICCALL JUMPI 0x24 0x27 COINBASE DELEGATECALL SMOD 0x2F 0xEC INVALID 0xBD ADDRESS 0x26 EXTCODEHASH RETURN PUSH22 0xE9C3E1C1B79AB3ADD346EAF164736F6C634300080700 CALLER MSTORE8 PUSH21 0x616B696E67506F6F6C466163746F7279496D706C3A KECCAK256 PUSH17 0x6172616D65746500000000000000000000 ",
      "sourceMap": "992:4327:20:-:0;;;1494:713;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:12;666:10:16;867:9:12;:23::i;:::-;934:5:14;924:15;;-1:-1:-1;;;;924:15:14;;;-1:-1:-1;;;;;1727:24:20;;1706:129;;;;-1:-1:-1;;;1706:129:20;;967:2:42;1706:129:20;;;949:21:42;1006:2;986:18;;;979:30;-1:-1:-1;;;;;;;;;;;1025:18:42;;;1018:62;1116:28;1096:18;;;1089:56;1162:19;;1706:129:20;;;;;;;;;-1:-1:-1;;;;;1866:26:20;;1845:131;;;;-1:-1:-1;;;1845:131:20;;967:2:42;1845:131:20;;;949:21:42;1006:2;986:18;;;979:30;-1:-1:-1;;;;;;;;;;;1025:18:42;;;1018:62;1116:28;1096:18;;;1089:56;1162:19;;1845:131:20;765:422:42;1845:131:20;1986:22;;;;-1:-1:-1;;;;;;1986:22:20;;;;;2018:26;;;;;;;;;2054:34;;2098:26;;;;;2134:46;;;;;2190:3;:10;;-1:-1:-1;;;;;;2190:10:20;-1:-1:-1;;;;;2190:10:20;;;;;;;;;992:4327;;2041:169:12;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:12;;;-1:-1:-1;;;;;;2131:17:12;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:177:42:-;93:13;;-1:-1:-1;;;;;135:31:42;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:564::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;561:59;;660:2;649:9;645:18;639:25;629:35;;704:3;693:9;689:19;683:26;673:36;;749:3;738:9;734:19;728:26;718:36;;196:564;;;;;;;;:::o;765:422::-;992:4327:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_1994": {
          "entryPoint": null,
          "id": 1994,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_msgSender_1542": {
          "entryPoint": null,
          "id": 1542,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_pause_1435": {
          "entryPoint": 3390,
          "id": 1435,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_setOwner_1279": {
          "entryPoint": 3310,
          "id": 1279,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_unpause_1451": {
          "entryPoint": 3153,
          "id": 1451,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@clone_1303": {
          "entryPoint": 3491,
          "id": 1303,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@createFlatRateCommission_2196": {
          "entryPoint": 1230,
          "id": 2196,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@createGasTaxCommission_2305": {
          "entryPoint": 2076,
          "id": 2305,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@feeRaiseTimeout_1976": {
          "entryPoint": null,
          "id": 1976,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@gasOracle_1972": {
          "entryPoint": null,
          "id": 1972,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@getPoS_2315": {
          "entryPoint": null,
          "id": 2315,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@maxFeePercentageRaise_1980": {
          "entryPoint": null,
          "id": 1980,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@maxGasRaise_1978": {
          "entryPoint": null,
          "id": 1978,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@owner_1209": {
          "entryPoint": null,
          "id": 1209,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pause_2326": {
          "entryPoint": 1138,
          "id": 2326,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@paused_1396": {
          "entryPoint": null,
          "id": 1396,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pos_1982": {
          "entryPoint": null,
          "id": 1982,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@priceOracle_1974": {
          "entryPoint": null,
          "id": 1974,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@referencePool_1970": {
          "entryPoint": null,
          "id": 1970,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@renounceOwnership_1237": {
          "entryPoint": 1086,
          "id": 1237,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@setPoSAddress_2088": {
          "entryPoint": 2882,
          "id": 2088,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@setReferencePool_2071": {
          "entryPoint": 1960,
          "id": 2071,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@transferOwnership_1260": {
          "entryPoint": 2998,
          "id": 1260,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@unpause_2337": {
          "entryPoint": 949,
          "id": 2337,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 3671,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 3719,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 3,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 6,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 3744,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 3786,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_be5d206e71d3d4d2b3d3a819ffbc25d833efcb4f0b41cf6df79ef6958069bd5d__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 3839,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:4456:42",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:42",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:216:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "94:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "155:36:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "168:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "159:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "254:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "263:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "266:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "256:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "256:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "256:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "213:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "224:5:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "239:3:42",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "244:1:42",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "235:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "235:11:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "231:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "231:19:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "220:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "220:31:42"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "210:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "210:42:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "203:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "203:50:42"
                      },
                      "nodeType": "YulIf",
                      "src": "200:70:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "279:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "289:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "279:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:42",
                    "type": ""
                  }
                ],
                "src": "14:286:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "375:110:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "421:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "430:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "433:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "423:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "423:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "423:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "396:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "405:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "392:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "392:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "417:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "388:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "388:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "385:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "446:33:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "469:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "456:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:23:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "446:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "341:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "352:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "364:6:42",
                    "type": ""
                  }
                ],
                "src": "305:180:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "591:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "601:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "613:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "624:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "609:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "601:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "643:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "658:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "674:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "679:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "670:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "670:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "683:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "666:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "666:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "654:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "654:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "636:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "636:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "636:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "560:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "571:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "582:4:42",
                    "type": ""
                  }
                ],
                "src": "490:203:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "827:175:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "837:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "849:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "860:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "845:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "845:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "837:4:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "872:29:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "890:3:42",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "895:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "886:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "886:11:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "899:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "882:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "882:19:42"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "876:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "917:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "932:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "940:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "928:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "928:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "910:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "910:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "910:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "964:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "975:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "960:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "960:18:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "984:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "992:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "980:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "980:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "953:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:43:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "953:43:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "788:9:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "799:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "807:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "818:4:42",
                    "type": ""
                  }
                ],
                "src": "698:304:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1220:306:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1230:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1242:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1253:3:42",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1238:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1238:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1230:4:42"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1266:29:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1284:3:42",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1289:1:42",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1280:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1280:11:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1293:1:42",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1276:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:19:42"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "1270:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1311:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1326:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1334:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1322:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1322:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1304:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1304:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1304:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1358:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1369:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1354:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1354:18:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1378:6:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1386:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1374:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1374:15:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1347:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1347:43:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1347:43:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1410:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1421:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1406:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1406:18:42"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1426:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1399:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1399:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1399:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1453:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1464:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1449:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1449:18:42"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "1469:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1442:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1442:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1442:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1496:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1507:3:42",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1492:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1492:19:42"
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "1513:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1485:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1485:35:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1485:35:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1157:9:42",
                    "type": ""
                  },
                  {
                    "name": "value4",
                    "nodeType": "YulTypedName",
                    "src": "1168:6:42",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1176:6:42",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1184:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1192:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1200:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1211:4:42",
                    "type": ""
                  }
                ],
                "src": "1007:519:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1626:92:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1636:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1648:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1659:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1644:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1644:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1636:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1678:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1703:6:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1696:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1696:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1689:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1689:22:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1671:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1671:41:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1671:41:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1595:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1606:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1617:4:42",
                    "type": ""
                  }
                ],
                "src": "1531:187:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1897:170:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1914:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1925:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1907:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1907:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1907:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1948:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1959:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1944:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1944:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1964:2:42",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1937:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1937:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1937:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1987:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1998:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1983:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1983:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a206e6f7420706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2003:22:42",
                            "type": "",
                            "value": "Pausable: not paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1976:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1976:50:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1976:50:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2035:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2047:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2058:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2043:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2043:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2035:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1874:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1888:4:42",
                    "type": ""
                  }
                ],
                "src": "1723:344:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2246:228:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2263:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2274:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2256:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2256:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2256:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2297:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2308:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2293:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2293:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2313:2:42",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2286:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2286:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2286:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2336:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2347:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2332:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2332:18:42"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2352:34:42",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2325:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2325:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2325:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2407:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2418:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2403:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2403:18:42"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2423:8:42",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2396:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2396:36:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2396:36:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2441:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2453:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2464:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2449:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2449:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2441:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2223:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2237:4:42",
                    "type": ""
                  }
                ],
                "src": "2072:402:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2653:166:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2670:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2681:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2663:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2663:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2663:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2704:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2715:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2700:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2700:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2720:2:42",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2693:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2693:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2693:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2743:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2754:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2739:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2739:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2759:18:42",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2732:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2732:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2732:46:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2787:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2799:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2810:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2795:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2795:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2787:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2630:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2644:4:42",
                    "type": ""
                  }
                ],
                "src": "2479:340:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2998:172:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3015:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3026:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3008:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3008:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3008:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3049:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3060:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3045:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3045:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3065:2:42",
                            "type": "",
                            "value": "22"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3038:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3038:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3038:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3088:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3099:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3084:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3084:18:42"
                          },
                          {
                            "hexValue": "455243313136373a20637265617465206661696c6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3104:24:42",
                            "type": "",
                            "value": "ERC1167: create failed"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3077:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3077:52:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3077:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3138:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3150:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3161:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3146:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3146:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3138:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2975:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2989:4:42",
                    "type": ""
                  }
                ],
                "src": "2824:346:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3349:182:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3366:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3377:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3359:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3359:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3359:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3400:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3411:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3396:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3396:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3416:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3389:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3389:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3389:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3439:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3450:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3435:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3435:18:42"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3455:34:42",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3428:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3428:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3428:62:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3499:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3511:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3522:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3507:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3507:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3499:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3326:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3340:4:42",
                    "type": ""
                  }
                ],
                "src": "3175:356:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3710:238:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3727:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3738:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3720:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3720:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3720:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3761:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3772:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3757:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3757:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3777:2:42",
                            "type": "",
                            "value": "48"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3750:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3750:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3750:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3800:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3811:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3796:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3796:18:42"
                          },
                          {
                            "hexValue": "5374616b696e67506f6f6c466163746f7279496d706c3a20756e646566696e65",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3816:34:42",
                            "type": "",
                            "value": "StakingPoolFactoryImpl: undefine"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3789:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3789:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3789:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3871:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3882:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3867:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3867:18:42"
                          },
                          {
                            "hexValue": "64207265666572656e636520706f6f6c",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3887:18:42",
                            "type": "",
                            "value": "d reference pool"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3860:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3860:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3860:46:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3915:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3927:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3938:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3923:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3923:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3915:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_be5d206e71d3d4d2b3d3a819ffbc25d833efcb4f0b41cf6df79ef6958069bd5d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3687:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3701:4:42",
                    "type": ""
                  }
                ],
                "src": "3536:412:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4054:76:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4064:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4076:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4087:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4064:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4106:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4117:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4099:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4099:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4099:25:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4023:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4034:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4045:4:42",
                    "type": ""
                  }
                ],
                "src": "3953:177:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4292:162:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4302:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4314:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4325:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4310:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4310:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4302:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4344:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4355:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4337:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4337:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4337:25:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4382:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4393:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4378:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4378:18:42"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4398:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4371:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4371:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4371:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4425:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4436:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4421:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4421:18:42"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4441:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4414:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4414:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4414:34:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4245:9:42",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4256:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4264:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4272:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4283:4:42",
                    "type": ""
                  }
                ],
                "src": "4135:319:42"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be5d206e71d3d4d2b3d3a819ffbc25d833efcb4f0b41cf6df79ef6958069bd5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"StakingPoolFactoryImpl: undefine\")\n        mstore(add(headStart, 96), \"d reference pool\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
          "id": 42,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "1972": [
          {
            "length": 32,
            "start": 573
          },
          {
            "length": 32,
            "start": 2163
          }
        ],
        "1974": [
          {
            "length": 32,
            "start": 370
          },
          {
            "length": 32,
            "start": 2196
          }
        ],
        "1976": [
          {
            "length": 32,
            "start": 299
          },
          {
            "length": 32,
            "start": 1318
          },
          {
            "length": 32,
            "start": 2230
          }
        ],
        "1978": [
          {
            "length": 32,
            "start": 738
          },
          {
            "length": 32,
            "start": 2263
          }
        ],
        "1980": [
          {
            "length": 32,
            "start": 625
          },
          {
            "length": 32,
            "start": 1351
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x95994EF7 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x95994EF7 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x964658B6 EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0xC56551B6 EQ PUSH2 0x355 JUMPI DUP1 PUSH4 0xDF6EFE15 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x86F1A717 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0x896C5107 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x533135B6 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x533135B6 EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x5D62A8DD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x6C678FF1 EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x112CDE6A EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x2686E29D EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x114 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x3B5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x157 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x194 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x43E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x472 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x14D PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x194 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST PUSH2 0x194 PUSH2 0x350 CALLDATASIZE PUSH1 0x4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x81C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x194 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE57 JUMP JUMPDEST PUSH2 0xBB6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x434 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x43C PUSH2 0xC51 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x43C PUSH1 0x0 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH2 0x43C PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x521 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x572 SWAP1 PUSH2 0xE3B JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x5A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x5BD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x485CC955 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x611 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x625 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FF46A6C CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x72A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP4 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP4 POP SWAP2 POP PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x75C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MSTORE DUP3 AND SWAP1 PUSH32 0xDCA0276AD17C3C65434AE45A0754677F87AE465DE69763EBE79CEAEFF2805BC7 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x5E3B1DDA0E29FE5D32248C3BE6AC8F07890D4BC593A7810238B65D5121970424 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x847 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x86F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH32 0x0 DUP5 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD PUSH2 0x902 SWAP1 PUSH2 0xE49 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x949 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x965 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDA3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x485CC955 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP3 SWAP2 SWAP1 DUP3 AND SWAP1 PUSH4 0x485CC955 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xF2FDE38B PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xF2FDE38B SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6FF46A6C CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xABE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP4 POP CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP4 POP SWAP2 POP PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND DUP3 MSTORE DUP3 AND SWAP1 PUSH32 0x93B9326C0865B177AB4A6131C8E6806A0EDC9F3585DBAEB773542D3582D04571 SWAP1 PUSH1 0x20 ADD PUSH2 0x796 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x961B87FD32DC3F26EDFD7988B7E4B99084F44BAEEE37421669BE170AF4E3E61E SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xECA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x401 JUMP JUMPDEST PUSH2 0xC4E DUP2 PUSH2 0xCEE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCA1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x401 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD68 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x401 SWAP1 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xCD1 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115490CC4C4D8DCE8818DC99585D194819985A5B1959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x401 JUMP JUMPDEST PUSH2 0x74F DUP1 PUSH3 0xF50 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x994 DUP1 PUSH3 0x169F DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE69 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x30 SWAP1 DUP3 ADD MSTORE PUSH32 0x5374616B696E67506F6F6C466163746F7279496D706C3A20756E646566696E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH16 0x19081C9959995C995B98D9481C1BDBDB PUSH1 0x82 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x74F CODESIZE SUB DUP1 PUSH2 0x74F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x8C JUMP JUMPDEST PUSH1 0x1 DUP4 SWAP1 SSTORE PUSH1 0x80 DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8A36C5A730A168F010484976ACD9DA00019DDE58DCDAA557EC1035ADE3805C92 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP PUSH2 0x10A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD SWAP2 POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x613 PUSH2 0x13C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x108 ADD MSTORE PUSH2 0x234 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xA8 ADD MSTORE PUSH2 0x2F1 ADD MSTORE PUSH2 0x613 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xB1FC8AD4 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0xC2CE5E86 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xEC342AD0 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x112CDE6A EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0x2C4E722E EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x34FCF437 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x719EC6B1 EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0xF4 CALLDATASIZE PUSH1 0x4 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x17D JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x35F JUMP JUMPDEST PUSH2 0xCA PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x153 CALLDATASIZE PUSH1 0x4 PUSH2 0x500 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH2 0xCA PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xCA PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0xF9 PUSH2 0x178 CALLDATASIZE PUSH1 0x4 PUSH2 0x4B7 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD DUP2 GT ISZERO PUSH2 0x31A JUMPI TIMESTAMP PUSH1 0x2 SLOAD GT ISZERO PUSH2 0x232 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617452617465436F6D6D697373696F6E3A20746865206665652072616973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x652074696D656F7574206973206E6F7420657870697265642079657400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 SLOAD DUP3 PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x5B0 JUMP JUMPDEST GT ISZERO PUSH2 0x2EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x466C617452617465436F6D6D697373696F6E3A20746865206665652072616973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65206973206F76657220746865206D6178696D756D20616C6C6F776564207065 PUSH1 0x64 DUP3 ADD MSTORE PUSH14 0x7263656E746167652076616C7565 PUSH1 0x90 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x316 PUSH32 0x0 TIMESTAMP PUSH2 0x557 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMPDEST PUSH1 0x1 DUP2 SWAP1 SSTORE PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x8A36C5A730A168F010484976ACD9DA00019DDE58DCDAA557EC1035ADE3805C92 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x389 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x393 PUSH1 0x0 PUSH2 0x467 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2710 PUSH1 0x1 SLOAD DUP5 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x591 JUMP JUMPDEST PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x56F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT PUSH2 0x3C2 JUMPI DUP1 PUSH2 0x3C4 JUMP JUMPDEST DUP3 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7 SWAP1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x45B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x464 DUP2 PUSH2 0x467 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x56A JUMPI PUSH2 0x56A PUSH2 0x5C7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x58C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x5AB JUMPI PUSH2 0x5AB PUSH2 0x5C7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x5C2 JUMPI PUSH2 0x5C2 PUSH2 0x5C7 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP6 0xD5 0xE3 SIGNEXTEND 0xC SHR RETURNDATASIZE 0xD3 0x2E PUSH8 0xB134DCBEA33C284A SWAP14 0x2D XOR 0xB3 0xB2 0x4D 0xC7 XOR 0x5D PUSH25 0x620B356664736F6C6343000807003361010060405234801561 STOP GT JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x994 CODESIZE SUB DUP1 PUSH2 0x994 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0x11D JUMP JUMPDEST PUSH2 0x39 CALLER PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP7 DUP2 SHL DUP3 AND PUSH1 0xC0 MSTORE DUP6 SWAP1 SHL AND PUSH1 0xE0 MSTORE PUSH1 0x2 DUP4 SWAP1 SSTORE PUSH1 0x80 DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH32 0xEFB1B20D1D12D754C2DA7FE3A7F0B7EA7F1D320144C1A2F873D1EEED95E5C54A SWAP2 PUSH2 0x9F SWAP2 DUP7 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP PUSH2 0x16B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13E DUP7 PUSH2 0x101 JUMP JUMPDEST SWAP5 POP PUSH2 0x14C PUSH1 0x20 DUP8 ADD PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 SWAP1 SWAP9 ADD MLOAD SWAP7 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x7D0 PUSH2 0x1C4 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH1 0xED ADD MSTORE PUSH2 0x2C6 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x12C ADD MSTORE PUSH2 0x21F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x166 ADD MSTORE PUSH2 0x44E ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH1 0xB3 ADD MSTORE PUSH2 0x502 ADD MSTORE PUSH2 0x7D0 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x719EC6B1 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x719EC6B1 EQ PUSH2 0x161 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0xB1FC8AD4 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xC2CE5E86 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0xDD51FAA2 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x112CDE6A EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x2630C12F EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x5D62A8DD EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x6CA7C216 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x157 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST PUSH2 0x10F PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0xD5 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x10F JUMP JUMPDEST PUSH2 0xD5 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x6BD JUMP JUMPDEST PUSH2 0x21A JUMP JUMPDEST PUSH2 0xD5 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x68B JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x65B JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x20E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x218 PUSH1 0x0 PUSH2 0x60B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x455259CB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x28A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x74E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x98D5FDCA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x31D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x331 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x6A4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x367 JUMPI PUSH1 0x0 PUSH2 0x384 JUMP JUMPDEST DUP2 PUSH2 0x37A DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x74E JUMP JUMPDEST PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x72C JUMP JUMPDEST SWAP1 POP DUP6 DUP2 GT PUSH2 0x393 JUMPI DUP1 PUSH2 0x395 JUMP JUMPDEST DUP6 JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 GT ISZERO PUSH2 0x52B JUMPI TIMESTAMP PUSH1 0x1 SLOAD GT ISZERO PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476173546178436F6D6D697373696F6E3A207468652066656520726169736520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74696D656F7574206973206E6F74206578706972656420796574000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x205 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x2 SLOAD DUP3 PUSH2 0x47B SWAP2 SWAP1 PUSH2 0x76D JUMP JUMPDEST GT ISZERO PUSH2 0x4FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x476173546178436F6D6D697373696F6E3A207468652066656520726169736520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6973206F76657220746865206D6178696D756D20616C6C6F7765642067617320 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x76616C7565 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x205 JUMP JUMPDEST PUSH2 0x527 PUSH32 0x0 TIMESTAMP PUSH2 0x714 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0xEFB1B20D1D12D754C2DA7FE3A7F0B7EA7F1D320144C1A2F873D1EEED95E5C54A SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x205 SWAP1 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x205 JUMP JUMPDEST PUSH2 0x608 DUP2 PUSH2 0x60B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x69D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x727 JUMPI PUSH2 0x727 PUSH2 0x784 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x749 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x768 JUMPI PUSH2 0x768 PUSH2 0x784 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x784 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A CALLVALUE 0xE6 SLOAD MOD DUP15 CALLER PUSH15 0xA34DCB92A0711E3100F288563A3CD ISZERO SWAP12 PUSH31 0x93312093AB8F64736F6C63430008070033A26469706673582212204E8FDF47 STATICCALL JUMPI 0x24 0x27 COINBASE DELEGATECALL SMOD 0x2F 0xEC INVALID 0xBD ADDRESS 0x26 EXTCODEHASH RETURN PUSH22 0xE9C3E1C1B79AB3ADD346EAF164736F6C634300080700 CALLER ",
      "sourceMap": "992:4327:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:40;;;;;;;;;;;;;;;;;;4099:25:42;;;4087:2;4072:18;1187:40:20;;;;;;;;1145:36;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;654:32:42;;;636:51;;624:2;609:18;1145:36:20;490:203:42;5065:91:20;;;;;;;;;;-1:-1:-1;5146:3:20;;-1:-1:-1;;;;;5146:3:20;5065:91;;5241:76;;;;;;;;;;;;;:::i;:::-;;1071:28;;;;;;;;;;-1:-1:-1;1071:28:20;;;;-1:-1:-1;;;;;1071:28:20;;;1041:84:14;;;;;;;;;;-1:-1:-1;1088:4:14;1111:7;-1:-1:-1;;;1111:7:14;;;;1041:84;;1696:14:42;;1689:22;1671:41;;1659:2;1644:18;1041:84:14;1531:187:42;1105:34:20;;;;;;;;;;;;;;;1275:46;;;;;;;;;;;;;;;1605:92:12;;;;;;;;;;;;;:::i;5162:73:20:-;;;;;;;;;;;;;:::i;2750:1077::-;;;;;;:::i;:::-;;:::i;1233:36::-;;;;;;;;;;;;;;;973:85:12;;;;;;;;;;-1:-1:-1;1019:7:12;1045:6;-1:-1:-1;;;;;1045:6:12;973:85;;2270:167:20;;;;;;;;;;-1:-1:-1;2270:167:20;;;;;:::i;:::-;;:::i;3833:1093::-;;;;;;:::i;:::-;;:::i;1328:18::-;;;;;;;;;;-1:-1:-1;1328:18:20;;;;-1:-1:-1;;;;;1328:18:20;;;2482:121;;;;;;;;;;-1:-1:-1;2482:121:20;;;;;:::i;:::-;;:::i;1846:189:12:-;;;;;;;;;;-1:-1:-1;1846:189:12;;;;;:::i;:::-;;:::i;5241:76:20:-;1088:4:14;1111:7;-1:-1:-1;;;1111:7:14;;;;1612:41;;;;-1:-1:-1;;;1612:41:14;;1925:2:42;1612:41:14;;;1907:21:42;1964:2;1944:18;;;1937:30;-1:-1:-1;;;1983:18:42;;;1976:50;2043:18;;1612:41:14;;;;;;;;;1019:7:12;1045:6;-1:-1:-1;;;;;1045:6:12;666:10:16;1185:23:12::1;1177:68;;;;-1:-1:-1::0;;;1177:68:12::1;;;;;;;:::i;:::-;5300:10:20::2;:8;:10::i;:::-;5241:76::o:0;1605:92:12:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:12;666:10:16;1185:23:12;1177:68;;;;-1:-1:-1;;;1177:68:12;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;5162:73:20:-:0;1088:4:14;1111:7;-1:-1:-1;;;1111:7:14;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:14;;;;;;;:::i;:::-;1019:7:12;1045:6;-1:-1:-1;;;;;1045:6:12;666:10:16;1185:23:12::1;1177:68;;;;-1:-1:-1::0;;;1177:68:12::1;;;;;;;:::i;:::-;5220:8:20::2;:6;:8::i;2750:1077::-:0;2893:7;1111::14;;-1:-1:-1;;;1111:7:14;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:14;;;;;;;:::i;:::-;2937:13:20::1;::::0;-1:-1:-1;;;;;2937:13:20::1;2916:122;;;;-1:-1:-1::0;;;2916:122:20::1;;;;;;;:::i;:::-;3048:22;3109:10;3133:15;3162:21;3073:120;;;;;:::i;:::-;4337:25:42::0;;;4393:2;4378:18;;4371:34;;;;4436:2;4421:18;;4414:34;4325:2;4310:18;3073:120:20::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3251:13:20::1;::::0;3048:145;;-1:-1:-1;3203:24:20::1;::::0;3238:27:::1;::::0;-1:-1:-1;;;;;3251:13:20::1;3238:12;:27::i;:::-;3356:3;::::0;3326:34:::1;::::0;-1:-1:-1;;;3326:34:20;;-1:-1:-1;;;;;928:15:42;;;3326:34:20::1;::::0;::::1;910::42::0;3356:3:20;;::::1;960:18:42::0;;;953:43;3203:63:20;;-1:-1:-1;3203:63:20;;3326:15;;::::1;::::0;::::1;::::0;845:18:42;;3326:34:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3370:34:20::1;::::0;-1:-1:-1;;;3370:34:20;;3393:10:::1;3370:34;::::0;::::1;636:51:42::0;-1:-1:-1;;;;;3370:22:20;::::1;::::0;-1:-1:-1;3370:22:20::1;::::0;-1:-1:-1;609:18:42;;3370:34:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3414:33:20::1;::::0;-1:-1:-1;;;3414:33:20;;3436:10:::1;3414:33;::::0;::::1;636:51:42::0;-1:-1:-1;;;;;3414:21:20;::::1;::::0;-1:-1:-1;3414:21:20::1;::::0;-1:-1:-1;609:18:42;;3414:33:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3511:4;-1:-1:-1::0;;;;;3511:13:20::1;;3532:9;3511:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3634:39:20::1;::::0;3642:10:::1;::::0;-1:-1:-1;3663:9:20::1;3634:39:::0;::::1;;;::::0;-1:-1:-1;3663:9:20;-1:-1:-1;3634:39:20::1;::::0;;;3663:9;3642:10;3634:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;3729:61:20::1;::::0;-1:-1:-1;;;;;654:32:42;;;636:51;;3729:61:20;::::1;::::0;::::1;::::0;624:2:42;609:18;3729:61:20::1;;;;;;;;3815:4:::0;-1:-1:-1;;;1394:1:14::1;2750:1077:20::0;;;:::o;2270:167::-;1019:7:12;1045:6;-1:-1:-1;;;;;1045:6:12;666:10:16;1185:23:12;1177:68;;;;-1:-1:-1;;;1177:68:12;;;;;;;:::i;:::-;2349:13:20::1;:30:::0;;-1:-1:-1;;;;;;2349:30:20::1;-1:-1:-1::0;;;;;2349:30:20;::::1;::::0;;::::1;::::0;;;2394:36:::1;::::0;::::1;::::0;-1:-1:-1;;2394:36:20::1;2270:167:::0;:::o;3833:1093::-;3967:7;1111::14;;-1:-1:-1;;;1111:7:14;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:14;;;;;;;:::i;:::-;4011:13:20::1;::::0;-1:-1:-1;;;;;4011:13:20::1;3990:122;;;;-1:-1:-1::0;;;3990:122:20::1;;;;;;;:::i;:::-;4122:20;4179:9;4202:11;4227:3;4244:15;4273:11;4145:149;;;;;:::i;:::-;-1:-1:-1::0;;;;;1322:15:42;;;1304:34;;1374:15;;;;1369:2;1354:18;;1347:43;1421:2;1406:18;;1399:34;;;;1464:2;1449:18;;1442:34;1507:3;1492:19;;1485:35;1253:3;1238:19;4145:149:20::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4352:13:20::1;::::0;4122:172;;-1:-1:-1;4304:24:20::1;::::0;4339:27:::1;::::0;-1:-1:-1;;;;;4352:13:20::1;4339:12;:27::i;:::-;4457:3;::::0;4427:34:::1;::::0;-1:-1:-1;;;4427:34:20;;-1:-1:-1;;;;;928:15:42;;;4427:34:20::1;::::0;::::1;910::42::0;4457:3:20;;::::1;960:18:42::0;;;953:43;4304:63:20;;-1:-1:-1;4304:63:20;;4427:15;;::::1;::::0;::::1;::::0;845:18:42;;4427:34:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4471:34:20::1;::::0;-1:-1:-1;;;4471:34:20;;4494:10:::1;4471:34;::::0;::::1;636:51:42::0;-1:-1:-1;;;;;4471:22:20;::::1;::::0;-1:-1:-1;4471:22:20::1;::::0;-1:-1:-1;609:18:42;;4471:34:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4515:33:20::1;::::0;-1:-1:-1;;;4515:33:20;;4537:10:::1;4515:33;::::0;::::1;636:51:42::0;-1:-1:-1;;;;;4515:21:20;::::1;::::0;-1:-1:-1;4515:21:20::1;::::0;-1:-1:-1;609:18:42;;4515:33:20::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4612:4;-1:-1:-1::0;;;;;4612:13:20::1;;4633:9;4612:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4735:39:20::1;::::0;4743:10:::1;::::0;-1:-1:-1;4764:9:20::1;4735:39:::0;::::1;;;::::0;-1:-1:-1;4764:9:20;-1:-1:-1;4735:39:20::1;::::0;;;4764:9;4743:10;4735:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4830:59:20::1;::::0;-1:-1:-1;;;;;654:32:42;;;636:51;;4830:59:20;::::1;::::0;::::1;::::0;624:2:42;609:18;4830:59:20::1;490:203:42::0;2482:121:20;1019:7:12;1045:6;-1:-1:-1;;;;;1045:6:12;666:10:16;1185:23:12;1177:68;;;;-1:-1:-1;;;1177:68:12;;;;;;;:::i;:::-;2548:3:20::1;:10:::0;;-1:-1:-1;;;;;;2548:10:20::1;-1:-1:-1::0;;;;;2548:10:20;::::1;::::0;;::::1;::::0;;;2573:23:::1;::::0;::::1;::::0;-1:-1:-1;;2573:23:20::1;2482:121:::0;:::o;1846:189:12:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:12;666:10:16;1185:23:12;1177:68;;;;-1:-1:-1;;;1177:68:12;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:12;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:12;;2274:2:42;1926:73:12::1;::::0;::::1;2256:21:42::0;2313:2;2293:18;;;2286:30;2352:34;2332:18;;;2325:62;-1:-1:-1;;;2403:18:42;;;2396:36;2449:19;;1926:73:12::1;2072:402:42::0;1926:73:12::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;2053:117:14:-;1088:4;1111:7;-1:-1:-1;;;1111:7:14;;;;1612:41;;;;-1:-1:-1;;;1612:41:14;;1925:2:42;1612:41:14;;;1907:21:42;1964:2;1944:18;;;1937:30;-1:-1:-1;;;1983:18:42;;;1976:50;2043:18;;1612:41:14;1723:344:42;1612:41:14;2121:5:::1;2111:15:::0;;-1:-1:-1;;;;2111:15:14::1;::::0;;2141:22:::1;666:10:16::0;2150:12:14::1;2141:22;::::0;-1:-1:-1;;;;;654:32:42;;;636:51;;624:2;609:18;2141:22:14::1;;;;;;;2053:117::o:0;2041:169:12:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:12;;;-1:-1:-1;;;;;;2131:17:12;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;1806:115:14:-;1088:4;1111:7;-1:-1:-1;;;1111:7:14;;;;1354:9;1346:38;;;;-1:-1:-1;;;1346:38:14;;;;;;;:::i;:::-;1865:7:::1;:14:::0;;-1:-1:-1;;;;1865:14:14::1;-1:-1:-1::0;;;1865:14:14::1;::::0;;1894:20:::1;1901:12;666:10:16::0;;587:96;906:515:13;963:16;1031:4;1025:11;-1:-1:-1;;;1056:3:13;1049:79;1174:14;1168:4;1164:25;1157:4;1152:3;1148:14;1141:49;-1:-1:-1;;;1219:4:13;1214:3;1210:14;1203:90;1333:4;1328:3;1325:1;1318:20;1306:32;-1:-1:-1;;;;;;;1365:22:13;;1357:57;;;;-1:-1:-1;;;1357:57:13;;3026:2:42;1357:57:13;;;3008:21:42;3065:2;3045:18;;;3038:30;-1:-1:-1;;;3084:18:42;;;3077:52;3146:18;;1357:57:13;2824:346:42;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;14:286:42:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:42;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:42:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:42;;305:180;-1:-1:-1;305:180:42:o;2479:340::-;2681:2;2663:21;;;2720:2;2700:18;;;2693:30;-1:-1:-1;;;2754:2:42;2739:18;;2732:46;2810:2;2795:18;;2479:340::o;3175:356::-;3377:2;3359:21;;;3396:18;;;3389:30;3455:34;3450:2;3435:18;;3428:62;3522:2;3507:18;;3175:356::o;3536:412::-;3738:2;3720:21;;;3777:2;3757:18;;;3750:30;3816:34;3811:2;3796:18;;3789:62;-1:-1:-1;;;3882:2:42;3867:18;;3860:46;3938:3;3923:19;;3536:412::o"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1659200",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "createFlatRateCommission(uint256)": "infinite",
        "createGasTaxCommission(uint256)": "infinite",
        "feeRaiseTimeout()": "infinite",
        "gasOracle()": "infinite",
        "getPoS()": "2399",
        "maxFeePercentageRaise()": "infinite",
        "maxGasRaise()": "infinite",
        "owner()": "2420",
        "pause()": "31945",
        "paused()": "2354",
        "pos()": "2403",
        "priceOracle()": "infinite",
        "referencePool()": "2360",
        "renounceOwnership()": "28225",
        "setPoSAddress(address)": "27903",
        "setReferencePool(address)": "27837",
        "transferOwnership(address)": "28384",
        "unpause()": "31980"
      }
    },
    "methodIdentifiers": {
      "createFlatRateCommission(uint256)": "86f1a717",
      "createGasTaxCommission(uint256)": "964658b6",
      "feeRaiseTimeout()": "112cde6a",
      "gasOracle()": "5d62a8dd",
      "getPoS()": "2686e29d",
      "maxFeePercentageRaise()": "6c678ff1",
      "maxGasRaise()": "896c5107",
      "owner()": "8da5cb5b",
      "pause()": "8456cb59",
      "paused()": "5c975abb",
      "pos()": "c56551b6",
      "priceOracle()": "2630c12f",
      "referencePool()": "533135b6",
      "renounceOwnership()": "715018a6",
      "setPoSAddress(address)": "df6efe15",
      "setReferencePool(address)": "95994ef7",
      "transferOwnership(address)": "f2fde38b",
      "unpause()": "3f4ba83a"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gasOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pos\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_feeRaiseTimeout\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxGasRaise\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxFeePercentageRaise\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fee\",\"type\":\"address\"}],\"name\":\"NewFlatRateCommissionStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fee\",\"type\":\"address\"}],\"name\":\"NewGasTaxCommissionStakingPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_pos\",\"type\":\"address\"}],\"name\":\"PoSAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"ReferencePoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"createFlatRateCommission\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"createGasTaxCommission\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRaiseTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_pos\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxFeePercentageRaise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxGasRaise\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pos\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"referencePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pos\",\"type\":\"address\"}],\"name\":\"setPoSAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referencePool\",\"type\":\"address\"}],\"name\":\"setReferencePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createFlatRateCommission(uint256)\":{\"returns\":{\"_0\":\"new pool address\"}},\"createGasTaxCommission(uint256)\":{\"returns\":{\"_0\":\"new pool address\"}},\"getPoS()\":{\"returns\":{\"_pos\":\"address for the PoS contract\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"NewFlatRateCommissionStakingPool(address,address)\":{\"notice\":\"Event emmited when a pool is created\"},\"NewGasTaxCommissionStakingPool(address,address)\":{\"notice\":\"Event emmited when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createFlatRateCommission(uint256)\":{\"notice\":\"Creates a new staking pool emits NewStakingPool with the parameters of the new pool\"},\"createGasTaxCommission(uint256)\":{\"notice\":\"Creates a new staking pool using a gas tax commission model emits NewGasTaxCommissionStakingPool with the parameters of the new pool\"},\"getPoS()\":{\"notice\":\"Returns configuration for the working pools of the current version\"},\"setPoSAddress(address)\":{\"notice\":\"Change the pos address\"},\"setReferencePool(address)\":{\"notice\":\"Change the pool reference implementation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolFactoryImpl.sol\":\"StakingPoolFactoryImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xa3bbab77849522b73d8c6cd3d2ac54bef7580e4354484f35f4cabf55d3d2b3f9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xa35b1f2a670cd2a701a52c398032c9fed72df1909fe394d77ceacbf074e8937b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/FlatRateCommission.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/Fee.sol\\\";\\n\\ncontract FlatRateCommission is Fee, Ownable {\\n    uint256 public immutable feeRaiseTimeout;\\n    uint256 public immutable maxRaise; // 500 = 5%\\n    uint256 public constant BASE = 1E4;\\n    uint256 public rate;\\n    uint256 public timeoutTimestamp;\\n\\n    /// @notice Event emmited when a contract is created\\n    /// @param commission commission charged by the pool\\n    event FlatRateCommissionCreated(uint256 commission);\\n\\n    /// @notice event fired when setRate function is called and successful\\n    /// @param newRate commission charged by the pool effective immediatly\\n    /// @param timeout timestamp for a new change if raising the fee\\n    event FlatRateChanged(uint256 newRate, uint256 timeout);\\n\\n    constructor(\\n        uint256 _rate,\\n        uint256 _feeRaiseTimeout,\\n        uint256 _maxRaise\\n    ) {\\n        rate = _rate;\\n        feeRaiseTimeout = _feeRaiseTimeout;\\n        maxRaise = _maxRaise;\\n        emit FlatRateChanged(_rate, timeoutTimestamp);\\n    }\\n\\n    /// @notice calculates the total amount of the reward that will be directed to the PoolManager\\n    /// @return commissionTotal is the amount subtracted from the rewardAmount\\n    function getCommission(uint256, uint256 rewardAmount)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        uint256 commission = (rewardAmount * rate) / BASE;\\n\\n        // cap commission to 100%\\n        return commission > rewardAmount ? rewardAmount : commission;\\n    }\\n\\n    /// @notice allows for the poolManager to reduce how much they want to charge for the block production tx\\n    function setRate(uint256 newRate) external onlyOwner {\\n        if (newRate > rate) {\\n            require(\\n                timeoutTimestamp <= block.timestamp,\\n                \\\"FlatRateCommission: the fee raise timeout is not expired yet\\\"\\n            );\\n            require(\\n                (newRate - rate) <= maxRaise,\\n                \\\"FlatRateCommission: the fee raise is over the maximum allowed percentage value\\\"\\n            );\\n            timeoutTimestamp = block.timestamp + feeRaiseTimeout;\\n        }\\n        rate = newRate;\\n        emit FlatRateChanged(newRate, timeoutTimestamp);\\n    }\\n}\\n\",\"keccak256\":\"0x97fb67a50bc4cb1ac08c946d26ed61c38b80b69fe6281da2187dee920843ad85\",\"license\":\"Apache-2.0\"},\"contracts/GasTaxCommission.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Gas tax based commission model\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"./interfaces/Fee.sol\\\";\\nimport \\\"./oracle/GasOracle.sol\\\";\\nimport \\\"./oracle/PriceOracle.sol\\\";\\n\\ncontract GasTaxCommission is Fee, Ownable {\\n    uint256 public immutable feeRaiseTimeout;\\n    uint256 public immutable maxRaise; // 21000 is one simple tx\\n    GasOracle public immutable gasOracle;\\n\\n    PriceOracle public immutable priceOracle;\\n    uint256 public timeoutTimestamp;\\n\\n    uint256 public gas;\\n\\n    /// @notice event fired when setGas function is called and successful\\n    /// @param timeout timestamp for a new change if raising the fee\\n    event GasTaxChanged(uint256 newGas, uint256 timeout);\\n\\n    constructor(\\n        address _gasOracle,\\n        address _priceOracle,\\n        uint256 _gas,\\n        uint256 _feeRaiseTimeout,\\n        uint256 _maxRaise\\n    ) {\\n        gasOracle = GasOracle(_gasOracle);\\n        priceOracle = PriceOracle(_priceOracle);\\n        gas = _gas;\\n        feeRaiseTimeout = _feeRaiseTimeout;\\n        maxRaise = _maxRaise;\\n        emit GasTaxChanged(_gas, timeoutTimestamp);\\n    }\\n\\n    /// @notice calculates the total amount of the reward that will be directed to the PoolManager\\n    /// @return commissionTotal is the amount subtracted from the rewardAmount\\n    function getCommission(uint256, uint256 rewardAmount)\\n        external\\n        view\\n        override\\n        returns (uint256)\\n    {\\n        // get gas price (in Wei) from chainlink oracle, at https://data.chain.link/fast-gas-gwei\\n        uint256 gasPrice = gasOracle.getGasPrice();\\n\\n        // gas fee (in Wei) charged by pool manager\\n        uint256 gasFee = gasPrice * gas;\\n\\n        // get Wei price of 1 CTSI\\n        uint256 ctsiPrice = priceOracle.getPrice();\\n\\n        // convert gas in Wei to gas in CTSI\\n        uint256 gasFeeCTSI = ctsiPrice > 0\\n            ? (gasFee * (10**18)) / ctsiPrice\\n            : 0;\\n\\n        // this is the commission, maxed by the reward\\n        return gasFeeCTSI > rewardAmount ? rewardAmount : gasFeeCTSI;\\n    }\\n\\n    /// @notice allows for the poolManager to reduce how much they want to charge for the block production tx\\n    function setGas(uint256 newGasCommission) external onlyOwner {\\n        if (newGasCommission > gas) {\\n            require(\\n                timeoutTimestamp <= block.timestamp,\\n                \\\"GasTaxCommission: the fee raise timeout is not expired yet\\\"\\n            );\\n            require(\\n                (newGasCommission - gas) <= maxRaise,\\n                \\\"GasTaxCommission: the fee raise is over the maximum allowed gas value\\\"\\n            );\\n            timeoutTimestamp = block.timestamp + feeRaiseTimeout;\\n        }\\n        gas = newGasCommission;\\n        emit GasTaxChanged(newGasCommission, timeoutTimestamp);\\n    }\\n}\\n\",\"keccak256\":\"0x6e79f59576eb07df0443d9352271b044420df1ee5a872c5b770a493de587ff46\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolFactoryImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Factory of staking pools\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport \\\"./interfaces/StakingPool.sol\\\";\\nimport \\\"./interfaces/StakingPoolFactory.sol\\\";\\nimport \\\"./FlatRateCommission.sol\\\";\\nimport \\\"./GasTaxCommission.sol\\\";\\n\\ncontract StakingPoolFactoryImpl is Ownable, Pausable, StakingPoolFactory {\\n    address public referencePool;\\n    address public immutable gasOracle;\\n    address public immutable priceOracle;\\n    uint256 public immutable feeRaiseTimeout;\\n    uint256 public immutable maxGasRaise;\\n    uint256 public immutable maxFeePercentageRaise;\\n\\n    address public pos;\\n\\n    event ReferencePoolChanged(address indexed pool);\\n    event PoSAddressChanged(address indexed _pos);\\n\\n    receive() external payable {}\\n\\n    constructor(\\n        address _gasOracle,\\n        address _priceOracle,\\n        address _pos,\\n        uint256 _feeRaiseTimeout,\\n        uint256 _maxGasRaise,\\n        uint256 _maxFeePercentageRaise\\n    ) {\\n        require(\\n            _gasOracle != address(0),\\n            \\\"StakingPoolFactoryImpl: parameter can not be zero address.\\\"\\n        );\\n        require(\\n            _priceOracle != address(0),\\n            \\\"StakingPoolFactoryImpl: parameter can not be zero address.\\\"\\n        );\\n        gasOracle = _gasOracle;\\n        priceOracle = _priceOracle;\\n        feeRaiseTimeout = _feeRaiseTimeout;\\n        maxGasRaise = _maxGasRaise;\\n        maxFeePercentageRaise = _maxFeePercentageRaise;\\n        pos = _pos;\\n    }\\n\\n    /// @notice Change the pool reference implementation\\n    function setReferencePool(address _referencePool) external onlyOwner {\\n        referencePool = _referencePool;\\n        emit ReferencePoolChanged(_referencePool);\\n    }\\n\\n    /// @notice Change the pos address\\n    function setPoSAddress(address _pos) external onlyOwner {\\n        pos = _pos;\\n        emit PoSAddressChanged(_pos);\\n    }\\n\\n    /// @notice Creates a new staking pool\\n    /// emits NewStakingPool with the parameters of the new pool\\n    /// @return new pool address\\n    function createFlatRateCommission(uint256 commission)\\n        external\\n        payable\\n        override\\n        whenNotPaused\\n        returns (address)\\n    {\\n        require(\\n            referencePool != address(0),\\n            \\\"StakingPoolFactoryImpl: undefined reference pool\\\"\\n        );\\n        FlatRateCommission fee = new FlatRateCommission(\\n            commission,\\n            feeRaiseTimeout,\\n            maxFeePercentageRaise\\n        );\\n        address payable deployed = payable(Clones.clone(referencePool));\\n        StakingPool pool = StakingPool(deployed);\\n        pool.initialize(address(fee), pos);\\n        pool.transferOwnership(msg.sender);\\n        fee.transferOwnership(msg.sender);\\n        // sends msg.value to complete hiring process\\n        pool.selfhire{value: msg.value}(); //@dev: ignore reentrancy guard warning\\n\\n        // returns unused user payment\\n        payable(msg.sender).transfer(msg.value); //@dev: ignore reentrancy guard warning\\n\\n        emit NewFlatRateCommissionStakingPool(address(pool), address(fee));\\n        return address(pool);\\n    }\\n\\n    function createGasTaxCommission(uint256 gas)\\n        external\\n        payable\\n        override\\n        whenNotPaused\\n        returns (address)\\n    {\\n        require(\\n            referencePool != address(0),\\n            \\\"StakingPoolFactoryImpl: undefined reference pool\\\"\\n        );\\n        GasTaxCommission fee = new GasTaxCommission(\\n            gasOracle,\\n            priceOracle,\\n            gas,\\n            feeRaiseTimeout,\\n            maxGasRaise\\n        );\\n        address payable deployed = payable(Clones.clone(referencePool));\\n        StakingPool pool = StakingPool(deployed);\\n        pool.initialize(address(fee), pos);\\n        pool.transferOwnership(msg.sender);\\n        fee.transferOwnership(msg.sender);\\n        // sends msg.value to complete hiring process\\n        pool.selfhire{value: msg.value}(); //@dev: ignore reentrancy guard warning\\n\\n        // returns unused user payment\\n        payable(msg.sender).transfer(msg.value); //@dev: ignore reentrancy guard warning\\n\\n        emit NewGasTaxCommissionStakingPool(address(pool), address(fee));\\n        return address(pool);\\n    }\\n\\n    /// @notice Returns configuration for the working pools of the current version\\n    /// @return _pos address for the PoS contract\\n    function getPoS() external view override returns (address _pos) {\\n        return pos;\\n    }\\n\\n    function pause() public whenNotPaused onlyOwner {\\n        _pause();\\n    }\\n\\n    function unpause() external whenPaused onlyOwner {\\n        _unpause();\\n    }\\n}\\n\",\"keccak256\":\"0x0a9ca1f9a1819b7252a4e248e212c9dd93664201c08fa874f8a9a91d5ebf50c4\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/Fee.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0 <0.9.0;\\n\\n/// @title Calculator of pool owner commission for each block reward\\n/// @author Danilo Tuler\\n/// @notice This provides flexibility for different commission models\\ninterface Fee {\\n    /// @notice calculates the total amount of the reward that will be directed to the pool owner\\n    /// @return amount of tokens taken by the pool owner as commission\\n    function getCommission(uint256 posIndex, uint256 rewardAmount)\\n        external\\n        view\\n        returns (uint256);\\n}\\n\",\"keccak256\":\"0x6f0bafc511d75503c33709e4bb0d6c8cf191f06331e7fa4505540d8d1836e55a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPool.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\nimport \\\"./StakingPoolManagement.sol\\\";\\nimport \\\"./StakingPoolProducer.sol\\\";\\nimport \\\"./StakingPoolStaking.sol\\\";\\nimport \\\"./StakingPoolUser.sol\\\";\\nimport \\\"./StakingPoolWorker.sol\\\";\\n\\n/// @title Staking Pool interface\\n/// @author Danilo Tuler\\n/// @notice This interface aggregates all facets of a staking pool.\\n/// It is broken down into the following sub-interfaces:\\n/// - StakingPoolManagement: management operations on the pool, called by the owner\\n/// - StakingPoolProducer: operations related to block production\\n/// - StakingPoolStaking: interaction between the pool and the staking contract\\n/// - StakingPoolUser: interaction between the pool users and the pool\\n/// - StakingPoolWorker: interaction between the pool and the worker node\\ninterface StakingPool is\\n    StakingPoolManagement,\\n    StakingPoolProducer,\\n    StakingPoolStaking,\\n    StakingPoolUser,\\n    StakingPoolWorker\\n{\\n    /// @notice initialize pool (from reference)\\n    function initialize(address fee, address _pos) external;\\n\\n    /// @notice Transfer ownership of pool to its deployer\\n    function transferOwnership(address newOwner) external;\\n\\n    /// @notice updates the internal settings for important pieces of the Cartesi PoS system\\n    function update() external;\\n}\\n\",\"keccak256\":\"0x102c3eb490a239bfb98f38363c2218edacdeb64db46493a3a84cbcc431903b77\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolFactory.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\ninterface StakingPoolFactory {\\n    /// @notice Creates a new staking pool using a flat commission model\\n    /// emits NewFlatRateCommissionStakingPool with the parameters of the new pool\\n    /// @return new pool address\\n    function createFlatRateCommission(uint256 commission)\\n        external\\n        payable\\n        returns (address);\\n\\n    /// @notice Creates a new staking pool using a gas tax commission model\\n    /// emits NewGasTaxCommissionStakingPool with the parameters of the new pool\\n    /// @return new pool address\\n    function createGasTaxCommission(uint256 gas)\\n        external\\n        payable\\n        returns (address);\\n\\n    /// @notice Returns configuration for the working pools of the current version\\n    /// @return _pos address for the PoS contract\\n    function getPoS() external view returns (address _pos);\\n\\n    /// @notice Event emmited when a pool is created\\n    /// @param pool address of the new pool\\n    /// @param fee address of the commission contract\\n    event NewFlatRateCommissionStakingPool(address indexed pool, address fee);\\n\\n    /// @notice Event emmited when a pool is created\\n    /// @param pool address of the new pool\\n    /// @param fee address of thhe commission contract\\n    event NewGasTaxCommissionStakingPool(address indexed pool, address fee);\\n}\\n\",\"keccak256\":\"0x5e35f11721eee583e20da68db531eefd391300d6c14a757ccf42a5c189929a7a\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolManagement.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\ninterface StakingPoolManagement {\\n    /// @notice sets a name for the pool using ENS service\\n    function setName(string memory name) external;\\n\\n    /// @notice pauses new staking on the pool\\n    function pause() external;\\n\\n    /// @notice unpauses new staking on the pool\\n    function unpause() external;\\n\\n    /// @notice Event emmited when a pool is rename\\n    event StakingPoolRenamed(string name);\\n}\\n\",\"keccak256\":\"0xff9727e06a79e361f3873da5336d7a7c976f1163b763ccece276c37e046038cf\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolProducer.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool and the PoS block production.\\n/// @author Danilo Tuler\\n/// @notice This interface provides an opportunity to handle the necessary logic\\n/// after a block is produced.\\n/// A commission is taken from the block reward, and the remaining stays in the pool,\\n/// raising the pool share value, and being further staked.\\ninterface StakingPoolProducer {\\n    /// @notice routes produceBlock to POS contract and\\n    /// updates internal states of the pool\\n    /// @return true when everything went fine\\n    function produceBlock(uint256 _index) external returns (bool);\\n\\n    /// @notice this event is emitted at every produceBlock call\\n    /// reward is the block reward\\n    /// commission is how much CTSI is directed to the pool owner\\n    event BlockProduced(uint256 reward, uint256 commission);\\n}\\n\",\"keccak256\":\"0xf9895f06eff4ce10a53a1e4d4138cc3784584b52975e69757a73dc85bebb6602\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolStaking.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool and the staking contract\\n/// @author Danilo Tuler\\n/// @notice This interface models all interactions between a pool and the staking contract,\\n/// including staking, unstaking and withdrawing.\\n/// Tokens staked by pool users will stay at the pool until the pool owner decides to\\n/// stake them in the staking contract. On the other hand, tokens unstaked by pool users\\n/// are added to a required liquidity accumulator, and must be unstaked and withdrawn from\\n/// the staking contract.\\ninterface StakingPoolStaking {\\n    /// @notice Move tokens from pool to staking or vice-versa, according to required liquidity.\\n    /// If the pool has more liquidity then necessary, it stakes tokens.\\n    /// If the pool has less liquidity then necessary, and has not started an unstake, it unstakes.\\n    /// If the pool has less liquity than necessary, and has started an unstake, it withdraws if possible.\\n    function rebalance() external;\\n\\n    /// @notice provide information for offchain about the amount for each\\n    /// staking operation on the main Staking contract\\n    /// @return stake amount of tokens that can be staked\\n    /// @return unstake amount of tokens that must be unstaked to add liquidity\\n    /// @return withdraw amount of tokens that can be withdrawn to add liquidity\\n    function amounts()\\n        external\\n        view\\n        returns (\\n            uint256 stake,\\n            uint256 unstake,\\n            uint256 withdraw\\n        );\\n}\\n\",\"keccak256\":\"0xd79a4bbc8defea295205493352e73802c29a3478fe345b04885eef3cb82c3a25\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolUser.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\n/// @title Interaction between a pool user and a pool\\n/// @author Danilo Tuler\\n/// @notice This interface models all interactions between a pool user and a pool,\\n/// including staking, unstaking and withdrawing. A pool user always holds pool shares.\\n/// When a user stakes tokens, he immediately receive shares. When he unstakes shares\\n/// he is asking to release tokens. Those tokens need to be withdrawn by an additional\\n/// call to withdraw()\\ninterface StakingPoolUser {\\n    /// @notice Deposit tokens to user pool balance\\n    /// @param amount amount of token deposited in the pool\\n    function deposit(uint256 amount) external;\\n\\n    /// @notice Stake an amount of tokens, immediately earning pool shares in returns\\n    /// @param amount amount of tokens to convert to shares\\n    function stake(uint256 amount) external;\\n\\n    /// @notice Unstake an specified amount of shares of the calling user\\n    /// @dev Shares are immediately converted to tokens, and added to the pool liquidity requirement\\n    function unstake(uint256 shares) external;\\n\\n    /// @notice Transfer tokens back to calling user wallet\\n    /// @dev this will transfer tokens from user pool account to user's wallet\\n    function withdraw(uint256 amount) external;\\n\\n    /// @notice Returns the amount of tokens that can be immediately withdrawn by the calling user\\n    /// @dev there is no way to know the exact time in the future the requested tokens will be available\\n    /// @return the amount of tokens that can be immediately withdrawn by the calling user\\n    function getWithdrawBalance() external returns (uint256);\\n\\n    /// @notice Tokens were deposited, available for staking or withdrawal\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens deposited by the user\\n    /// @param stakeTimestamp instant when the amount can be staked\\n    event Deposit(address indexed user, uint256 amount, uint256 stakeTimestamp);\\n\\n    /// @notice Tokens were deposited, they count as shares immediatly\\n    /// @param user address of msg.sender\\n    /// @param amount amount deposited by the user\\n    /// @param shares number of shares emitted for user\\n    event Stake(address indexed user, uint256 amount, uint256 shares);\\n\\n    /// @notice Request to unstake tokens. Additional liquidity requested for the pool\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens to be released\\n    /// @param shares number of shares being liquidated\\n    event Unstake(address indexed user, uint256 amount, uint256 shares);\\n\\n    /// @notice Withdraw performed by a user\\n    /// @param user address of msg.sender\\n    /// @param amount amount of tokens withdrawn\\n    event Withdraw(address indexed user, uint256 amount);\\n}\\n\",\"keccak256\":\"0xdd0612eef33a71a77364bd68c573dbb950b195500dc21c15f52ff32908fabc60\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolWorker.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\ninterface StakingPoolWorker {\\n    /// @notice allows for the pool to act on its own behalf when producing blocks.\\n    function selfhire() external payable;\\n\\n    /// @notice Asks the worker to work for the sender. Sender needs to pay something.\\n    /// @param workerAddress address of the worker\\n    function hire(address payable workerAddress) external payable;\\n\\n    /// @notice Called by the user to cancel a job offer\\n    /// @param workerAddress address of the worker node\\n    function cancelHire(address workerAddress) external;\\n\\n    /// @notice Called by the user to retire his worker.\\n    /// @param workerAddress address of the worker to be retired\\n    /// @dev this also removes all authorizations in place\\n    function retire(address payable workerAddress) external;\\n}\\n\",\"keccak256\":\"0x66b0366bc973b3dbc8591c1cd6e558ee5456192a31ee1262b8b5e855c30a9023\",\"license\":\"Apache-2.0\"},\"contracts/oracle/GasOracle.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity ^0.8.0;\\n\\ninterface GasOracle {\\n    /// @notice Returns current network gas price\\n    /// @return value of gas price\\n    function getGasPrice() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x7ad0683de70d2fbb8dd0f9fafeea8e05d1c9ca872f53296456ad615d75051e79\",\"license\":\"Apache-2.0\"},\"contracts/oracle/PriceOracle.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Interface staking contract\\npragma solidity >=0.5.0 <0.9.0;\\n\\ninterface PriceOracle {\\n    /// @notice Returns price of CTSI in ETH\\n    /// @return value of 1 ETH in CTSI\\n    function getPrice() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xfa7ef41ddc10fbf80d09ad56eb247609ebae765ef47e74d98230b2718dba3ddb\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 1184,
        "contract": "contracts/StakingPoolFactoryImpl.sol:StakingPoolFactoryImpl",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1378,
        "contract": "contracts/StakingPoolFactoryImpl.sol:StakingPoolFactoryImpl",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1970,
        "contract": "contracts/StakingPoolFactoryImpl.sol:StakingPoolFactoryImpl",
        "label": "referencePool",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1982,
        "contract": "contracts/StakingPoolFactoryImpl.sol:StakingPoolFactoryImpl",
        "label": "pos",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "events": {
      "NewFlatRateCommissionStakingPool(address,address)": {
        "notice": "Event emmited when a pool is created"
      },
      "NewGasTaxCommissionStakingPool(address,address)": {
        "notice": "Event emmited when a pool is created"
      }
    },
    "kind": "user",
    "methods": {
      "createFlatRateCommission(uint256)": {
        "notice": "Creates a new staking pool emits NewStakingPool with the parameters of the new pool"
      },
      "createGasTaxCommission(uint256)": {
        "notice": "Creates a new staking pool using a gas tax commission model emits NewGasTaxCommissionStakingPool with the parameters of the new pool"
      },
      "getPoS()": {
        "notice": "Returns configuration for the working pools of the current version"
      },
      "setPoSAddress(address)": {
        "notice": "Change the pos address"
      },
      "setReferencePool(address)": {
        "notice": "Change the pool reference implementation"
      }
    },
    "version": 1
  }
}