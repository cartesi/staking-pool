{
  "contractName": "StakingPoolManagementImpl",
  "sourceName": "contracts/StakingPoolManagementImpl.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ens",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "StakingPoolRenamed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "amountToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ens",
      "outputs": [
        {
          "internalType": "contract ENS",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requiredLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "setName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "sharesToAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "depositTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610cbb380380610cbb83398101604081905261002f916101fd565b600054610100900460ff1680610048575060005460ff16155b6100b05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff161580156100d2576000805461ffff19166101011790555b6001600160a01b0382166101325760405162461bcd60e51b815260206004820152602160248201527f706172616d657465722063616e206e6f74206265207a65726f206164647265736044820152607360f81b60648201526084016100a7565b6001600160601b0319606083901b1660805261014c610165565b801561015e576000805461ff00191690555b505061022d565b60335460ff16156101ab5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016100a7565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586101e03390565b6040516001600160a01b03909116815260200160405180910390a1565b60006020828403121561020f57600080fd5b81516001600160a01b038116811461022657600080fd5b9392505050565b60805160601c610a696102526000396000818161015a01526103ac0152610a696000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638456cb591161008c578063b811540e11610066578063b811540e146101f1578063c47f002714610204578063e366b7bb14610217578063f2fde38b1461022057600080fd5b80638456cb59146101cf5780638da5cb5b146101d7578063aa8c217c146101e857600080fd5b80633f4ba83a116100c85780633f4ba83a14610194578063555d8ebb1461019e5780635c975abb146101b1578063715018a6146101c757600080fd5b80630103c92b146100ef57806303314efa1461013e5780633f15457f14610155575b600080fd5b61011e6100fd3660046107f2565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61014760975481565b604051908152602001610135565b61017c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610135565b61019c610233565b005b6101476101ac3660046108f6565b610270565b60335460ff166040519015158152602001610135565b61019c6102ad565b61019c6102e1565b6065546001600160a01b031661017c565b61014760985481565b6101476101ff3660046108f6565b610313565b61019c610212366004610845565b61034a565b61014760995481565b61019c61022e3660046107f2565b6104eb565b6065546001600160a01b031633146102665760405162461bcd60e51b815260040161025d90610964565b60405180910390fd5b61026e610586565b565b60006097546000141561028c5761028682610619565b92915050565b6102866097546102a76098548561064d90919063ffffffff16565b90610687565b6065546001600160a01b031633146102d75760405162461bcd60e51b815260040161025d90610964565b61026e60006106ca565b6065546001600160a01b0316331461030b5760405162461bcd60e51b815260040161025d90610964565b61026e61071c565b6000609854600014156103295761028682610797565b610286609854610344609754856107a790919063ffffffff16565b906107cf565b6065546001600160a01b031633146103745760405162461bcd60e51b815260040161025d90610964565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be39060240160206040518083038186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e919061080f565b60405163c47f002760e01b81529091506001600160a01b0382169063c47f00279061045d90859060040161090f565b602060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af919061082c565b507f6aaa0865532d48a9a0f63cc91df7ff2ab538c896665c864ae02d0a1e7f81cf65826040516104df919061090f565b60405180910390a15050565b6065546001600160a01b031633146105155760405162461bcd60e51b815260040161025d90610964565b6001600160a01b03811661057a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025d565b610583816106ca565b50565b60335460ff166105cf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161025d565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60008061062b6002633b9aca006109b1565b9050633b9aca0061063c8483610999565b61064691906109b1565b9392505050565b60006b033b2e3c9fd0803ce800000061066683856109d3565b61067d60026b033b2e3c9fd0803ce80000006109b1565b61063c9190610999565b6000806106956002846109b1565b9050826106ae6b033b2e3c9fd0803ce8000000866109d3565b6106b89083610999565b6106c291906109b1565b949350505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60335460ff16156107625760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161025d565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105fc3390565b6000610286633b9aca00836109d3565b6000670de0b6b3a76400006107bc83856109d3565b61067d6002670de0b6b3a76400006109b1565b6000806107dd6002846109b1565b9050826106ae670de0b6b3a7640000866109d3565b60006020828403121561080457600080fd5b813561064681610a1e565b60006020828403121561082157600080fd5b815161064681610a1e565b60006020828403121561083e57600080fd5b5051919050565b60006020828403121561085757600080fd5b813567ffffffffffffffff8082111561086f57600080fd5b818401915084601f83011261088357600080fd5b81358181111561089557610895610a08565b604051601f8201601f19908116603f011681019083821181831017156108bd576108bd610a08565b816040528281528760208487010111156108d657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561090857600080fd5b5035919050565b600060208083528351808285015260005b8181101561093c57858101830151858201604001528201610920565b8181111561094e576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156109ac576109ac6109f2565b500190565b6000826109ce57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156109ed576109ed6109f2565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461058357600080fdfea264697066735822122066abeea81d2ab52fe47a6a77555418516572159b523a1258ad02097bcc9c999e64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638456cb591161008c578063b811540e11610066578063b811540e146101f1578063c47f002714610204578063e366b7bb14610217578063f2fde38b1461022057600080fd5b80638456cb59146101cf5780638da5cb5b146101d7578063aa8c217c146101e857600080fd5b80633f4ba83a116100c85780633f4ba83a14610194578063555d8ebb1461019e5780635c975abb146101b1578063715018a6146101c757600080fd5b80630103c92b146100ef57806303314efa1461013e5780633f15457f14610155575b600080fd5b61011e6100fd3660046107f2565b609a6020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060015b60405180910390f35b61014760975481565b604051908152602001610135565b61017c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610135565b61019c610233565b005b6101476101ac3660046108f6565b610270565b60335460ff166040519015158152602001610135565b61019c6102ad565b61019c6102e1565b6065546001600160a01b031661017c565b61014760985481565b6101476101ff3660046108f6565b610313565b61019c610212366004610845565b61034a565b61014760995481565b61019c61022e3660046107f2565b6104eb565b6065546001600160a01b031633146102665760405162461bcd60e51b815260040161025d90610964565b60405180910390fd5b61026e610586565b565b60006097546000141561028c5761028682610619565b92915050565b6102866097546102a76098548561064d90919063ffffffff16565b90610687565b6065546001600160a01b031633146102d75760405162461bcd60e51b815260040161025d90610964565b61026e60006106ca565b6065546001600160a01b0316331461030b5760405162461bcd60e51b815260040161025d90610964565b61026e61071c565b6000609854600014156103295761028682610797565b610286609854610344609754856107a790919063ffffffff16565b906107cf565b6065546001600160a01b031633146103745760405162461bcd60e51b815260040161025d90610964565b6040516302571be360e01b81527f91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e260048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906302571be39060240160206040518083038186803b1580156103f657600080fd5b505afa15801561040a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042e919061080f565b60405163c47f002760e01b81529091506001600160a01b0382169063c47f00279061045d90859060040161090f565b602060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af919061082c565b507f6aaa0865532d48a9a0f63cc91df7ff2ab538c896665c864ae02d0a1e7f81cf65826040516104df919061090f565b60405180910390a15050565b6065546001600160a01b031633146105155760405162461bcd60e51b815260040161025d90610964565b6001600160a01b03811661057a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025d565b610583816106ca565b50565b60335460ff166105cf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161025d565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60008061062b6002633b9aca006109b1565b9050633b9aca0061063c8483610999565b61064691906109b1565b9392505050565b60006b033b2e3c9fd0803ce800000061066683856109d3565b61067d60026b033b2e3c9fd0803ce80000006109b1565b61063c9190610999565b6000806106956002846109b1565b9050826106ae6b033b2e3c9fd0803ce8000000866109d3565b6106b89083610999565b6106c291906109b1565b949350505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60335460ff16156107625760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161025d565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105fc3390565b6000610286633b9aca00836109d3565b6000670de0b6b3a76400006107bc83856109d3565b61067d6002670de0b6b3a76400006109b1565b6000806107dd6002846109b1565b9050826106ae670de0b6b3a7640000866109d3565b60006020828403121561080457600080fd5b813561064681610a1e565b60006020828403121561082157600080fd5b815161064681610a1e565b60006020828403121561083e57600080fd5b5051919050565b60006020828403121561085757600080fd5b813567ffffffffffffffff8082111561086f57600080fd5b818401915084601f83011261088357600080fd5b81358181111561089557610895610a08565b604051601f8201601f19908116603f011681019083821181831017156108bd576108bd610a08565b816040528281528760208487010111156108d657600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561090857600080fd5b5035919050565b600060208083528351808285015260005b8181101561093c57858101830151858201604001528201610920565b8181111561094e576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156109ac576109ac6109f2565b500190565b6000826109ce57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156109ed576109ed6109f2565b500290565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461058357600080fdfea264697066735822122066abeea81d2ab52fe47a6a77555418516572159b523a1258ad02097bcc9c999e64736f6c63430008070033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "functionDebugData": {
        "@_2412": {
          "entryPoint": null,
          "id": 2412,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_msgSender_1162": {
          "entryPoint": null,
          "id": 1162,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_pause_1111": {
          "entryPoint": 357,
          "id": 1111,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@paused_1072": {
          "entryPoint": null,
          "id": 1072,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 509,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:1676:42",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:42",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "95:209:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "141:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "150:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "153:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "143:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "143:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "143:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "116:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "125:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "112:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "112:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "137:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "108:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "108:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "105:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "166:29:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "185:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "179:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "179:16:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "170:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "258:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "267:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "270:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "260:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "260:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "260:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "217:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "228:5:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "243:3:42",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "248:1:42",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "239:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "239:11:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "252:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:19:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "224:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "224:31:42"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "214:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "214:42:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "207:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "207:50:42"
                      },
                      "nodeType": "YulIf",
                      "src": "204:70:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "283:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "293:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "283:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "61:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "72:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "84:6:42",
                    "type": ""
                  }
                ],
                "src": "14:290:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "410:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "420:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "432:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "443:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "428:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "428:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "420:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "462:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "477:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "493:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "498:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "502:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "485:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "473:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "473:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "455:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "455:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "455:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "379:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "390:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "401:4:42",
                    "type": ""
                  }
                ],
                "src": "309:203:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "691:223:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "708:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "719:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "701:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "701:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "701:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "742:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "753:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "738:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "738:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "758:2:42",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "731:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "731:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "731:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "781:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "792:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "777:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "777:18:42"
                          },
                          {
                            "hexValue": "706172616d657465722063616e206e6f74206265207a65726f20616464726573",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "797:34:42",
                            "type": "",
                            "value": "parameter can not be zero addres"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "770:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "770:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "770:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "852:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "863:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "848:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "848:18:42"
                          },
                          {
                            "hexValue": "73",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "868:3:42",
                            "type": "",
                            "value": "s"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "841:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "841:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "841:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "881:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "893:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "904:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "889:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "889:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "881:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "668:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "682:4:42",
                    "type": ""
                  }
                ],
                "src": "517:397:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1093:166:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1110:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1121:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1103:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1103:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1144:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1155:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1140:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1140:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1160:2:42",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1133:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1133:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1133:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1183:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1194:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1179:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1179:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1199:18:42",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1172:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1172:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1172:46:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1227:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1239:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1250:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1235:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1227:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1070:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1084:4:42",
                    "type": ""
                  }
                ],
                "src": "919:340:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1438:236:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1455:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1466:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1448:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1448:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1448:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1489:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1500:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1485:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1485:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1505:2:42",
                            "type": "",
                            "value": "46"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1478:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1478:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1478:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1528:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1539:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1524:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1524:18:42"
                          },
                          {
                            "hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1544:34:42",
                            "type": "",
                            "value": "Initializable: contract is alrea"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1517:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1517:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1517:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1599:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1610:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1595:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1595:18:42"
                          },
                          {
                            "hexValue": "647920696e697469616c697a6564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1615:16:42",
                            "type": "",
                            "value": "dy initialized"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1588:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1588:44:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1588:44:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1641:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1653:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1664:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1649:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1649:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1641:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1415:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1429:4:42",
                    "type": ""
                  }
                ],
                "src": "1264:410:42"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_2c554f41de86bd97b9700935e6cae067987bdfb7aa5925f3bef37eefdca2325f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"parameter can not be zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n}",
          "id": 42,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xCBB CODESIZE SUB DUP1 PUSH2 0xCBB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x48 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0xB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x132 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706172616D657465722063616E206E6F74206265207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP4 SWAP1 SHL AND PUSH1 0x80 MSTORE PUSH2 0x14C PUSH2 0x165 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP PUSH2 0x22D JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xA7 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1E0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0xA69 PUSH2 0x252 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x15A ADD MSTORE PUSH2 0x3AC ADD MSTORE PUSH2 0xA69 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB811540E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x17C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x233 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x19C PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17C JUMP JUMPDEST PUSH2 0x147 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x845 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH2 0x147 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26E PUSH2 0x586 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x28C JUMPI PUSH2 0x286 DUP3 PUSH2 0x619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x286 PUSH1 0x97 SLOAD PUSH2 0x2A7 PUSH1 0x98 SLOAD DUP6 PUSH2 0x64D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x71C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x329 JUMPI PUSH2 0x286 DUP3 PUSH2 0x797 JUMP JUMPDEST PUSH2 0x286 PUSH1 0x98 SLOAD PUSH2 0x344 PUSH1 0x97 SLOAD DUP6 PUSH2 0x7A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x91D1777781884D03A6757A803996E38DE2A42967FB37EEACA72729271025A9E2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC47F0027 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC47F0027 SWAP1 PUSH2 0x45D SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x90F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST POP PUSH32 0x6AAA0865532D48A9A0F63CC91DF7FF2AB538C896665C864AE02D0A1E7F81CF65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x583 DUP2 PUSH2 0x6CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x62B PUSH1 0x2 PUSH4 0x3B9ACA00 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 PUSH2 0x63C DUP5 DUP4 PUSH2 0x999 JUMP JUMPDEST PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x666 DUP4 DUP6 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x67D PUSH1 0x2 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x695 PUSH1 0x2 DUP5 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x6AE PUSH12 0x33B2E3C9FD0803CE8000000 DUP7 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x6B8 SWAP1 DUP4 PUSH2 0x999 JUMP JUMPDEST PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x5FC CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286 PUSH4 0x3B9ACA00 DUP4 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7BC DUP4 DUP6 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x67D PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7DD PUSH1 0x2 DUP5 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x6AE PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x646 DUP2 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x646 DUP2 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x895 JUMPI PUSH2 0x895 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8BD JUMPI PUSH2 0x8BD PUSH2 0xA08 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x93C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x920 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AC PUSH2 0x9F2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9ED JUMPI PUSH2 0x9ED PUSH2 0x9F2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xABEEA81D2AB52F 0xE4 PUSH27 0x6A77555418516572159B523A1258AD02097BCC9C999E64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
      "sourceMap": "864:1239:22:-:0;;;1163:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1409:13:9;;;;;;;;:30;;-1:-1:-1;1427:12:9;;;;1426:13;1409:30;1401:89;;;;-1:-1:-1;;;1401:89:9;;1466:2:42;1401:89:9;;;1448:21:42;1505:2;1485:18;;;1478:30;1544:34;1524:18;;;1517:62;-1:-1:-1;;;1595:18:42;;;1588:44;1649:19;;1401:89:9;;;;;;;;;1501:19;1524:13;;;;;;1523:14;1547:98;;;;1581:13;:20;;-1:-1:-1;;1615:19:9;;;;;1547:98;-1:-1:-1;;;;;1219:18:22;::::1;1211:64;;;::::0;-1:-1:-1;;;1211:64:22;;719:2:42;1211:64:22::1;::::0;::::1;701:21:42::0;758:2;738:18;;;731:30;797:34;777:18;;;770:62;-1:-1:-1;;;848:18:42;;;841:31;889:19;;1211:64:22::1;517:397:42::0;1211:64:22::1;-1:-1:-1::0;;;;;;1285:15:22::1;::::0;;;;::::1;::::0;1378:8:::1;:6;:8::i;:::-;1671:14:9::0;1667:66;;;1717:5;1701:21;;-1:-1:-1;;1701:21:9;;;1667:66;1391:348;1163:230:22;864:1239;;2075:115:10;1380:7;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;1121:2:42;1615:38:10;;;1103:21:42;1160:2;1140:18;;;1133:30;-1:-1:-1;;;1179:18:42;;;1172:46;1235:18;;1615:38:10;919:340:42;1615:38:10;2134:7:::1;:14:::0;;-1:-1:-1;;2134:14:10::1;2144:4;2134:14;::::0;;2163:20:::1;2170:12;902:10:11::0;;823:96;2170:12:10::1;2163:20;::::0;-1:-1:-1;;;;;473:32:42;;;455:51;;443:2;428:18;2163:20:10::1;;;;;;;2075:115::o:0;14:290:42:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:42;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:42:o;1264:410::-;864:1239:22;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "functionDebugData": {
        "@_msgSender_1162": {
          "entryPoint": null,
          "id": 1162,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@_pause_1111": {
          "entryPoint": 1820,
          "id": 1111,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@_setOwner_968": {
          "entryPoint": 1738,
          "id": 968,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@_unpause_1127": {
          "entryPoint": 1414,
          "id": 1127,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@amountToShares_1903": {
          "entryPoint": 787,
          "id": 1903,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@amount_1864": {
          "entryPoint": null,
          "id": 1864,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@ens_2385": {
          "entryPoint": null,
          "id": 2385,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@owner_898": {
          "entryPoint": null,
          "id": 898,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@pause_2453": {
          "entryPoint": 737,
          "id": 2453,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@paused_1072": {
          "entryPoint": null,
          "id": 1072,
          "parameterSlots": 0,
          "returnSlots": 1
        },
        "@ray2wad_3894": {
          "entryPoint": 1561,
          "id": 3894,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@rdiv_3873": {
          "entryPoint": 1671,
          "id": 3873,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@renounceOwnership_926": {
          "entryPoint": 685,
          "id": 926,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@requiredLiquidity_1866": {
          "entryPoint": null,
          "id": 1866,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@rmul_3847": {
          "entryPoint": 1613,
          "id": 3847,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@setName_2442": {
          "entryPoint": 842,
          "id": 2442,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@sharesToAmount_1928": {
          "entryPoint": 624,
          "id": 1928,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@shares_1862": {
          "entryPoint": null,
          "id": 1862,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@transferOwnership_949": {
          "entryPoint": 1259,
          "id": 949,
          "parameterSlots": 1,
          "returnSlots": 0
        },
        "@unpause_2464": {
          "entryPoint": 563,
          "id": 2464,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@userBalance_1878": {
          "entryPoint": null,
          "id": 1878,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "@wad2ray_3906": {
          "entryPoint": 1943,
          "id": 3906,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "@wdiv_3824": {
          "entryPoint": 1999,
          "id": 3824,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "@wmul_3798": {
          "entryPoint": 1959,
          "id": 3798,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address": {
          "entryPoint": 2034,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_address_fromMemory": {
          "entryPoint": 2063,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_bytes32_fromMemory": {
          "entryPoint": 2092,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_string_memory_ptr": {
          "entryPoint": 2117,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_decode_tuple_t_uint256": {
          "entryPoint": 2294,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 2319,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
          "entryPoint": 2404,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
          "entryPoint": null,
          "id": null,
          "parameterSlots": 4,
          "returnSlots": 1
        },
        "checked_add_t_uint256": {
          "entryPoint": 2457,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_div_t_uint256": {
          "entryPoint": 2481,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "checked_mul_t_uint256": {
          "entryPoint": 2515,
          "id": null,
          "parameterSlots": 2,
          "returnSlots": 1
        },
        "panic_error_0x11": {
          "entryPoint": 2546,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "panic_error_0x41": {
          "entryPoint": 2568,
          "id": null,
          "parameterSlots": 0,
          "returnSlots": 0
        },
        "validator_revert_address": {
          "entryPoint": 2590,
          "id": null,
          "parameterSlots": 1,
          "returnSlots": 0
        }
      },
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:6119:42",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:42",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "84:177:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "130:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "139:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "142:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "132:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "132:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "132:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "105:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "114:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "101:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "101:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "126:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "97:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "97:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "94:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "155:36:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "181:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "168:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "168:23:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "159:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "225:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "200:24:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "200:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "200:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "240:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "250:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "240:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "50:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "61:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "73:6:42",
                    "type": ""
                  }
                ],
                "src": "14:247:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "347:170:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "393:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "402:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "405:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "395:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "395:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "395:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "368:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "377:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "364:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "364:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "389:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "360:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "360:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "357:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "418:29:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "437:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "431:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "431:16:42"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "422:5:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "481:5:42"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_address",
                          "nodeType": "YulIdentifier",
                          "src": "456:24:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "456:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "456:31:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "496:15:42",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "506:5:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "496:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "313:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "324:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "336:6:42",
                    "type": ""
                  }
                ],
                "src": "266:251:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "603:103:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "649:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "658:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "661:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "651:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "651:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "651:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "624:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "633:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "620:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "620:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "645:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "616:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "616:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "613:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "674:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "690:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "684:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "684:16:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "674:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes32_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "569:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "580:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "592:6:42",
                    "type": ""
                  }
                ],
                "src": "522:184:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "791:842:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "837:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "846:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "849:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "839:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "839:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "839:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "812:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "821:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "808:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "808:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "833:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "804:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "804:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "801:52:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "862:37:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "889:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "876:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "876:23:42"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "866:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "908:28:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "918:18:42",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "912:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "963:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "972:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "975:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "965:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "965:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "965:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "951:6:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "959:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "948:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "948:14:42"
                      },
                      "nodeType": "YulIf",
                      "src": "945:34:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "988:32:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1002:9:42"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1013:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "998:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "998:22:42"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "992:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1068:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1077:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1080:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1070:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1070:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1070:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1047:2:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1051:4:42",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1043:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1043:13:42"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1058:7:42"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1039:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1039:27:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1032:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1032:35:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1029:55:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1093:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1116:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1103:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1103:16:42"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "1097:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1142:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1144:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1144:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1144:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1134:2:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1138:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1131:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1131:10:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1128:36:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1173:17:42",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1187:2:42",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1183:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1183:7:42"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "1177:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1199:23:42",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1219:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1213:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1213:9:42"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "1203:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1231:71:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1253:6:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1277:2:42"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1281:4:42",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1273:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1273:13:42"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1288:2:42"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1269:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1269:22:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1293:2:42",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1265:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1265:31:42"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "1298:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1261:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1261:40:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1249:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1249:53:42"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "1235:10:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1361:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "1363:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1363:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1363:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1320:10:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1332:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "1317:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1317:18:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "1340:10:42"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1352:6:42"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1337:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1337:22:42"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "1314:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1314:46:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1311:72:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1399:2:42",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1403:10:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1392:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1392:22:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1392:22:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1430:6:42"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1438:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1423:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1423:18:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1423:18:42"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1487:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1496:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1499:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1489:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1489:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1489:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1464:2:42"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1468:2:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1460:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1460:11:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1473:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1456:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1456:20:42"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1478:7:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1453:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1453:33:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1450:53:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1529:6:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1537:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1525:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1525:15:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1546:2:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1550:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1542:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1542:11:42"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "1555:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "1512:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1512:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1512:46:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "1582:6:42"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1590:2:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1578:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1578:15:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1595:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1574:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1574:24:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1600:1:42",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1567:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1567:35:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1567:35:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1611:16:42",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1621:6:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1611:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "757:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "768:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "780:6:42",
                    "type": ""
                  }
                ],
                "src": "711:922:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1708:110:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1754:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1763:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1766:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1756:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1756:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1756:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1729:7:42"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1738:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1725:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1725:23:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1750:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:32:42"
                      },
                      "nodeType": "YulIf",
                      "src": "1718:52:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1779:33:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1802:9:42"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1789:12:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1789:23:42"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1779:6:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1674:9:42",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1685:7:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1697:6:42",
                    "type": ""
                  }
                ],
                "src": "1638:180:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1924:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1934:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1946:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1957:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1942:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1942:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1934:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1976:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1991:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2007:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2012:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2003:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2003:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2016:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1999:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1999:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1987:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1987:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1969:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1969:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1969:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1893:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1904:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1915:4:42",
                    "type": ""
                  }
                ],
                "src": "1823:203:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2126:92:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2136:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2148:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2159:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2144:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2144:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2136:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2178:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2203:6:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2196:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2196:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2189:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2189:22:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2171:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2171:41:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2171:41:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2095:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2106:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2117:4:42",
                    "type": ""
                  }
                ],
                "src": "2031:187:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2324:76:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2334:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2346:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2357:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2342:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2342:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2334:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2376:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2387:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2369:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2369:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2369:25:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2293:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2304:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2315:4:42",
                    "type": ""
                  }
                ],
                "src": "2223:177:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2517:102:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "2527:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2539:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2550:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2535:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2535:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2527:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2569:9:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2584:6:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2600:3:42",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2605:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2596:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2596:11:42"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2609:1:42",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2592:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2592:19:42"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2580:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2580:32:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2562:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2562:51:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2562:51:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2486:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2497:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2508:4:42",
                    "type": ""
                  }
                ],
                "src": "2405:214:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2745:476:42",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2755:12:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2765:2:42",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2759:2:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2783:9:42"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2794:2:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2776:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2776:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2776:21:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2806:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2826:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2820:5:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2820:13:42"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "2810:6:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2853:9:42"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2864:2:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2849:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2849:18:42"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2869:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2842:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2842:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2842:34:42"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2885:10:42",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2894:1:42",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "2889:1:42",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2954:90:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "2983:9:42"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2994:1:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2979:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2979:17:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2998:2:42",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2975:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2975:26:42"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value0",
                                              "nodeType": "YulIdentifier",
                                              "src": "3017:6:42"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "3025:1:42"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "3013:3:42"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3013:14:42"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "3029:2:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3009:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3009:23:42"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "3003:5:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3003:30:42"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2968:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2968:66:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2968:66:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2915:1:42"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2918:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2912:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2912:13:42"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "2926:19:42",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2928:15:42",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2937:1:42"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2940:2:42"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2933:3:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2933:10:42"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "2928:1:42"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "2908:3:42",
                        "statements": []
                      },
                      "src": "2904:140:42"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3078:66:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "headStart",
                                          "nodeType": "YulIdentifier",
                                          "src": "3107:9:42"
                                        },
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "3118:6:42"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3103:3:42"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3103:22:42"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3127:2:42",
                                      "type": "",
                                      "value": "64"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3099:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3099:31:42"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3132:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3092:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3092:42:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3092:42:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3059:1:42"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3062:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3056:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3056:13:42"
                      },
                      "nodeType": "YulIf",
                      "src": "3053:91:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3153:62:42",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3169:9:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3188:6:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3196:2:42",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3184:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3184:15:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3205:2:42",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "3201:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3201:7:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3180:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3180:29:42"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3165:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3165:45:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3212:2:42",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3161:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3161:54:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3153:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2714:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2725:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2736:4:42",
                    "type": ""
                  }
                ],
                "src": "2624:597:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3400:170:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3417:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3428:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3410:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3410:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3410:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3451:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3462:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3447:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3447:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3467:2:42",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3440:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3440:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3440:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3490:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3501:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3486:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3486:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a206e6f7420706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3506:22:42",
                            "type": "",
                            "value": "Pausable: not paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3479:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3479:50:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3479:50:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3538:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3550:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3561:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3546:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3546:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3538:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3377:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3391:4:42",
                    "type": ""
                  }
                ],
                "src": "3226:344:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3749:228:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3766:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3777:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3759:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3759:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3759:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3800:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3811:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3796:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3796:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3816:2:42",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3789:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3789:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3789:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3839:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3850:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3835:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3835:18:42"
                          },
                          {
                            "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3855:34:42",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3828:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3828:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3828:62:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3910:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3921:2:42",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3906:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3906:18:42"
                          },
                          {
                            "hexValue": "646472657373",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "3926:8:42",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3899:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3899:36:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3899:36:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3944:27:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3956:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3967:3:42",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3952:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3952:19:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3944:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3726:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3740:4:42",
                    "type": ""
                  }
                ],
                "src": "3575:402:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4156:166:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4173:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4184:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4166:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4166:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4166:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4207:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4218:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4203:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4203:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4223:2:42",
                            "type": "",
                            "value": "16"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4196:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4196:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4196:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4246:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4257:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4242:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4242:18:42"
                          },
                          {
                            "hexValue": "5061757361626c653a20706175736564",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4262:18:42",
                            "type": "",
                            "value": "Pausable: paused"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4235:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4235:46:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4235:46:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4290:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4302:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4313:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4298:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4298:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4290:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4133:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4147:4:42",
                    "type": ""
                  }
                ],
                "src": "3982:340:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4501:182:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4518:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4529:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4511:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4511:21:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4511:21:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4552:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4563:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4548:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4548:18:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4568:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4541:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4541:30:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4541:30:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4591:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4602:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4587:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4587:18:42"
                          },
                          {
                            "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "4607:34:42",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4580:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4580:62:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4580:62:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4651:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4663:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4674:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4659:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4659:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4651:4:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4478:9:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4492:4:42",
                    "type": ""
                  }
                ],
                "src": "4327:356:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4789:76:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4799:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4811:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4822:2:42",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4807:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4807:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4799:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4841:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4852:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4834:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4834:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4834:25:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4758:9:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4769:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "4780:4:42",
                    "type": ""
                  }
                ],
                "src": "4688:177:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5027:162:42",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5037:26:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5049:9:42"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5060:2:42",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5045:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5045:18:42"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5037:4:42"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5079:9:42"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5090:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5072:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5072:25:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5072:25:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5117:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5128:2:42",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5113:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5113:18:42"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "5133:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5106:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5106:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5106:34:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5160:9:42"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5171:2:42",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5156:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5156:18:42"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5176:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5149:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5149:34:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5149:34:42"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4980:9:42",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "4991:6:42",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4999:6:42",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5007:6:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5018:4:42",
                    "type": ""
                  }
                ],
                "src": "4870:319:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5242:80:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5269:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "5271:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5271:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5271:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5258:1:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "5265:1:42"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "5261:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5261:6:42"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5255:2:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5255:13:42"
                      },
                      "nodeType": "YulIf",
                      "src": "5252:39:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5300:16:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5311:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5314:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5307:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5307:9:42"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "5300:3:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "5225:1:42",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "5228:1:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "5234:3:42",
                    "type": ""
                  }
                ],
                "src": "5194:128:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5373:171:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5404:111:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5425:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5432:3:42",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "5437:10:42",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "5428:3:42"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5428:20:42"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5418:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5418:31:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5418:31:42"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5469:1:42",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5472:4:42",
                                  "type": "",
                                  "value": "0x12"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "5462:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5462:15:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5462:15:42"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5497:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5500:4:42",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "5490:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5490:15:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5490:15:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5393:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5386:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5386:9:42"
                      },
                      "nodeType": "YulIf",
                      "src": "5383:132:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5524:14:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5533:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5536:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "5529:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5529:9:42"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "5524:1:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "5358:1:42",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "5361:1:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "5367:1:42",
                    "type": ""
                  }
                ],
                "src": "5327:217:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5601:116:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5660:22:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "5662:16:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5662:18:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5662:18:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5632:1:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5625:6:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5625:9:42"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5618:6:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5618:17:42"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "5640:1:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5651:1:42",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5647:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5647:6:42"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5655:1:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "5643:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5643:14:42"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "5637:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5637:21:42"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5614:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5614:45:42"
                      },
                      "nodeType": "YulIf",
                      "src": "5611:71:42"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5691:20:42",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "5706:1:42"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5709:1:42"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "5702:3:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5702:9:42"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "5691:7:42"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "5580:1:42",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "5583:1:42",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "5589:7:42",
                    "type": ""
                  }
                ],
                "src": "5549:168:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5754:95:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5771:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5778:3:42",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5783:10:42",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5774:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5774:20:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5764:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5764:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5764:31:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5811:1:42",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5814:4:42",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5804:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5804:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5804:15:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5835:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5838:4:42",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5828:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5828:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5828:15:42"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "5722:127:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5886:95:42",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5903:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5910:3:42",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5915:10:42",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5906:3:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5906:20:42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5896:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5896:31:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5896:31:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5943:1:42",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5946:4:42",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5936:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5936:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5936:15:42"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5967:1:42",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5970:4:42",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5960:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5960:15:42"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5960:15:42"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "5854:127:42"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6031:86:42",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "6095:16:42",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6104:1:42",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6107:1:42",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "6097:6:42"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6097:12:42"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "6097:12:42"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6054:5:42"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6065:5:42"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6080:3:42",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6085:1:42",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "6076:3:42"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6076:11:42"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6089:1:42",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6072:3:42"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6072:19:42"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6061:3:42"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6061:31:42"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "6051:2:42"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6051:42:42"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6044:6:42"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6044:50:42"
                      },
                      "nodeType": "YulIf",
                      "src": "6041:70:42"
                    }
                  ]
                },
                "name": "validator_revert_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "6020:5:42",
                    "type": ""
                  }
                ],
                "src": "5986:131:42"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_ENS_$392__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
          "id": 42,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {
        "2385": [
          {
            "length": 32,
            "start": 346
          },
          {
            "length": 32,
            "start": 940
          }
        ]
      },
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xB811540E GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB811540E EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xC47F0027 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xE366B7BB EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xAA8C217C EQ PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x555D8EBB EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x103C92B EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x3314EFA EQ PUSH2 0x13E JUMPI DUP1 PUSH4 0x3F15457F EQ PUSH2 0x155 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11E PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH1 0x9A PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH1 0x97 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x17C PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x233 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x147 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x135 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x19C PUSH2 0x2E1 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17C JUMP JUMPDEST PUSH2 0x147 PUSH1 0x98 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x147 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x313 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x845 JUMP JUMPDEST PUSH2 0x34A JUMP JUMPDEST PUSH2 0x147 PUSH1 0x99 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19C PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x26E PUSH2 0x586 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x97 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x28C JUMPI PUSH2 0x286 DUP3 PUSH2 0x619 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x286 PUSH1 0x97 SLOAD PUSH2 0x2A7 PUSH1 0x98 SLOAD DUP6 PUSH2 0x64D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x26E PUSH1 0x0 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x71C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x98 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x329 JUMPI PUSH2 0x286 DUP3 PUSH2 0x797 JUMP JUMPDEST PUSH2 0x286 PUSH1 0x98 SLOAD PUSH2 0x344 PUSH1 0x97 SLOAD DUP6 PUSH2 0x7A7 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x7CF JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x374 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2571BE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x91D1777781884D03A6757A803996E38DE2A42967FB37EEACA72729271025A9E2 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2571BE3 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x40A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC47F0027 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xC47F0027 SWAP1 PUSH2 0x45D SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x90F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x48B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4AF SWAP2 SWAP1 PUSH2 0x82C JUMP JUMPDEST POP PUSH32 0x6AAA0865532D48A9A0F63CC91DF7FF2AB538C896665C864AE02D0A1E7F81CF65 DUP3 PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x90F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25D SWAP1 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x57A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x25D JUMP JUMPDEST PUSH2 0x583 DUP2 PUSH2 0x6CA JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x62B PUSH1 0x2 PUSH4 0x3B9ACA00 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP PUSH4 0x3B9ACA00 PUSH2 0x63C DUP5 DUP4 PUSH2 0x999 JUMP JUMPDEST PUSH2 0x646 SWAP2 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x666 DUP4 DUP6 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x67D PUSH1 0x2 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x9B1 JUMP JUMPDEST PUSH2 0x63C SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x695 PUSH1 0x2 DUP5 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x6AE PUSH12 0x33B2E3C9FD0803CE8000000 DUP7 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x6B8 SWAP1 DUP4 PUSH2 0x999 JUMP JUMPDEST PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0x9B1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x25D JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x5FC CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x286 PUSH4 0x3B9ACA00 DUP4 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7BC DUP4 DUP6 PUSH2 0x9D3 JUMP JUMPDEST PUSH2 0x67D PUSH1 0x2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x9B1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7DD PUSH1 0x2 DUP5 PUSH2 0x9B1 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x6AE PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x804 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x646 DUP2 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x646 DUP2 PUSH2 0xA1E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x857 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x895 JUMPI PUSH2 0x895 PUSH2 0xA08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x8BD JUMPI PUSH2 0x8BD PUSH2 0xA08 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x8D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x93C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x920 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x94E JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x9AC JUMPI PUSH2 0x9AC PUSH2 0x9F2 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x9CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x9ED JUMPI PUSH2 0x9ED PUSH2 0x9F2 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xABEEA81D2AB52F 0xE4 PUSH27 0x6A77555418516572159B523A1258AD02097BCC9C999E64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
      "sourceMap": "864:1239:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1522:50:19;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5072:25:42;;;5128:2;5113:18;;5106:34;;;;5156:18;;;5149:34;5060:2;5045:18;1522:50:19;;;;;;;;1043:21;;;;;;;;;2369:25:42;;;2357:2;2342:18;1043:21:19;2223:177:42;1073:24:22;;;;;;;;-1:-1:-1;;;;;1987:32:42;;;1969:51;;1957:2;1942:18;1073:24:22;1823:203:42;2027:74:22;;;:::i;:::-;;1838:253:19;;;;;;:::i;:::-;;:::i;1310:84:10:-;1380:7;;;;1310:84;;2196:14:42;;2189:22;2171:41;;2159:2;2144:18;1310:84:10;2031:187:42;1871:92:8;;;:::i;1904:68:22:-;;;:::i;1239:85:8:-;1311:6;;-1:-1:-1;;;;;1311:6:8;1239:85;;1096:21:19;;;;;;1579:253;;;;;;:::i;:::-;;:::i;1458:393:22:-;;;;;;:::i;:::-;;:::i;1174:32:19:-;;;;;;2112:189:8;;;;;;:::i;:::-;;:::i;2027:74:22:-;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;;;;;;;;;2084:10:22::1;:8;:10::i;:::-;2027:74::o:0;1838:253:19:-;1900:7;1923:6;;1933:1;1923:11;1919:116;;;2007:17;:7;:15;:17::i;:::-;2000:24;1838:253;-1:-1:-1;;1838:253:19:o;1919:116::-;2051:33;2077:6;;2051:20;2064:6;;2051:7;:12;;:20;;;;:::i;:::-;:25;;:33::i;1871:92:8:-;1311:6;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;1935:21:::1;1953:1;1935:9;:21::i;1904:68:22:-:0;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;1957:8:22::1;:6;:8::i;1579:253:19:-:0;1641:7;1664:6;;1674:1;1664:11;1660:116;;;1748:17;:7;:15;:17::i;1660:116::-;1792:33;1818:6;;1792:20;1805:6;;1792:7;:12;;:20;;;;:::i;:::-;:25;;:33::i;1458:393:22:-;1311:6:8;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;1602:28:22::1;::::0;-1:-1:-1;;;1602:28:22;;1000:66:::1;1602:28;::::0;::::1;2369:25:42::0;1533:36:22::1;::::0;1602:3:::1;-1:-1:-1::0;;;;;1602:9:22::1;::::0;::::1;::::0;2342:18:42;;1602:28:22::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1724:33;::::0;-1:-1:-1;;;1724:33:22;;1533:107;;-1:-1:-1;;;;;;1724:27:22;::::1;::::0;::::1;::::0;:33:::1;::::0;1752:4;;1724:33:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1820:24;1839:4;1820:24;;;;;;:::i;:::-;;;;;;;;1523:328;1458:393:::0;:::o;2112:189:8:-;1311:6;;-1:-1:-1;;;;;1311:6:8;902:10:11;1451:23:8;1443:68;;;;-1:-1:-1;;;1443:68:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2200:22:8;::::1;2192:73;;;::::0;-1:-1:-1;;;2192:73:8;;3777:2:42;2192:73:8::1;::::0;::::1;3759:21:42::0;3816:2;3796:18;;;3789:30;3855:34;3835:18;;;3828:62;-1:-1:-1;;;3906:18:42;;;3899:36;3952:19;;2192:73:8::1;3575:402:42::0;2192:73:8::1;2275:19;2285:8;2275:9;:19::i;:::-;2112:189:::0;:::o;2322:117:10:-;1380:7;;;;1881:41;;;;-1:-1:-1;;;1881:41:10;;3428:2:42;1881:41:10;;;3410:21:42;3467:2;3447:18;;;3440:30;-1:-1:-1;;;3486:18:42;;;3479:50;3546:18;;1881:41:10;3226:344:42;1881:41:10;2380:7:::1;:15:::0;;-1:-1:-1;;2380:15:10::1;::::0;;2410:22:::1;902:10:11::0;2419:12:10::1;2410:22;::::0;-1:-1:-1;;;;;1987:32:42;;;1969:51;;1957:2;1942:18;2410:22:10::1;;;;;;;2322:117::o:0;1487:146:41:-;1538:7;;1577:9;1585:1;923:3;1577:9;:::i;:::-;1557:29;-1:-1:-1;923:3:41;1604:13;1616:1;1557:29;1604:13;:::i;:::-;1603:23;;;;:::i;:::-;1596:30;1487:146;-1:-1:-1;;;1487:146:41:o;1210:119::-;1269:7;879:4;1309:5;1313:1;1309;:5;:::i;:::-;1297:7;1303:1;879:4;1297:7;:::i;:::-;1296:19;;;;:::i;1335:146::-;1394:7;;1429:5;1433:1;1429;:5;:::i;:::-;1413:21;-1:-1:-1;1473:1:41;1461:7;879:4;1461:1;:7;:::i;:::-;1452:17;;:5;:17;:::i;:::-;1451:23;;;;:::i;:::-;1444:30;1335:146;-1:-1:-1;;;;1335:146:41:o;2307:169:8:-;2381:6;;;-1:-1:-1;;;;;2397:17:8;;;-1:-1:-1;;;;;;2397:17:8;;;;;;;2429:40;;2381:6;;;2397:17;2381:6;;2429:40;;2362:16;;2429:40;2352:124;2307:169;:::o;2075:115:10:-;1380:7;;;;1623:9;1615:38;;;;-1:-1:-1;;;1615:38:10;;4184:2:42;1615:38:10;;;4166:21:42;4223:2;4203:18;;;4196:30;-1:-1:-1;;;4242:18:42;;;4235:46;4298:18;;1615:38:10;3982:340:42;1615:38:10;2134:7:::1;:14:::0;;-1:-1:-1;;2134:14:10::1;2144:4;2134:14;::::0;;2163:20:::1;2170:12;902:10:11::0;;823:96;1639:93:41;1690:7;1716:9;923:3;1716:1;:9;:::i;933:119::-;992:7;837:4;1032:5;1036:1;1032;:5;:::i;:::-;1020:7;1026:1;837:4;1020:7;:::i;1058:146::-;1117:7;;1152:5;1156:1;1152;:5;:::i;:::-;1136:21;-1:-1:-1;1196:1:41;1184:7;837:4;1184:1;:7;:::i;14:247:42:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:52;;;405:1;402;395:12;357:52;437:9;431:16;456:31;481:5;456:31;:::i;522:184::-;592:6;645:2;633:9;624:7;620:23;616:32;613:52;;;661:1;658;651:12;613:52;-1:-1:-1;684:16:42;;522:184;-1:-1:-1;522:184:42:o;711:922::-;780:6;833:2;821:9;812:7;808:23;804:32;801:52;;;849:1;846;839:12;801:52;889:9;876:23;918:18;959:2;951:6;948:14;945:34;;;975:1;972;965:12;945:34;1013:6;1002:9;998:22;988:32;;1058:7;1051:4;1047:2;1043:13;1039:27;1029:55;;1080:1;1077;1070:12;1029:55;1116:2;1103:16;1138:2;1134;1131:10;1128:36;;;1144:18;;:::i;:::-;1219:2;1213:9;1187:2;1273:13;;-1:-1:-1;;1269:22:42;;;1293:2;1265:31;1261:40;1249:53;;;1317:18;;;1337:22;;;1314:46;1311:72;;;1363:18;;:::i;:::-;1403:10;1399:2;1392:22;1438:2;1430:6;1423:18;1478:7;1473:2;1468;1464;1460:11;1456:20;1453:33;1450:53;;;1499:1;1496;1489:12;1450:53;1555:2;1550;1546;1542:11;1537:2;1529:6;1525:15;1512:46;1600:1;1578:15;;;1595:2;1574:24;1567:35;;;;-1:-1:-1;1582:6:42;711:922;-1:-1:-1;;;;;711:922:42:o;1638:180::-;1697:6;1750:2;1738:9;1729:7;1725:23;1721:32;1718:52;;;1766:1;1763;1756:12;1718:52;-1:-1:-1;1789:23:42;;1638:180;-1:-1:-1;1638:180:42:o;2624:597::-;2736:4;2765:2;2794;2783:9;2776:21;2826:6;2820:13;2869:6;2864:2;2853:9;2849:18;2842:34;2894:1;2904:140;2918:6;2915:1;2912:13;2904:140;;;3013:14;;;3009:23;;3003:30;2979:17;;;2998:2;2975:26;2968:66;2933:10;;2904:140;;;3062:6;3059:1;3056:13;3053:91;;;3132:1;3127:2;3118:6;3107:9;3103:22;3099:31;3092:42;3053:91;-1:-1:-1;3205:2:42;3184:15;-1:-1:-1;;3180:29:42;3165:45;;;;3212:2;3161:54;;2624:597;-1:-1:-1;;;2624:597:42:o;4327:356::-;4529:2;4511:21;;;4548:18;;;4541:30;4607:34;4602:2;4587:18;;4580:62;4674:2;4659:18;;4327:356::o;5194:128::-;5234:3;5265:1;5261:6;5258:1;5255:13;5252:39;;;5271:18;;:::i;:::-;-1:-1:-1;5307:9:42;;5194:128::o;5327:217::-;5367:1;5393;5383:132;;5437:10;5432:3;5428:20;5425:1;5418:31;5472:4;5469:1;5462:15;5500:4;5497:1;5490:15;5383:132;-1:-1:-1;5529:9:42;;5327:217::o;5549:168::-;5589:7;5655:1;5651;5647:6;5643:14;5640:1;5637:21;5632:1;5625:9;5618:17;5614:45;5611:71;;;5662:18;;:::i;:::-;-1:-1:-1;5702:9:42;;5549:168::o;5722:127::-;5783:10;5778:3;5774:20;5771:1;5764:31;5814:4;5811:1;5804:15;5838:4;5835:1;5828:15;5854:127;5915:10;5910:3;5906:20;5903:1;5896:31;5946:4;5943:1;5936:15;5970:4;5967:1;5960:15;5986:131;-1:-1:-1;;;;;6061:31:42;;6051:42;;6041:70;;6107:1;6104;6097:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "533000",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "amount()": "2362",
        "amountToShares(uint256)": "infinite",
        "ens()": "infinite",
        "owner()": "2376",
        "pause()": "29773",
        "paused()": "2359",
        "renounceOwnership()": "28206",
        "requiredLiquidity()": "2361",
        "setName(string)": "infinite",
        "shares()": "2341",
        "sharesToAmount(uint256)": "infinite",
        "transferOwnership(address)": "infinite",
        "unpause()": "29750",
        "userBalance(address)": "6801"
      }
    },
    "methodIdentifiers": {
      "amount()": "aa8c217c",
      "amountToShares(uint256)": "b811540e",
      "ens()": "3f15457f",
      "owner()": "8da5cb5b",
      "pause()": "8456cb59",
      "paused()": "5c975abb",
      "renounceOwnership()": "715018a6",
      "requiredLiquidity()": "e366b7bb",
      "setName(string)": "c47f0027",
      "shares()": "03314efa",
      "sharesToAmount(uint256)": "555d8ebb",
      "transferOwnership(address)": "f2fde38b",
      "unpause()": "3f4ba83a",
      "userBalance(address)": "0103c92b"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ens\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"StakingPoolRenamed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"amountToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ens\",\"outputs\":[{\"internalType\":\"contract ENS\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"setName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"sharesToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"depositTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"StakingPoolRenamed(string)\":{\"notice\":\"Event emmited when a pool is rename\"}},\"kind\":\"user\",\"methods\":{\"pause()\":{\"notice\":\"pauses new staking on the pool\"},\"setName(string)\":{\"notice\":\"sets a name for the pool using ENS service\"},\"unpause()\":{\"notice\":\"unpauses new staking on the pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPoolManagementImpl.sol\":\"StakingPoolManagementImpl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\ninterface ENS {\\n\\n    // Logged when the owner of a node assigns a new owner to a subnode.\\n    event NewOwner(bytes32 indexed node, bytes32 indexed label, address owner);\\n\\n    // Logged when the owner of a node transfers ownership to a new account.\\n    event Transfer(bytes32 indexed node, address owner);\\n\\n    // Logged when the resolver for a node changes.\\n    event NewResolver(bytes32 indexed node, address resolver);\\n\\n    // Logged when the TTL of a node changes\\n    event NewTTL(bytes32 indexed node, uint64 ttl);\\n\\n    // Logged when an operator is added or removed.\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    function setRecord(bytes32 node, address owner, address resolver, uint64 ttl) external virtual;\\n    function setSubnodeRecord(bytes32 node, bytes32 label, address owner, address resolver, uint64 ttl) external virtual;\\n    function setSubnodeOwner(bytes32 node, bytes32 label, address owner) external virtual returns(bytes32);\\n    function setResolver(bytes32 node, address resolver) external virtual;\\n    function setOwner(bytes32 node, address owner) external virtual;\\n    function setTTL(bytes32 node, uint64 ttl) external virtual;\\n    function setApprovalForAll(address operator, bool approved) external virtual;\\n    function owner(bytes32 node) external virtual view returns (address);\\n    function resolver(bytes32 node) external virtual view returns (address);\\n    function ttl(bytes32 node) external virtual view returns (uint64);\\n    function recordExists(bytes32 node) external virtual view returns (bool);\\n    function isApprovedForAll(address owner, address operator) external virtual view returns (bool);\\n}\\n\",\"keccak256\":\"0x942ef29bd7c0f62228aeb91879ddd1ba101f52a2162970d3e48adffa498f4483\"},\"@ensdomains/ens-contracts/contracts/registry/ReverseRegistrar.sol\":{\"content\":\"pragma solidity >=0.8.4;\\n\\nimport \\\"./ENS.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../root/Controllable.sol\\\";\\n\\nabstract contract NameResolver {\\n    function setName(bytes32 node, string memory name) public virtual;\\n}\\n\\nbytes32 constant lookup = 0x3031323334353637383961626364656600000000000000000000000000000000;\\n\\nbytes32 constant ADDR_REVERSE_NODE = 0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n// namehash('addr.reverse')\\n\\ncontract ReverseRegistrar is Ownable, Controllable {\\n    ENS public ens;\\n    NameResolver public defaultResolver;\\n\\n    event ReverseClaimed(address indexed addr, bytes32 indexed node);\\n\\n    /**\\n     * @dev Constructor\\n     * @param ensAddr The address of the ENS registry.\\n     * @param resolverAddr The address of the default reverse resolver.\\n     */\\n    constructor(ENS ensAddr, NameResolver resolverAddr) {\\n        ens = ensAddr;\\n        defaultResolver = resolverAddr;\\n\\n        // Assign ownership of the reverse record to our deployer\\n        ReverseRegistrar oldRegistrar = ReverseRegistrar(\\n            ens.owner(ADDR_REVERSE_NODE)\\n        );\\n        if (address(oldRegistrar) != address(0x0)) {\\n            oldRegistrar.claim(msg.sender);\\n        }\\n    }\\n\\n    modifier authorised(address addr) {\\n        require(\\n            addr == msg.sender ||\\n                controllers[msg.sender] ||\\n                ens.isApprovedForAll(addr, msg.sender) ||\\n                ownsContract(addr),\\n            \\\"Caller is not a controller or authorised by address or the address itself\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claim(address owner) public returns (bytes32) {\\n        return _claimWithResolver(msg.sender, owner, address(0x0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param addr The reverse record to set\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claimForAddr(address addr, address owner)\\n        public\\n        authorised(addr)\\n        returns (bytes32)\\n    {\\n        return _claimWithResolver(addr, owner, address(0x0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record associated with the\\n     *      calling account.\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @param resolver The address of the resolver to set; 0 to leave unchanged.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claimWithResolver(address owner, address resolver)\\n        public\\n        returns (bytes32)\\n    {\\n        return _claimWithResolver(msg.sender, owner, resolver);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the reverse ENS record specified with the\\n     *      address provided\\n     * @param addr The reverse record to set\\n     * @param owner The address to set as the owner of the reverse record in ENS.\\n     * @param resolver The address of the resolver to set; 0 to leave unchanged.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function claimWithResolverForAddr(\\n        address addr,\\n        address owner,\\n        address resolver\\n    ) public authorised(addr) returns (bytes32) {\\n        return _claimWithResolver(addr, owner, resolver);\\n    }\\n\\n    /**\\n     * @dev Sets the `name()` record for the reverse ENS record associated with\\n     * the calling account. First updates the resolver to the default reverse\\n     * resolver if necessary.\\n     * @param name The name to set for this address.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function setName(string memory name) public returns (bytes32) {\\n        bytes32 node = _claimWithResolver(\\n            msg.sender,\\n            address(this),\\n            address(defaultResolver)\\n        );\\n        defaultResolver.setName(node, name);\\n        return node;\\n    }\\n\\n    /**\\n     * @dev Sets the `name()` record for the reverse ENS record associated with\\n     * the account provided. First updates the resolver to the default reverse\\n     * resolver if necessary.\\n     * Only callable by controllers and authorised users\\n     * @param addr The reverse record to set\\n     * @param owner The owner of the reverse node\\n     * @param name The name to set for this address.\\n     * @return The ENS node hash of the reverse record.\\n     */\\n    function setNameForAddr(\\n        address addr,\\n        address owner,\\n        string memory name\\n    ) public authorised(addr) returns (bytes32) {\\n        bytes32 node = _claimWithResolver(\\n            addr,\\n            address(this),\\n            address(defaultResolver)\\n        );\\n        defaultResolver.setName(node, name);\\n        ens.setSubnodeOwner(ADDR_REVERSE_NODE, sha3HexAddress(addr), owner);\\n        return node;\\n    }\\n\\n    /**\\n     * @dev Returns the node hash for a given account's reverse records.\\n     * @param addr The address to hash\\n     * @return The ENS node hash.\\n     */\\n    function node(address addr) public pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encodePacked(ADDR_REVERSE_NODE, sha3HexAddress(addr))\\n            );\\n    }\\n\\n    /**\\n     * @dev An optimised function to compute the sha3 of the lower-case\\n     *      hexadecimal representation of an Ethereum address.\\n     * @param addr The address to hash\\n     * @return ret The SHA3 hash of the lower-case hexadecimal encoding of the\\n     *         input address.\\n     */\\n    function sha3HexAddress(address addr) private pure returns (bytes32 ret) {\\n        assembly {\\n            for {\\n                let i := 40\\n            } gt(i, 0) {\\n\\n            } {\\n                i := sub(i, 1)\\n                mstore8(i, byte(and(addr, 0xf), lookup))\\n                addr := div(addr, 0x10)\\n                i := sub(i, 1)\\n                mstore8(i, byte(and(addr, 0xf), lookup))\\n                addr := div(addr, 0x10)\\n            }\\n\\n            ret := keccak256(0, 40)\\n        }\\n    }\\n\\n    /* Internal functions */\\n\\n    function _claimWithResolver(\\n        address addr,\\n        address owner,\\n        address resolver\\n    ) internal returns (bytes32) {\\n        bytes32 label = sha3HexAddress(addr);\\n        bytes32 node = keccak256(abi.encodePacked(ADDR_REVERSE_NODE, label));\\n        address currentResolver = ens.resolver(node);\\n        bool shouldUpdateResolver = (resolver != address(0x0) &&\\n            resolver != currentResolver);\\n        address newResolver = shouldUpdateResolver ? resolver : currentResolver;\\n\\n        ens.setSubnodeRecord(ADDR_REVERSE_NODE, label, owner, newResolver, 0);\\n\\n        emit ReverseClaimed(addr, node);\\n\\n        return node;\\n    }\\n\\n    function ownsContract(address addr) internal view returns (bool) {\\n        try Ownable(addr).owner() returns (address owner) {\\n            return owner == msg.sender;\\n        } catch {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x6151b50f057afe5e32f9ef2f05b3c5c3ac8719b5900aead76d60be4356997ef6\"},\"@ensdomains/ens-contracts/contracts/root/Controllable.sol\":{\"content\":\"pragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Controllable is Ownable {\\n    mapping(address => bool) public controllers;\\n\\n    event ControllerChanged(address indexed controller, bool enabled);\\n\\n    modifier onlyController {\\n        require(\\n            controllers[msg.sender],\\n            \\\"Controllable: Caller is not a controller\\\"\\n        );\\n        _;\\n    }\\n\\n    function setController(address controller, bool enabled) public onlyOwner {\\n        controllers[controller] = enabled;\\n        emit ControllerChanged(controller, enabled);\\n    }\\n}\\n\",\"keccak256\":\"0x0c364a5b65b6fff279adbe1fd6498c488feabeec781599cd60a5844e80ee7d88\"},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/StakingPoolData.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\n\\nimport \\\"./utils/WadRayMath.sol\\\";\\n\\ncontract StakingPoolData is\\n    Initializable,\\n    PausableUpgradeable,\\n    OwnableUpgradeable\\n{\\n    using WadRayMath for uint256;\\n    uint256 public shares; // total number of shares\\n    uint256 public amount; // amount of staked tokens (no matter where it is)\\n    uint256 public requiredLiquidity; // amount of required tokens for withdraw requests\\n\\n    struct UserBalance {\\n        uint256 balance; // amount of free tokens belonging to this user\\n        uint256 shares; // amount of shares beloging to this user\\n        uint256 depositTimestamp; // timestamp of when user deposited for the last time\\n    }\\n    mapping(address => UserBalance) public userBalance;\\n\\n    function amountToShares(uint256 _amount) public view returns (uint256) {\\n        if (amount == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _amount.wad2ray();\\n        }\\n        return _amount.wmul(shares).wdiv(amount);\\n    }\\n\\n    function sharesToAmount(uint256 _shares) public view returns (uint256) {\\n        if (shares == 0) {\\n            // no shares yet, return 1 to 1 ratio\\n            return _shares.ray2wad();\\n        }\\n        return _shares.rmul(amount).rdiv(shares);\\n    }\\n}\\n\",\"keccak256\":\"0x7732eeafe1262115f4ae96af97263de7fb91ff596410880551fdbc0e7697c1eb\",\"license\":\"Apache-2.0\"},\"contracts/StakingPoolManagementImpl.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@ensdomains/ens-contracts/contracts/registry/ReverseRegistrar.sol\\\";\\nimport \\\"@ensdomains/ens-contracts/contracts/registry/ENS.sol\\\";\\n\\nimport \\\"./interfaces/StakingPoolManagement.sol\\\";\\nimport \\\"./StakingPoolData.sol\\\";\\n\\ncontract StakingPoolManagementImpl is StakingPoolManagement, StakingPoolData {\\n    bytes32 private constant ADDR_REVERSE_NODE =\\n        0x91d1777781884d03a6757a803996e38de2a42967fb37eeaca72729271025a9e2;\\n\\n    ENS public immutable ens;\\n\\n    // all immutable variables can stay at the constructor\\n    constructor(address _ens) initializer {\\n        require(_ens != address(0), \\\"parameter can not be zero address\\\");\\n        ens = ENS(_ens);\\n\\n        // make sure reference code is pause so no one stake to it\\n        _pause();\\n    }\\n\\n    /// @notice sets a name for the pool using ENS service\\n    function setName(string memory name) external override onlyOwner {\\n        ReverseRegistrar ensReverseRegistrar = ReverseRegistrar(\\n            ens.owner(ADDR_REVERSE_NODE)\\n        );\\n\\n        // call the ENS reverse registrar resolving pool address to name\\n        ensReverseRegistrar.setName(name);\\n\\n        // emit event, for subgraph processing\\n        emit StakingPoolRenamed(name);\\n    }\\n\\n    /// @notice pauses new staking on the pool\\n    function pause() public override onlyOwner {\\n        _pause();\\n    }\\n\\n    /// @notice unpauses new staking on the pool\\n    function unpause() external override onlyOwner {\\n        _unpause();\\n    }\\n}\\n\",\"keccak256\":\"0xbe9e6197e7905ec33b12f532e4465197ab06c853ff8ed35d6442ab176f807164\",\"license\":\"Apache-2.0\"},\"contracts/interfaces/StakingPoolManagement.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\npragma solidity >=0.7.0;\\n\\ninterface StakingPoolManagement {\\n    /// @notice sets a name for the pool using ENS service\\n    function setName(string memory name) external;\\n\\n    /// @notice pauses new staking on the pool\\n    function pause() external;\\n\\n    /// @notice unpauses new staking on the pool\\n    function unpause() external;\\n\\n    /// @notice Event emmited when a pool is rename\\n    event StakingPoolRenamed(string name);\\n}\\n\",\"keccak256\":\"0xff9727e06a79e361f3873da5336d7a7c976f1163b763ccece276c37e046038cf\",\"license\":\"Apache-2.0\"},\"contracts/utils/WadRayMath.sol\":{\"content\":\"// Copyright 2021 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Wad and Ray Math library\\n/// @dev Math operations for wads (fixed point with 18 digits) and rays (fixed points with 27 digits)\\npragma solidity ^0.8.0;\\n\\nlibrary WadRayMath {\\n    uint256 internal constant WAD = 1e18;\\n    uint256 internal constant RAY = 1e27;\\n    uint256 internal constant RATIO = 1e9;\\n\\n    function wmul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return ((WAD / 2) + (a * b)) / WAD;\\n    }\\n\\n    function wdiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 halfB = b / 2;\\n        return (halfB + (a * WAD)) / b;\\n    }\\n\\n    function rmul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return ((RAY / 2) + (a * b)) / RAY;\\n    }\\n\\n    function rdiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 halfB = b / 2;\\n        return (halfB + (a * RAY)) / b;\\n    }\\n\\n    function ray2wad(uint256 a) internal pure returns (uint256) {\\n        uint256 halfRatio = RATIO / 2;\\n        return (halfRatio + a) / RATIO;\\n    }\\n\\n    function wad2ray(uint256 a) internal pure returns (uint256) {\\n        return a * RATIO;\\n    }\\n}\\n\",\"keccak256\":\"0x1adf36cd91770f989f5700c4fa44c3c08f8bf1df12b9c8816723193e9751a65e\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 979,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 982,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1175,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 1040,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "_paused",
        "offset": 0,
        "slot": "51",
        "type": "t_bool"
      },
      {
        "astId": 1131,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 859,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 972,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1862,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "shares",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 1864,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "amount",
        "offset": 0,
        "slot": "152",
        "type": "t_uint256"
      },
      {
        "astId": 1866,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "requiredLiquidity",
        "offset": 0,
        "slot": "153",
        "type": "t_uint256"
      },
      {
        "astId": 1878,
        "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
        "label": "userBalance",
        "offset": 0,
        "slot": "154",
        "type": "t_mapping(t_address,t_struct(UserBalance)1873_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(UserBalance)1873_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct StakingPoolData.UserBalance)",
        "numberOfBytes": "32",
        "value": "t_struct(UserBalance)1873_storage"
      },
      "t_struct(UserBalance)1873_storage": {
        "encoding": "inplace",
        "label": "struct StakingPoolData.UserBalance",
        "members": [
          {
            "astId": 1868,
            "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
            "label": "balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1870,
            "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
            "label": "shares",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1872,
            "contract": "contracts/StakingPoolManagementImpl.sol:StakingPoolManagementImpl",
            "label": "depositTimestamp",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "events": {
      "StakingPoolRenamed(string)": {
        "notice": "Event emmited when a pool is rename"
      }
    },
    "kind": "user",
    "methods": {
      "pause()": {
        "notice": "pauses new staking on the pool"
      },
      "setName(string)": {
        "notice": "sets a name for the pool using ENS service"
      },
      "unpause()": {
        "notice": "unpauses new staking on the pool"
      }
    },
    "version": 1
  }
}